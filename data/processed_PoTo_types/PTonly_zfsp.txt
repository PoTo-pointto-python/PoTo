('/explore.py', 'module_initializer', 'zfuse') [None]
('/explore.py', 'module_initializer', 'VERBOSE_LEVELS') [list]
('/explore.py', 'module_initializer', 'TRY_LEVELS') [list]
('/explore.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/pyndata/field.py', 'module_initializer', '__nextfield__') [<method-wrapper '__next__' of itertools.count object at 0x105f86f80>,,, <method-wrapper '__next__' of itertools.count object at 0x10ab08780>,,, <method-wrapper '__next__' of itertools.count object at 0x10ab42ac0>,,, <method-wrapper '__next__' of itertools.count object at 0x10aca4900>,,, <method-wrapper '__next__' of itertools.count object at 0x10acc9900>,,, <method-wrapper '__next__' of itertools.count object at 0x10adf6140>,,, <method-wrapper '__next__' of itertools.count object at 0x10ae10100>,,, <method-wrapper '__next__' of itertools.count object at 0x10b05b440>,,, <method-wrapper '__next__' of itertools.count object at 0x10b072240>,,, <method-wrapper '__next__' of itertools.count object at 0x10b079e40>,,, <method-wrapper '__next__' of itertools.count object at 0x10b095b40>,,, <method-wrapper '__next__' of itertools.count object at 0x10b0d4800>,,, <method-wrapper '__next__' of itertools.count object at 0x10bfdd3c0>,,, <method-wrapper '__next__' of itertools.count object at 0x10bfddc40>,,, <method-wrapper '__next__' of itertools.count object at 0x10c1f6540>,,, <method-wrapper '__next__' of itertools.count object at 0x10c209e80>,,, <method-wrapper '__next__' of itertools.count object at 0x10c27dd80>,,, <method-wrapper '__next__' of itertools.count object at 0x10c50bc80>,,, <method-wrapper '__next__' of itertools.count object at 0x10c529000>,,, <method-wrapper '__next__' of itertools.count object at 0x10c615380>]
('/pyndata/field.py', 'Field_class_initializer', '__DEFAULT__') [None]
('/pyndata/field.py', 'Field_class_initializer', '__SHOW__') [bool]
('/pyndata/integer.py', 'module_initializer', '__all__') [list]
('/pyndata/integer.py', 'integer_class_initializer', '__TYPE__') [str]
('/pyndata/integer.py', 'integer_class_initializer', '__DEFAULT__') [int]
('/pyndata/integer.py', 'integer_class_initializer', '__ENDIAN__') [None]
('/pyndata/integer.py', 'int8_class_initializer', '__TYPE__') [str]
('/pyndata/integer.py', 'int16_class_initializer', '__TYPE__') [str]
('/pyndata/integer.py', 'int32_class_initializer', '__TYPE__') [str]
('/pyndata/integer.py', 'int64_class_initializer', '__TYPE__') [str]
('/pyndata/integer.py', 'uint8_class_initializer', '__TYPE__') [str]
('/pyndata/integer.py', 'uint16_class_initializer', '__TYPE__') [str]
('/pyndata/integer.py', 'uint32_class_initializer', '__TYPE__') [str]
('/pyndata/integer.py', 'uint64_class_initializer', '__TYPE__') [str]
('/pyndata/bitfield.py', 'BitField_class_initializer', 'default') [int]
('/pyndata/bitfield.py', 'BitField_class_initializer', '__SHOW__') [bool]
('/pyndata/structure.py', 'Struct_class_initializer', '__metaclass__') [StructMeta]
('/pyndata/structure.py', 'Struct_class_initializer', '__ENDIAN__') [str]
('/pyndata/array.py', 'module_initializer', 'xrange') [range]
('/zfs/vdevs.py', 'module_initializer', 'LABEL_PAD') [int]
('/zfs/vdevs.py', 'module_initializer', 'UBER_AREA') [int]
('/zfs/vdevs.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/zfs/vdevs.py', 'VDev_class_initializer', 'LABELS') [tuple]
('/zfs/datasets.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/zfs/objectset.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/zfs/objectset.py', 'module_initializer', 'MicroZAPType') []
('/zfs/zfuse.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/zfs/readcontext.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/zfs/history.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/zfs/posix/__init__.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/pyndata/__init__.py', 'module_initializer', '__all__') [list]
('/pyndata/__init__.py', 'module_initializer', 'name') [str]
('/pyndata/__init__.py', 'module_initializer', 'o') []
('/zfs/posix/directory.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/zfs/posix/directory.py', 'DirectoryEntry_class_initializer', '__ENDIAN__') [str]
('/zfs/posix/directory.py', 'DirectoryEntry_class_initializer', 'name') [nullstring]
('/zfs/posix/directory.py', 'DirectoryEntry_class_initializer', 'value') [uint64]
('/zfs/posix/directory.py', 'DirectoryEntry_class_initializer', 'object_type') [BitField]
('/zfs/posix/directory.py', 'DirectoryEntry_class_initializer', 'number') [BitField]
('/zfs/posix/attributes/systemattributes.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/zfs/posix/attributes/systemattributes.py', 'module_initializer', 'SYSTEM_ATTRIBUTES') [dict]
('/zfs/posix/attributes/systemattributes.py', 'SystemAttributeMagic_class_initializer', 'magic') [bytestring]
('/zfs/posix/attributes/systemattributes.py', 'SystemAttributeMagic_class_initializer', 'layout') [uint8]
('/zfs/posix/attributes/systemattributes.py', 'SystemAttributeMagic_class_initializer', 'unknown1') [uint8]
('/zfs/posix/attributes/systemattributes.py', 'SystemAttributeMagic_class_initializer', 'unknown2') [padding]
('/zfs/posix/attributes/systemattributes.py', 'SystemAttributeMagic_class_initializer', 'unknown3') [bytestring]
('/zfs/posix/attributes/__init__.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/zfs/posix/attributes/__init__.py', 'PosixType_class_initializer', 'FIFO') [int]
('/zfs/posix/attributes/__init__.py', 'PosixType_class_initializer', 'CHARACTER') [int]
('/zfs/posix/attributes/__init__.py', 'PosixType_class_initializer', 'DIRECTORY') [int]
('/zfs/posix/attributes/__init__.py', 'PosixType_class_initializer', 'BLOCK') [int]
('/zfs/posix/attributes/__init__.py', 'PosixType_class_initializer', 'REGULAR_FILE') [int]
('/zfs/posix/attributes/__init__.py', 'PosixType_class_initializer', 'SYMLINK') [int]
('/zfs/posix/attributes/__init__.py', 'PosixType_class_initializer', 'SOCKET') [int]
('/zfs/posix/attributes/__init__.py', 'PosixType_class_initializer', 'DOOR') [int]
('/zfs/posix/attributes/__init__.py', 'PosixType_class_initializer', 'PORT') [int]
('/zfs/posix/attributes/__init__.py', 'Mode_class_initializer', '__ENDIAN__') [str]
('/zfs/posix/attributes/__init__.py', 'Mode_class_initializer', 'mode') [uint64]
('/zfs/posix/attributes/__init__.py', 'Mode_class_initializer', 'perms') [BitField]
('/zfs/posix/attributes/__init__.py', 'Mode_class_initializer', 'unknown') [BitField]
('/zfs/posix/attributes/__init__.py', 'Mode_class_initializer', 'file_type') [BitField]
('/zfs/posix/attributes/__init__.py', 'Timestamp_class_initializer', '__ENDIAN__') [str]
('/zfs/posix/attributes/__init__.py', 'Timestamp_class_initializer', 'seconds') [uint64]
('/zfs/posix/attributes/__init__.py', 'Timestamp_class_initializer', 'nanoseconds') [uint64]
('/zfs/posix/attributes/__init__.py', 'ZNodeACE_class_initializer', 'who') [uint32]
('/zfs/posix/attributes/__init__.py', 'ZNodeACE_class_initializer', 'access_mask') [uint32]
('/zfs/posix/attributes/__init__.py', 'ZNodeACE_class_initializer', 'flags') [uint16]
('/zfs/posix/attributes/__init__.py', 'ZNodeACE_class_initializer', 'type') [uint16]
('/zfs/posix/attributes/__init__.py', 'ZNodeACL_class_initializer', 'external_object') [uint64]
('/zfs/posix/attributes/__init__.py', 'ZNodeACL_class_initializer', 'count') [uint32]
('/zfs/posix/attributes/__init__.py', 'ZNodeACL_class_initializer', 'version') [uint16]
('/zfs/posix/attributes/__init__.py', 'ZNodeACL_class_initializer', '_padding') [padding]
('/zfs/posix/attributes/__init__.py', 'ZNodeACL_class_initializer', 'aces') [array]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', '__ENDIAN__') [str]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'ZPL_ATIME') [Timestamp]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'ZPL_MTIME') [Timestamp]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'ZPL_CTIME') [Timestamp]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'ZPL_CRTIME') [Timestamp]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'ZPL_GEN') [uint64]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'ZPL_MODE') [Mode]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'ZPL_SIZE') [uint64]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'ZPL_PARENT') [uint64]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'ZPL_LINKS') [uint64]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'ZPL_XATTR') [uint64]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'ZPL_RDEV') [uint64]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'ZPL_FLAGS') [uint64]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'ZPL_UID') [uint64]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'ZPL_GID') [uint64]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'padding') [array]
('/zfs/posix/attributes/__init__.py', 'DefaultAttrsV1_class_initializer', 'acl') [ZNodeACL]
('/zfs/posix/posix_file.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/zfs/ondisk/zap.py', 'ZapType_class_initializer', 'ZAPLeaf') [int]
('/zfs/ondisk/zap.py', 'ZapType_class_initializer', 'ZAPHeader') [int]
('/zfs/ondisk/zap.py', 'ZapType_class_initializer', 'MicroZAP') [int]
('/zfs/ondisk/zap.py', 'MicroZAPHeader_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/zap.py', 'MicroZAPHeader_class_initializer', 'block_type') [uint64]
('/zfs/ondisk/zap.py', 'MicroZAPHeader_class_initializer', 'salt') [uint64]
('/zfs/ondisk/zap.py', 'MicroZAPHeader_class_initializer', 'flags') [uint64]
('/zfs/ondisk/zap.py', 'MicroZAPHeader_class_initializer', '_pad') [padding]
('/zfs/ondisk/zap.py', 'MicroZAPCommon_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/zap.py', 'MicroZAPCommon_class_initializer', '_pad') [uint16]
('/zfs/ondisk/zap.py', 'MicroZAPCommon_class_initializer', 'collision') [uint32]
('/zfs/ondisk/zap.py', 'MicroZAPCommon_class_initializer', 'name') [nullstring]
('/zfs/ondisk/zap.py', 'MicroZAP_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/zap.py', 'MicroZAP_class_initializer', 'value') [uint64]
('/zfs/ondisk/zap.py', 'MicroZAP_class_initializer', 'hdr') [MicroZAPCommon]
('/zfs/ondisk/zap.py', 'SARegistrationMicroZAP_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/zap.py', 'SARegistrationMicroZAP_class_initializer', '_value') [uint64]
('/zfs/ondisk/zap.py', 'SARegistrationMicroZAP_class_initializer', 'attr_num') [BitField]
('/zfs/ondisk/zap.py', 'SARegistrationMicroZAP_class_initializer', 'byteswap') [BitField]
('/zfs/ondisk/zap.py', 'SARegistrationMicroZAP_class_initializer', 'length') [BitField]
('/zfs/ondisk/zap.py', 'SARegistrationMicroZAP_class_initializer', 'hdr') [MicroZAPCommon]
('/zfs/ondisk/__init__.py', 'module_initializer', 'Objset') [ObjsetV1]
('/zfs/ondisk/__init__.py', 'module_initializer', 'ObjectsetTypes') []
('/zfs/ondisk/__init__.py', 'module_initializer', 'Objectsets') []
('/zfs/ondisk/__init__.py', 'module_initializer', 'indirect_cache') [dict]
('/zfs/ondisk/__init__.py', 'dva_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/__init__.py', 'dva_class_initializer', '_first') [uint64]
('/zfs/ondisk/__init__.py', 'dva_class_initializer', 'vdev') [BitField]
('/zfs/ondisk/__init__.py', 'dva_class_initializer', 'grid') [BitField]
('/zfs/ondisk/__init__.py', 'dva_class_initializer', 'asize') [BitField]
('/zfs/ondisk/__init__.py', 'dva_class_initializer', '_offset') [uint64]
('/zfs/ondisk/__init__.py', 'dva_class_initializer', 'gang') [BitField]
('/zfs/ondisk/__init__.py', 'dva_class_initializer', 'offset') [BitField]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'dvas') [array]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', '_prop') [uint64]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'logical_size') [BitField]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'physical_size') [BitField]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'compression') [BitField]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'encryption') [BitField]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'embedded') [BitField]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'checksum_type') [BitField]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'object_type') [BitField]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'level') [BitField]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'dedup') [BitField]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'endian') [BitField]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'pad') [padding]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'phys_birth') [uint64]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'birth') [uint64]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'fill') [uint64]
('/zfs/ondisk/__init__.py', 'Blockptr_class_initializer', 'checksum') [array]
('/zfs/constants.py', 'module_initializer', 'POOL_VERSION') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'INHERIT') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'ON') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'OFF') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'LZJB') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'EMPTY') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'GZIP_1') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'GZIP_2') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'GZIP_3') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'GZIP_4') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'GZIP_5') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'GZIP_6') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'GZIP_7') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'GZIP_8') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'GZIP_9') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'ZLE') [int]
('/zfs/constants.py', 'Compression_class_initializer', 'LZ4') [int]
('/zfs/constants.py', 'Checksum_class_initializer', 'INHERIT') [int]
('/zfs/constants.py', 'Checksum_class_initializer', 'ON') [int]
('/zfs/constants.py', 'Checksum_class_initializer', 'OFF') [int]
('/zfs/constants.py', 'Checksum_class_initializer', 'LABEL') [int]
('/zfs/constants.py', 'Checksum_class_initializer', 'GANG_HEADER') [int]
('/zfs/constants.py', 'Checksum_class_initializer', 'ZILOG') [int]
('/zfs/constants.py', 'Checksum_class_initializer', 'FLETCHER_2') [int]
('/zfs/constants.py', 'Checksum_class_initializer', 'FLETCHER_4') [int]
('/zfs/constants.py', 'Checksum_class_initializer', 'SHA256') [int]
('/zfs/constants.py', 'Checksum_class_initializer', 'ZILOG2') [int]
('/zfs/constants.py', 'Checksum_class_initializer', 'NOPARITY') [int]
('/zfs/constants.py', 'ObjectSetType_class_initializer', 'NONE') [int]
('/zfs/constants.py', 'ObjectSetType_class_initializer', 'META') [int]
('/zfs/constants.py', 'ObjectSetType_class_initializer', 'ZFS') [int]
('/zfs/constants.py', 'ObjectSetType_class_initializer', 'ZVOL') [int]
('/zfs/constants.py', 'TryConfig_class_initializer', 'read_all_dvas') [bool]
('/zfs/constants.py', 'ObjectType_class_initializer', 'NONE') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'OBJECT_DIRECTORY') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'OBJECT_ARRAY') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'PACKED_NVLIST') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'PACKED_NVLIST_SIZE') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'BPOBJ') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'BPOBJ_HDR') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'SPACE_MAP_HEADER') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'SPACE_MAP') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'INTENT_LOG') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'DNODE') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'OBJSET') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'DSL_DIR') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'DSL_DIR_CHILD_MAP') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'DSL_DS_SNAP_MAP') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'DSL_PROPS') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'DSL_DATASET') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'ZNODE') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'OLDACL') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'PLAIN_FILE_CONTENTS') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'DIRECTORY_CONTENTS') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'MASTER_NODE') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'UNLINKED_SET') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'ZVOL') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'ZVOL_PROP') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'PLAIN_OTHER') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'UINT64_OTHER') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'ZAP_OTHER') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'ERROR_LOG') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'SPA_HISTORY') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'SPA_HISTORY_OFFSETS') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'POOL_PROPS') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'DSL_PERMS') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'ACL') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'SYSACL') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'FUID') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'FUID_SIZE') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'NEXT_CLONES') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'SCAN_QUEUE') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'USERGROUP_USED') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'USERGROUP_QUOTA') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'USERREFS') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'DDT_ZAP') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'DDT_STATS') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'SA') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'SA_MASTER_NODE') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'SA_ATTR_REGISTRATION') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'SA_ATTR_LAYOUTS') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'SCAN_XLATE') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'DEDUP') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'DEADLIST') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'DEADLIST_HDR') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'DSL_CLONES') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'BPOBJ_SUBOBJ') [int]
('/zfs/constants.py', 'ObjectType_class_initializer', 'FEATURE_DESCRIPTION') [int]
('/zfs/constants.py', 'ZILTypes_class_initializer', 'CREATE') [int]
('/zfs/constants.py', 'ZILTypes_class_initializer', 'MKDIR') [int]
('/zfs/constants.py', 'ZILTypes_class_initializer', 'MKXATTR') [int]
('/zfs/constants.py', 'ZILTypes_class_initializer', 'SYMLINK') [int]
('/zfs/constants.py', 'ZILTypes_class_initializer', 'REMOVE') [int]
('/zfs/constants.py', 'ZILTypes_class_initializer', 'RMDIR') [int]
('/zfs/constants.py', 'ZILTypes_class_initializer', 'LINK') [int]
('/zfs/constants.py', 'ZILTypes_class_initializer', 'RENAME') [int]
('/zfs/constants.py', 'ZILTypes_class_initializer', 'WRITE') [int]
('/zfs/constants.py', 'ZILTypes_class_initializer', 'TRUNCATE') [int]
('/zfs/constants.py', 'ZILTypes_class_initializer', 'SETATTR') [int]
('/zfs/constants.py', 'ZILTypes_class_initializer', 'ACL') [int]
('/zfs/constants.py', 'ZapType_class_initializer', 'ZAPHeader') [int]
('/zfs/constants.py', 'ZapType_class_initializer', 'ZAPLeaf') [int]
('/zfs/constants.py', 'ZapType_class_initializer', 'MicroZAP') [int]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', 'data1') [bytestring]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', '_prop') [uint64]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', 'logical_size') [BitField]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', 'physical_size') [BitField]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', 'compression') [BitField]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', 'embedded') [BitField]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', 'embedded_type') [BitField]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', 'type_') [BitField]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', 'level') [BitField]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', 'encryption') [BitField]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', 'dedup') [BitField]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', 'endian') [BitField]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', 'data2') [bytestring]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', 'birth') [uint64]
('/zfs/ondisk/__init__.py', 'EmbeddedBlockptr_class_initializer', 'data3') [bytestring]
('/zfs/ondisk/__init__.py', 'GangBlock_class_initializer', 'MAGIC') [int]
('/zfs/ondisk/__init__.py', 'GangBlock_class_initializer', 'blocks') [array]
('/zfs/ondisk/__init__.py', 'GangBlock_class_initializer', '_pad') [padding]
('/zfs/ondisk/__init__.py', 'GangBlock_class_initializer', 'magic') [uint64]
('/zfs/ondisk/__init__.py', 'GangBlock_class_initializer', 'checksum') [array]
('/zfs/ondisk/__init__.py', 'Uberblock_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/__init__.py', 'Uberblock_class_initializer', 'MAGIC') [int]
('/zfs/ondisk/__init__.py', 'Uberblock_class_initializer', 'magic') [uint64]
('/zfs/ondisk/__init__.py', 'Uberblock_class_initializer', 'version') [uint64]
('/zfs/ondisk/__init__.py', 'Uberblock_class_initializer', 'txg') [uint64]
('/zfs/ondisk/__init__.py', 'Uberblock_class_initializer', 'guid_sum') [uint64]
('/zfs/ondisk/__init__.py', 'Uberblock_class_initializer', 'timestamp') [uint64]
('/zfs/ondisk/__init__.py', 'Uberblock_class_initializer', 'root') [Blockptr]
('/zfs/ondisk/__init__.py', 'Uberblock_class_initializer', 'software_version') [uint64]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'node_type') [uint8]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'indirect_blockshift') [uint8]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'indirect_levels') [uint8]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'num_blockptrs') [uint8]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'bonustype') [uint8]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'checksum_type') [uint8]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'compression_type') [uint8]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', '_dnode_flags') [uint8]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'used_bytes') [BitField]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'userused') [BitField]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'spill_blkptr') [BitField]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'data_sectors') [uint16]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'bonuslen') [uint16]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', '_pad') [padding]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'max_block_id') [uint64]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'used') [uint64]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', '_pad2') [padding]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'blkptr') [array]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', 'bonus') [bytestring]
('/zfs/ondisk/__init__.py', 'DNode_class_initializer', '_final_pad') [padding]
('/zfs/ondisk/__init__.py', 'ZILHeader_class_initializer', 'claim_txg') [uint64]
('/zfs/ondisk/__init__.py', 'ZILHeader_class_initializer', 'replay_seq') [uint64]
('/zfs/ondisk/__init__.py', 'ZILHeader_class_initializer', 'log') [Blockptr]
('/zfs/ondisk/__init__.py', 'ZILHeader_class_initializer', 'claim_seq') [uint64]
('/zfs/ondisk/__init__.py', 'ZILHeader_class_initializer', '_pad') [padding]
('/zfs/ondisk/__init__.py', 'ZILRecord_class_initializer', 'tx_type') [uint64]
('/zfs/ondisk/__init__.py', 'ZILRecord_class_initializer', 'length') [uint64]
('/zfs/ondisk/__init__.py', 'ZILRecord_class_initializer', 'txg') [uint64]
('/zfs/ondisk/__init__.py', 'ZILRecord_class_initializer', 'seq') [uint64]
('/zfs/ondisk/__init__.py', 'ObjsetV1_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/__init__.py', 'ObjsetV1_class_initializer', 'meta_dnode') [DNode]
('/zfs/ondisk/__init__.py', 'ObjsetV1_class_initializer', 'zil_header') [ZILHeader]
('/zfs/ondisk/__init__.py', 'ObjsetV1_class_initializer', 'os_type') [uint64]
('/zfs/ondisk/__init__.py', 'ObjsetV15_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/__init__.py', 'ObjsetV15_class_initializer', 'meta_dnode') [DNode]
('/zfs/ondisk/__init__.py', 'ObjsetV15_class_initializer', 'zil_header') [ZILHeader]
('/zfs/ondisk/__init__.py', 'ObjsetV15_class_initializer', 'os_type') [uint64]
('/zfs/ondisk/__init__.py', 'ObjsetV15_class_initializer', 'os_flags') [uint64]
('/zfs/ondisk/__init__.py', 'ObjsetV15_class_initializer', '_pad') [padding]
('/zfs/ondisk/__init__.py', 'ObjsetV15_class_initializer', 'userused') [DNode]
('/zfs/ondisk/__init__.py', 'ObjsetV15_class_initializer', 'groupused') [DNode]
('/zfs/ondisk/__init__.py', 'DSLDir_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/__init__.py', 'DSLDir_class_initializer', 'creation_time') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDir_class_initializer', 'head_dataset') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDir_class_initializer', 'parent') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDir_class_initializer', 'clone_parent') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDir_class_initializer', 'child_dir_zap') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDir_class_initializer', 'used_bytes') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDir_class_initializer', 'compressed_bytes') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDir_class_initializer', 'uncompressed_bytes') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDir_class_initializer', 'quota') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDir_class_initializer', 'props_zap') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDir_class_initializer', '_pad') [padding]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'dir') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'prev_snapshot') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'prev_snapshot_txg') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'next_snapshot') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'snapnames_zap') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'num_children') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'creation_time') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'creation_txg') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'deadlist') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'used_bytes') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'compressed_bytes') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'uncompressed_bytes') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'unique_bytes') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'fsid_guid') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'guid') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'flags') [uint64]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', 'bp') [Blockptr]
('/zfs/ondisk/__init__.py', 'DSLDataset_class_initializer', '_pad') [padding]
('/zfs/ondisk/__init__.py', 'BPObjHeader_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/__init__.py', 'BPObjHeader_class_initializer', 'length') [uint64]
('/zfs/ondisk/__init__.py', 'BPObjHeader_class_initializer', 'unknown') [array]
('/zfs/ondisk/fatzap.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/zfs/ondisk/fatzap.py', 'module_initializer', 'CHUNK_TYPES') [dict]
('/zfs/ondisk/fatzap.py', 'module_initializer', 'formats') [dict]
('/zfs/ondisk/fatzap.py', 'PointerTable_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/fatzap.py', 'PointerTable_class_initializer', 'block') [uint64]
('/zfs/ondisk/fatzap.py', 'PointerTable_class_initializer', 'num_blocks') [uint64]
('/zfs/ondisk/fatzap.py', 'PointerTable_class_initializer', 'shift') [uint64]
('/zfs/ondisk/fatzap.py', 'PointerTable_class_initializer', 'next_block') [uint64]
('/zfs/ondisk/fatzap.py', 'PointerTable_class_initializer', 'blocks_copied') [uint64]
('/zfs/ondisk/fatzap.py', 'LeafHeader_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/fatzap.py', 'LeafHeader_class_initializer', 'header') [uint64]
('/zfs/ondisk/fatzap.py', 'LeafHeader_class_initializer', 'next') [uint64]
('/zfs/ondisk/fatzap.py', 'LeafHeader_class_initializer', 'prefix') [uint64]
('/zfs/ondisk/fatzap.py', 'LeafHeader_class_initializer', 'magic') [uint64]
('/zfs/ondisk/fatzap.py', 'LeafHeader_class_initializer', 'num_free') [uint16]
('/zfs/ondisk/fatzap.py', 'LeafHeader_class_initializer', 'n_entries') [uint64]
('/zfs/ondisk/fatzap.py', 'LeafHeader_class_initializer', 'prefix_len') [uint16]
('/zfs/ondisk/fatzap.py', 'LeafHeader_class_initializer', 'freelist') [uint16]
('/zfs/ondisk/fatzap.py', 'LeafHeader_class_initializer', '_padding') [padding]
('/zfs/ondisk/fatzap.py', 'FatZAPHeader_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/fatzap.py', 'FatZAPHeader_class_initializer', 'block_type') [uint64]
('/zfs/ondisk/fatzap.py', 'FatZAPHeader_class_initializer', 'magic') [uint64]
('/zfs/ondisk/fatzap.py', 'FatZAPHeader_class_initializer', 'ptr_info') [PointerTable]
('/zfs/ondisk/fatzap.py', 'FatZAPHeader_class_initializer', 'first_free') [uint64]
('/zfs/ondisk/fatzap.py', 'FatZAPHeader_class_initializer', 'num_leafs') [uint64]
('/zfs/ondisk/fatzap.py', 'FatZAPHeader_class_initializer', 'num_entries') [uint64]
('/zfs/ondisk/fatzap.py', 'FatZAPHeader_class_initializer', 'salt') [uint64]
('/zfs/ondisk/fatzap.py', 'LeafChunk_class_initializer', '__ENDIAN__') [str]
('/zfs/ondisk/fatzap.py', 'LeafChunk_class_initializer', 'chunk_type') [uint8]
('/zfs/ondisk/fatzap.py', 'LeafChunk_class_initializer', 'data') [bytestring]
('/zfs/ondisk/fatzap.py', 'LeafEntry_class_initializer', 'size') [uint8]
('/zfs/ondisk/fatzap.py', 'LeafEntry_class_initializer', 'next') [uint16]
('/zfs/ondisk/fatzap.py', 'LeafEntry_class_initializer', 'name_chunk') [uint16]
('/zfs/ondisk/fatzap.py', 'LeafEntry_class_initializer', 'name_length') [uint16]
('/zfs/ondisk/fatzap.py', 'LeafEntry_class_initializer', 'value_chunk') [uint16]
('/zfs/ondisk/fatzap.py', 'LeafEntry_class_initializer', 'value_length') [uint16]
('/zfs/ondisk/fatzap.py', 'LeafEntry_class_initializer', 'collision') [uint16]
('/zfs/ondisk/fatzap.py', 'LeafEntry_class_initializer', 'padding') [padding]
('/zfs/ondisk/fatzap.py', 'LeafEntry_class_initializer', 'hash') [uint64]
('/zfs/ondisk/fatzap.py', 'LeafArray_class_initializer', 'data') [bytestring]
('/zfs/ondisk/fatzap.py', 'LeafArray_class_initializer', 'next') [uint16]
('/zfs/ondisk/fatzap.py', 'LeafFree_class_initializer', '_padding') [bytestring]
('/zfs/ondisk/fatzap.py', 'LeafFree_class_initializer', 'next') [uint16]
('/zfs/objectset.py', '__init__', 'dataset') [None]
('/zfs/objectset.py', '__init__', 'self') [ObjectSet]
('/zfs/objectset.py', '__init__', 'pool') []
('/zfs/objectset.py', '__init__', 'raw_objectset') []
('/zfs/objectset.py', '__init__', 'objset') []
('/zfs/objectset.py', 'get_dnode', 'self') [ObjectSet]
('/zfs/objectset.py', 'get_dnode', 'index') [int]
('/zfs/objectset.py', 'get_dnode', 'offset') [int]
('/zfs/objectset.py', 'get_dnode', 'dn') [DNode]
('/zfs/objectset.py', 'get_dnode', 'get_dnode_ret') []
('/zfs/objectset.py', 'parse_dnode', 'index') [None,,, int]
('/zfs/objectset.py', 'parse_dnode', 'self') [ObjectSet]
('/zfs/objectset.py', 'parse_dnode', 'dnode') [DNode]
('/zfs/objectset.py', 'parse_dnode', 'nt') []
('/zfs/objectset.py', 'parse_dnode', 'parse_dnode_ret') [DNode,,, DSLDataset,,, Dataset,,, Directory,,, File,,, None,,, bool,,, dict,,, list]
('/zfs/objectset.py', 'parse_dnode', 'ds') []
('/zfs/objectset.py', 'read_default', 'self') [ObjectSet]
('/zfs/objectset.py', 'read_default', 'dnode') [DNode]
('/zfs/objectset.py', 'read_default', 'read_default_ret') [DNode]
('/zfs/objectset.py', 'read_none', 'self') [ObjectSet]
('/zfs/objectset.py', 'read_none', 'dnode') [DNode]
('/zfs/objectset.py', 'read_none', 'read_none_ret') [None]
('/zfs/objectset.py', 'read_directory', 'self') [ObjectSet]
('/zfs/objectset.py', 'read_directory', 'dnode') [DNode]
('/zfs/objectset.py', 'read_directory', 'entries') [dict]
('/zfs/objectset.py', 'read_directory', 'newdir') [Directory]
('/zfs/objectset.py', 'read_directory', 'read_directory_ret') [Directory]
('/zfs/objectset.py', 'read_file', 'self') [ObjectSet]
('/zfs/objectset.py', 'read_file', 'dnode') [DNode]
('/zfs/objectset.py', 'read_file', 'read_file_ret') [File]
('/zfs/objectset.py', 'read_zap', 'self') [ObjectSet]
('/zfs/objectset.py', 'read_zap', 'dnode') [DNode]
('/zfs/objectset.py', 'read_zap', 'raw_zap') []
('/zfs/objectset.py', 'read_zap', 'zap') []
('/zfs/objectset.py', 'read_zap', 'hdr') []
('/zfs/objectset.py', 'read_zap', 'read_zap_ret') [dict]
('/zfs/objectset.py', 'read_attr_registration', 'self') [ObjectSet]
('/zfs/objectset.py', 'read_attr_registration', 'dnode') [DNode]
('/zfs/objectset.py', 'read_attr_registration', 'data') [dict]
('/zfs/objectset.py', 'read_attr_registration', 'ret') [dict]
('/zfs/objectset.py', 'read_attr_registration', 'k') []
('/zfs/objectset.py', 'read_attr_registration', 'v') []
('/zfs/objectset.py', 'read_attr_registration', 'read_attr_registration_ret') [dict]
('/zfs/objectset.py', 'read_bpobj', 'self') [ObjectSet]
('/zfs/objectset.py', 'read_bpobj', 'dnode') [DNode]
('/zfs/objectset.py', 'read_bpobj', 'hdr') [BPObjHeader]
('/zfs/objectset.py', 'read_bpobj', 'data') []
('/zfs/objectset.py', 'read_bpobj', '_') []
('/zfs/objectset.py', 'read_bpobj', 'read_bpobj_ret') [list]
('/zfs/objectset.py', 'read_object_array', 'self') [ObjectSet]
('/zfs/objectset.py', 'read_object_array', 'dnode') [DNode]
('/zfs/objectset.py', 'read_object_array', 'data') []
('/zfs/objectset.py', 'read_object_array', 'length') [int]
('/zfs/objectset.py', 'read_object_array', 'format_code') [str]
('/zfs/objectset.py', 'read_object_array', 'i') []
('/zfs/objectset.py', 'read_object_array', 'x') []
('/zfs/objectset.py', 'read_object_array', 'read_object_array_ret') [dict]
('/zfs/objectset.py', 'read_nvlist', 'self') [ObjectSet]
('/zfs/objectset.py', 'read_nvlist', 'dnode') [DNode]
('/zfs/objectset.py', 'read_nvlist', 'nv') []
('/zfs/objectset.py', 'read_nvlist', 'nvl') [NVList]
('/zfs/objectset.py', 'read_nvlist', 'nvdata') [dict]
('/zfs/objectset.py', 'read_nvlist', 'read_nvlist_ret') [dict]
('/nvlist/__init__.py', 'module_initializer', 'NVAREA') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'UNKNOWN') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'BOOLEAN') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'BYTE') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'INT16') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'UINT16') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'INT32') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'UINT32') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'INT64') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'UINT64') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'STRING') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'BYTE_ARRAY') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'INT16_ARRAY') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'UINT16_ARRAY') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'INT32_ARRAY') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'UINT32_ARRAY') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'INT64_ARRAY') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'UINT64_ARRAY') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'STRING_ARRAY') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'HRTIME') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'NVLIST') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'NVLIST_ARRAY') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'BOOLEAN_VALUE') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'INT8') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'UINT8') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'BOOLEAN_ARRAY') [int]
('/nvlist/__init__.py', 'NVTypes_class_initializer', 'INT8_ARRAY') [int]
('/zfs/objectset.py', 'read_dataset', 'self') [ObjectSet]
('/zfs/objectset.py', 'read_dataset', 'dnode') [DNode]
('/zfs/objectset.py', 'read_dataset', 'read_dataset_ret') [DSLDataset]
('/zfs/objectset.py', 'read_dsldir', 'self') [ObjectSet]
('/zfs/objectset.py', 'read_dsldir', 'dnode') [DNode]
('/zfs/objectset.py', 'read_dsldir', 'dsl_dir') [DSLDir]
('/zfs/objectset.py', 'read_dsldir', 'read_dsldir_ret') [Dataset]
('/zfs/objectset.py', 'read_history', 'self') [ObjectSet]
('/zfs/objectset.py', 'read_history', 'dnode') [DNode]
('/zfs/objectset.py', 'read_history', 'data') []
('/zfs/objectset.py', 'read_history', 'history_parser') [HistoryParser]
('/zfs/objectset.py', 'read_history', 'read_history_ret') [bool,,, dict,,, list]
('/zfs/posix/directory.py', '__init__', 'path') [None]
('/zfs/posix/directory.py', '__init__', 'self') [Directory]
('/zfs/posix/directory.py', '__init__', 'dnode') [DNode]
('/zfs/posix/directory.py', '__init__', 'entries') [dict]
('/zfs/posix/directory.py', '__init__', 'dataset') [None]
('/zfs/posix/directory.py', '__init__', 'objectset') [ObjectSet]
('/zfs/objectset.py', '_read_fatzap', 'self') [ObjectSet]
('/zfs/objectset.py', '_read_fatzap', 'raw_fz') []
('/zfs/objectset.py', '_read_fatzap', 'data') []
('/zfs/objectset.py', '_read_fatzap', '_read_fatzap_ret') []
('/zfs/objectset.py', '_read_microzap', 'self') [ObjectSet]
('/zfs/objectset.py', '_read_microzap', 'dnode') [DNode]
('/zfs/objectset.py', '_read_microzap', 'hdr') []
('/zfs/objectset.py', '_read_microzap', 'zap') []
('/zfs/objectset.py', '_read_microzap', 'node_type') []
('/zfs/objectset.py', '_read_microzap', 'max_entries') [int]
('/zfs/objectset.py', '_read_microzap', 'mzaps') [list]
('/zfs/objectset.py', '_read_microzap', 'mzap_type') []
('/zfs/objectset.py', '_read_microzap', 'z') []
('/zfs/objectset.py', '_read_microzap', 'r') [dict]
('/zfs/objectset.py', '_read_microzap', '_read_microzap_ret') [dict]
('/nvlist/__init__.py', 'unpack_nvlist', 'self') [NVList]
('/nvlist/__init__.py', 'unpack_nvlist', 'values') [dict]
('/nvlist/__init__.py', 'unpack_nvlist', 'name') [None]
('/nvlist/__init__.py', 'unpack_nvlist', 'v') [bool,,, list]
('/nvlist/__init__.py', 'unpack_nvlist', 'unpack_nvlist_ret') [dict]
('/zfs/datasets.py', '__init__', 'path') [None,,, str]
('/zfs/datasets.py', '__init__', 'self') [ChildDatasets,,, Dataset]
('/zfs/datasets.py', '__init__', 'pool') []
('/zfs/datasets.py', '__init__', 'dsl_dir') [DSLDir]
('/zfs/datasets.py', '__init__', 'objset') [ObjectSet]
('/zfs/datasets.py', '__init__', 'dnode') [DNode]
('/zfs/datasets.py', '__init__', 'objset_block') []
('/zfs/history.py', '__init__', 'self') [HistoryParser]
('/zfs/history.py', '__init__', 'buffer') []
('/zfs/history.py', 'unpack_history', 'self') [HistoryParser]
('/zfs/history.py', 'unpack_history', 'total_length') [int]
('/zfs/history.py', 'unpack_history', 'history') [list]
('/zfs/history.py', 'unpack_history', 'unpack_history_ret') [bool,,, dict,,, list]
('/nvlist/__init__.py', 'unpack_value', 'self') [NVList]
('/nvlist/__init__.py', 'unpack_value', 'name') [None]
('/nvlist/__init__.py', 'unpack_value', 'v') [bool,,, list]
('/nvlist/__init__.py', 'unpack_value', 'decoded_length') []
('/nvlist/__init__.py', 'unpack_value', 'l') []
('/nvlist/__init__.py', 'unpack_value', 'value_type') []
('/nvlist/__init__.py', 'unpack_value', 'value_count') []
('/nvlist/__init__.py', 'unpack_value', 'x') []
('/nvlist/__init__.py', 'unpack_value', 'sub') []
('/nvlist/__init__.py', 'unpack_value', 'unpack_value_ret') [tuple]
('/zfs/history.py', 'unpack_nvlist', 'extra') [bool]
('/zfs/history.py', 'unpack_nvlist', 'self') [HistoryParser]
('/zfs/history.py', 'unpack_nvlist', 'values') [dict]
('/zfs/history.py', 'unpack_nvlist', 'this_length') []
('/zfs/history.py', 'unpack_nvlist', 'unknown2') []
('/zfs/history.py', 'unpack_nvlist', 'unknown3') []
('/zfs/history.py', 'unpack_nvlist', 'start') []
('/zfs/history.py', 'unpack_nvlist', 'end_offset') []
('/zfs/history.py', 'unpack_nvlist', 'name') [str]
('/zfs/history.py', 'unpack_nvlist', 'v') [list,,, str]
('/zfs/history.py', 'unpack_nvlist', 'unpack_nvlist_ret') [dict]
('/zfs/history.py', 'unpack_uhyper', 'self') [HistoryParser]
('/zfs/history.py', 'unpack_uhyper', 'unpack_uhyper_ret') []
('/zfs/history.py', 'unpack_uint', 'self') [HistoryParser]
('/zfs/history.py', 'unpack_uint', 'unpack_uint_ret') []
('/zfs/history.py', 'unpack_value', 'self') [HistoryParser]
('/zfs/history.py', 'unpack_value', 'pos') []
('/zfs/history.py', 'unpack_value', 'total_length') []
('/zfs/history.py', 'unpack_value', 'unpack_value_ret') [tuple]
('/zfs/history.py', 'unpack_value', 'length') []
('/zfs/history.py', 'unpack_value', 'value_count') []
('/zfs/history.py', 'unpack_value', 'value_type') [NVTypes]
('/zfs/history.py', 'unpack_value', 'key') []
('/zfs/history.py', 'unpack_value', 'remaining') []
('/zfs/history.py', 'unpack_value', 'values') [dict,,, list]
('/zfs/history.py', 'unpack_value', 'v') []
('/zfs/history.py', 'unpack_value', 'value') [dict]
('/zfs/history.py', 'unpack_fstring', 'self') [HistoryParser]
('/zfs/history.py', 'unpack_fstring', 'length') [int]
('/zfs/history.py', 'unpack_fstring', 'total_length') [int]
('/zfs/history.py', 'unpack_fstring', 'unpack_fstring_ret') []
('/zfs/history.py', 'next_break_offset', 'x') [int]
('/zfs/history.py', 'next_break_offset', 'next_break_offset_ret') [int]
('/zfs/vdevs.py', '__init__', 'txg') [None]
('/zfs/vdevs.py', '__init__', 'label_index') [None]
('/zfs/vdevs.py', '__init__', 'self') [FileDev,,, VDev]
('/zfs/vdevs.py', '__init__', 'l') [tuple]
('/zfs/vdevs.py', '__init__', '_') [dict]
('/zfs/vdevs.py', '__init__', 'ubers') [list]
('/zfs/vdevs.py', '__init__', 'u') []
('/zfs/pool.py', 'vdev_list_to_dict', 'vdevs') [VDev]
('/zfs/pool.py', 'vdev_list_to_dict', 'd') [dict]
('/zfs/pool.py', 'vdev_list_to_dict', 'v') []
('/zfs/pool.py', 'vdev_list_to_dict', 'vdev_list_to_dict_ret') [dict]
('/zfs/vdevs.py', 'read_label', 'self') [FileDev,,, VDev]
('/zfs/vdevs.py', 'read_label', 'label') [tuple]
('/zfs/vdevs.py', 'read_label', 'data') []
('/zfs/vdevs.py', 'read_label', 'nvdata') []
('/zfs/vdevs.py', 'read_label', 'properties') [dict]
('/zfs/vdevs.py', 'read_label', 'uberblock_array') []
('/zfs/vdevs.py', 'read_label', 'uberblocks') [list]
('/zfs/vdevs.py', 'read_label', 'elem') [int]
('/zfs/vdevs.py', 'read_label', 'this_block') []
('/zfs/vdevs.py', 'read_label', 'b') [Uberblock]
('/zfs/vdevs.py', 'read_label', 'read_label_ret') [tuple]
('/zfs/vdevs.py', '_best_label', 'label_index') [None]
('/zfs/vdevs.py', '_best_label', 'self') [FileDev,,, VDev]
('/zfs/vdevs.py', '_best_label', 'retprops') [dict]
('/zfs/vdevs.py', '_best_label', 'label') [tuple]
('/zfs/vdevs.py', '_best_label', 'props') [dict]
('/zfs/vdevs.py', '_best_label', 'best_label') [dict]
('/zfs/vdevs.py', '_best_label', '_best_label_ret') [dict]
('/zfs/vdevs.py', 'parse_uberblocks', 'self') [FileDev,,, VDev]
('/zfs/vdevs.py', 'parse_uberblocks', 'raw_uberblocks') [list]
('/zfs/vdevs.py', 'parse_uberblocks', 'uber_list') [list]
('/zfs/vdevs.py', 'parse_uberblocks', 'parse_uberblocks_ret') [list]
('/zfs/vdevs.py', 'select_uberblock', 'self') [FileDev,,, VDev]
('/zfs/vdevs.py', 'select_uberblock', 'txg') [None,,, int]
('/zfs/vdevs.py', 'select_uberblock', 'txgs_available') []
('/zfs/vdevs.py', 'select_uberblock', 'x') []
('/zfs/vdevs.py', 'select_uberblock', 'candidates') [list]
('/zfs/vdevs.py', 'select_uberblock', 'active_uberblock') []
('/zfs/vdevs.py', 'select_uberblock', 'select_uberblock_ret') []
('/zfs/util.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/zfs/util.py', 'module_initializer', 'lz4') [None]
('/zfs/util.py', 'module_initializer', 'counter') [count(0)]
('/zfs/util.py', 'module_initializer', 'ChecksumType') [typing.Tuple[int, int, int, int]]
('/zfs/raidzdev.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (WARNING)>]
('/zfs/datasets.py', 'child_datasets', 'self') [Dataset]
('/zfs/datasets.py', 'child_datasets', 'children') []
('/zfs/datasets.py', 'child_datasets', 'child_datasets_ret') [ChildDatasets]
('/zfs/posix/attributes/systemattributes.py', 'no_attrs', 'f') []
('/zfs/posix/attributes/systemattributes.py', 'no_attrs', 'inner') [meta_func]
('/zfs/posix/attributes/systemattributes.py', 'no_attrs', 'no_attrs_ret') [meta_func]
('/pyndata/bytestring.py', '__init__', 'self') [bytestring]
('/pyndata/bytestring.py', '__init__', 'length') [<function <lambda> at 0x106fb2200>,,, int]
('/pyndata/integer.py', '__init__', 'kwargs') [dict]
('/pyndata/integer.py', '__init__', 'enum') [Checksum,,, Compression,,, None,,, ObjectSetType,,, ObjectType,,, ZILTypes,,, ZapType]
('/pyndata/integer.py', '__init__', 'endian') [None]
('/pyndata/integer.py', '__init__', 'self') [uint16,,, uint32,,, uint64,,, uint8]
('/pyndata/integer.py', '__init__', 'args') []
('/pyndata/padding.py', '__init__', 'self') [padding]
('/pyndata/padding.py', '__init__', 'length') [int]
('/pyndata/bitfield.py', '__init__', 'enum') [Checksum,,, Compression,,, None,,, ObjectType,,, PosixType]
('/pyndata/bitfield.py', '__init__', 'shift') [None,,, int]
('/pyndata/bitfield.py', '__init__', 'self') [BitField]
('/pyndata/bitfield.py', '__init__', 'field') [uint64,,, uint8]
('/pyndata/bitfield.py', '__init__', 'size') [int]
('/pyndata/array.py', '__init__', 'self') [array]
('/pyndata/array.py', '__init__', 'kind') [Blockptr,,, StructField,,, ZNodeACE,,, dva,,, uint16,,, uint64]
('/pyndata/array.py', '__init__', 'length') [int,,, uint32,,, uint8]
('/pyndata/nullstring.py', '__init__', 'encoding') [str]
('/pyndata/nullstring.py', '__init__', 'allow_max') [bool]
('/pyndata/nullstring.py', '__init__', 'padded') [bool]
('/pyndata/nullstring.py', '__init__', 'self') [nullstring]
('/pyndata/nullstring.py', '__init__', 'max_length') [int]
('/zfs/datasets.py', '__init__', 'entries') []
('/zfs/datasets.py', '__init__', 'dataset') [Dataset]
('/zfs/datasets.py', '__init__', 'objectset') []
('/pyndata/field.py', '__init__', 'default') [None]
('/pyndata/field.py', '__init__', 'self') [StructField,,, array,,, bytestring,,, nullstring,,, padding,,, uint16,,, uint32,,, uint64,,, uint8]
('/pyndata/structfield.py', '__init__', 'self') [StructField]
('/pyndata/structfield.py', '__init__', 'struct') [Blockptr,,, StructField,,, ZNodeACE,,, dva,,, uint16,,, uint64]
('/zfs/datasets.py', 'snapshot_names', 'self') [Dataset]
('/zfs/datasets.py', 'snapshot_names', 'snapshot_names_ret') [None]
('/zfs/datasets.py', 'snapshots', 'self') [Dataset]
('/zfs/datasets.py', 'snapshots', 'snapshots') [dict]
('/zfs/datasets.py', 'snapshots', 'name') []
('/zfs/datasets.py', 'snapshots', 'index') []
('/zfs/datasets.py', 'snapshots', 'dsl_dataset') []
('/zfs/datasets.py', 'snapshots', 'dataset') [Dataset]
('/zfs/datasets.py', 'snapshots', 'snapshots_ret') [None,,, dict]
('/zfs/datasets.py', 'entries', 'self') [Dataset]
('/zfs/datasets.py', 'entries', 'd') [dict]
('/zfs/datasets.py', 'entries', 'entries_ret') [dict]
('/zfs/datasets.py', 'keys', 'self') [ChildDatasets]
('/zfs/datasets.py', 'keys', 'keys_ret') []
('/zfs/datasets.py', 'items', 'self') [ChildDatasets]
('/zfs/datasets.py', 'items', 'items_ret') [tuple]
('/zfs/datasets.py', 'attributes', 'self') [Dataset]
('/zfs/datasets.py', 'attributes', 'key') []
('/zfs/datasets.py', 'attributes', 'sa_attrs') []
('/zfs/datasets.py', 'attributes', 'registry') []
('/zfs/datasets.py', 'attributes', 'layout') []
('/zfs/datasets.py', 'attributes', 'attrs') [dict]
('/zfs/datasets.py', 'attributes', 'k') []
('/zfs/datasets.py', 'attributes', 'attr') []
('/zfs/datasets.py', 'attributes', 'x') []
('/zfs/datasets.py', 'attributes', 'attributes_ret') [list]
('/zfs/datasets.py', 'root_directory', 'self') [Dataset]
('/zfs/datasets.py', 'root_directory', 'root_dir_index') []
('/zfs/datasets.py', 'root_directory', 'root_dir') []
('/zfs/datasets.py', 'root_directory', 'root_directory_ret') []
('/zfs/readcontext.py', '__init__', 'self') [ReadContext]
('/zfs/readcontext.py', '__init__', 'vdevs') []
('/zfs/readcontext.py', '__init__', 'compression') []
('/zfs/readcontext.py', '__init__', 'checksum') [meta_func]
('/zfs/readcontext.py', '__init__', 'ashift') [int]
('/zfs/readcontext.py', '__init__', 'try_config') []
('/zfs/readcontext.py', 'checksum', 'self') [ReadContext]
('/zfs/readcontext.py', 'checksum', 'data') []
('/zfs/readcontext.py', 'checksum', 'valid') []
('/zfs/readcontext.py', 'checksum', 'checksum') []
('/zfs/readcontext.py', 'checksum', 'checksum_ret') [bool]
('/zfs/readcontext.py', 'decompress', 'self') [ReadContext]
('/zfs/readcontext.py', 'decompress', 'data') [meta_func]
('/zfs/readcontext.py', 'decompress', 'compression') []
('/zfs/readcontext.py', 'decompress', 'actual_size') [int]
('/zfs/readcontext.py', 'decompress', 'decompress_ret') [meta_func]
('/zfs/readcontext.py', 'update_inherit', 'self') [ReadContext]
('/zfs/readcontext.py', 'update_inherit', 'compression') []
('/zfs/readcontext.py', 'update_inherit', 'checksum') []
('/zfs/readcontext.py', 'read_block', 'dva_offset') [int]
('/zfs/readcontext.py', 'read_block', 'self') [ReadContext]
('/zfs/readcontext.py', 'read_block', 'blkptr') [Blockptr]
('/zfs/readcontext.py', 'read_block', 'block') [bytes,,, meta_func]
('/zfs/readcontext.py', 'read_block', 'read_block_ret') [bytes,,, meta_func]
('/zfs/readcontext.py', 'read_block', 'valid') [bool]
('/zfs/readcontext.py', 'read_block_thorough', 'self') [ReadContext]
('/zfs/readcontext.py', 'read_block_thorough', 'blkptr') [Blockptr]
('/zfs/readcontext.py', 'read_block_thorough', 'read_block_thorough_ret') [bytes,,, meta_func]
('/zfs/readcontext.py', 'read_block_thorough', 'first_log') [bool]
('/zfs/readcontext.py', 'read_block_thorough', 'blocks') [list]
('/zfs/readcontext.py', 'read_block_thorough', 'bad') [list]
('/zfs/readcontext.py', 'read_block_thorough', 'dva') []
('/zfs/readcontext.py', 'read_block_thorough', 'block') []
('/zfs/readcontext.py', 'read_block_thorough', 'valid') [bool]
('/zfs/readcontext.py', 'read_block_thorough', 'b') []
('/zfs/readcontext.py', 'read_indirect', 'self') [ReadContext]
('/zfs/readcontext.py', 'read_indirect', 'blkptr') [Blockptr]
('/zfs/readcontext.py', 'read_indirect', 'resolved') [list]
('/zfs/readcontext.py', 'read_indirect', 'data') [bytes,,, meta_func]
('/zfs/readcontext.py', 'read_indirect', 'indirect') []
('/zfs/readcontext.py', 'read_indirect', 'ind') []
('/zfs/readcontext.py', 'read_indirect', 'ptr') []
('/zfs/readcontext.py', 'read_indirect', 'read_indirect_ret') [bytes]
('/zfs/readcontext.py', 'read_dnode', 'self') [ReadContext]
('/zfs/readcontext.py', 'read_dnode', 'dnode') [DNode]
('/zfs/readcontext.py', 'read_dnode', 'read_dnode_ret') [str]
('/zfs/readcontext.py', 'context', 'self') [ReadContext]
('/zfs/readcontext.py', 'context', 'context_ret') [ReadContext]
('/zfs/util.py', 'checksum', 'chk') [None,,, tuple]
('/zfs/util.py', 'checksum', 'inherit') [Checksum,,, None,,, meta_func]
('/zfs/util.py', 'checksum', 'data') []
('/zfs/util.py', 'checksum', 'valid') [tuple]
('/zfs/util.py', 'checksum', 'mode') [Checksum,,, None,,, meta_func]
('/zfs/util.py', 'checksum', 'checksum_ret') [bool]
('/zfs/util.py', 'decompress', 'inherit') [None]
('/zfs/util.py', 'decompress', 'data') [meta_func]
('/zfs/util.py', 'decompress', 'mode') [Compression,,, None]
('/zfs/util.py', 'decompress', 'size') [int]
('/zfs/util.py', 'decompress', 'decompress_ret') [meta_func]
('/zfs/util.py', 'decompress', 'length') []
('/zfs/readcontext.py', '_read_block_embedded', 'self') [ReadContext]
('/zfs/readcontext.py', '_read_block_embedded', 'blkptr') [Blockptr]
('/zfs/readcontext.py', '_read_block_embedded', 'embedded_blkptr') [EmbeddedBlockptr]
('/zfs/readcontext.py', '_read_block_embedded', 'raw_data') [meta_func]
('/zfs/readcontext.py', '_read_block_embedded', 'data') [meta_func]
('/zfs/readcontext.py', '_read_block_embedded', '_read_block_embedded_ret') [meta_func]
('/zfs/readcontext.py', '_read_block', 'self') [ReadContext]
('/zfs/readcontext.py', '_read_block', 'blkptr') [Blockptr]
('/zfs/readcontext.py', '_read_block', 'dva') []
('/zfs/readcontext.py', '_read_block', 'vdev') []
('/zfs/readcontext.py', '_read_block', 'data') []
('/zfs/readcontext.py', '_read_block', 'physical_size') [int]
('/zfs/readcontext.py', '_read_block', 'valid_chk') [bool]
('/zfs/readcontext.py', '_read_block', 'logical_size') [int]
('/zfs/readcontext.py', '_read_block', '_read_block_ret') [tuple]
('/zfs/ondisk/__init__.py', 'indirect', 'shift') [None]
('/zfs/ondisk/__init__.py', 'indirect', 'size') [None,,, int]
('/zfs/ondisk/__init__.py', 'indirect', 'count') [int]
('/zfs/ondisk/__init__.py', 'indirect', '__ENDIAN__') [str]
('/zfs/ondisk/__init__.py', 'indirect', 'blocks') [array]
('/zfs/ondisk/__init__.py', 'indirect', 'indirect_ret') []
('/zfs/util.py', 'fletcher4', 'data') []
('/zfs/util.py', 'fletcher4', 'mod') [int]
('/zfs/util.py', 'fletcher4', 'a') [int]
('/zfs/util.py', 'fletcher4', 'b') [int]
('/zfs/util.py', 'fletcher4', 'c') [int]
('/zfs/util.py', 'fletcher4', 'd') [int]
('/zfs/util.py', 'fletcher4', 'w') []
('/zfs/util.py', 'fletcher4', 'fletcher4_ret') [tuple]
('/zfs/util.py', 'fletcher2', 'data') []
('/zfs/util.py', 'fletcher2', 'mod') [int]
('/zfs/util.py', 'fletcher2', 'un_data') [list]
('/zfs/util.py', 'fletcher2', 'a') [int]
('/zfs/util.py', 'fletcher2', 'b') [int]
('/zfs/util.py', 'fletcher2', 'c') [int]
('/zfs/util.py', 'fletcher2', 'd') [int]
('/zfs/util.py', 'fletcher2', 'first') []
('/zfs/util.py', 'fletcher2', 'second') []
('/zfs/util.py', 'fletcher2', 'fletcher2_ret') [tuple]
('/zfs/util.py', 'sha256', 'data') []
('/zfs/util.py', 'sha256', 'sha256_ret') []
('/zfs/ondisk/__init__.py', 'to_embedded', 'self') [Blockptr]
('/zfs/ondisk/__init__.py', 'to_embedded', 'raw_blkptr') []
('/zfs/ondisk/__init__.py', 'to_embedded', 'to_embedded_ret') [EmbeddedBlockptr]
('/zfs/util.py', 'unpack', 'data') []
('/zfs/util.py', 'unpack', 'code') [str]
('/zfs/util.py', 'unpack', 's') [int]
('/zfs/util.py', 'unpack', 'unpack_ret') []
('/zfs/ondisk/__init__.py', 'data', 'self') [EmbeddedBlockptr]
('/zfs/ondisk/__init__.py', 'data', 'data') []
('/zfs/ondisk/__init__.py', 'data', 'data_ret') []
('/zfs/zfuse.py', 'locked', 'f') []
('/zfs/zfuse.py', 'locked', 'inner') [meta_func]
('/zfs/zfuse.py', 'locked', 'locked_ret') [meta_func]
('/zfs/zfuse.py', '__init__', 'pool') [None]
('/zfs/zfuse.py', '__init__', 'self') [ZFSFuse]
('/zfs/zfuse.py', 'getattr', 'fh') [None]
('/zfs/zfuse.py', 'getattr', 'self') [ZFSFuse]
('/zfs/zfuse.py', 'getattr', 'path') [str]
('/zfs/zfuse.py', 'getattr', 'obj') []
('/zfs/zfuse.py', 'getattr', 'attrs') []
('/zfs/zfuse.py', 'getattr', 'mode') [int]
('/zfs/zfuse.py', 'getattr', 'getattr_ret') [dict]
('/zfs/zfuse.py', 'getxattr', 'position') [int]
('/zfs/zfuse.py', 'getxattr', 'self') [ZFSFuse]
('/zfs/zfuse.py', 'getxattr', 'path') [str]
('/zfs/zfuse.py', 'getxattr', 'name') [str]
('/zfs/zfuse.py', 'getxattr', 'getxattr_ret') [bytes]
('/zfs/zfuse.py', 'listxattr', 'self') [ZFSFuse]
('/zfs/zfuse.py', 'listxattr', 'path') [str]
('/zfs/zfuse.py', 'listxattr', 'listxattr_ret') [list]
('/zfs/zfuse.py', 'open', 'self') [ZFSFuse]
('/zfs/zfuse.py', 'open', 'path') [str]
('/zfs/zfuse.py', 'open', 'flags') []
('/zfs/zfuse.py', 'open', 'open_ret') [int]
('/zfs/zfuse.py', 'readlink', 'self') [ZFSFuse]
('/zfs/zfuse.py', 'readlink', 'path') [str]
('/zfs/zfuse.py', 'readlink', 'obj') []
('/zfs/zfuse.py', 'readlink', 'readlink_ret') []
('/zfs/zfuse.py', 'read', 'self') [ZFSFuse]
('/zfs/zfuse.py', 'read', 'path') [str]
('/zfs/zfuse.py', 'read', 'size') [int]
('/zfs/zfuse.py', 'read', 'offset') [int]
('/zfs/zfuse.py', 'read', 'fh') []
('/zfs/zfuse.py', 'read', 'read_ret') []
('/zfs/zfuse.py', 'readdir', 'self') [ZFSFuse]
('/zfs/zfuse.py', 'readdir', 'path') [str]
('/zfs/zfuse.py', 'readdir', 'fh') []
('/zfs/zfuse.py', 'readdir', 'names') [list]
('/zfs/zfuse.py', 'readdir', 'name') []
('/zfs/zfuse.py', 'readdir', 'readdir_ret') [list]
('/zfs/zfuse.py', 'statfs', 'self') [ZFSFuse]
('/zfs/zfuse.py', 'statfs', 'path') [str]
('/zfs/zfuse.py', 'statfs', 'statfs_ret') [dict]
('/zfs/zfuse.py', 'mount', 'pool') []
('/zfs/zfuse.py', 'mount', 'mountpoint') []
('/zfs/zfuse.py', 'mount', 'zf') [ZFSFuse]
('/zfs/zfuse.py', 'mount', 'fuse') []
('/zfs/history.py', 'unpack_int', 'self') [HistoryParser]
('/zfs/history.py', 'unpack_int', 'unpack_int_ret') []
('/zfs/history.py', 'unpack_hyper', 'self') [HistoryParser]
('/zfs/history.py', 'unpack_hyper', 'unpack_hyper_ret') []
('/zfs/history.py', 'unpack_string', 'self') [HistoryParser]
('/zfs/history.py', 'unpack_string', 'length') []
('/zfs/history.py', 'unpack_string', 'unpack_string_ret') []
('/zfs/raidzdev.py', 'convert', 'k') [int]
('/zfs/raidzdev.py', 'convert', 'base') [int]
('/zfs/raidzdev.py', 'convert', 'disks') [int]
('/zfs/raidzdev.py', 'convert', 'parity') [int]
('/zfs/raidzdev.py', 'convert', 'off') [float,,, int]
('/zfs/raidzdev.py', 'convert', 'convert_ret') [float,,, int]
('/zfs/raidzdev.py', 'should_resize', 'offset') [int]
('/zfs/raidzdev.py', 'should_resize', 'size') [int]
('/zfs/raidzdev.py', 'should_resize', 'disks') [int]
('/zfs/raidzdev.py', 'should_resize', 'parity') [int]
('/zfs/raidzdev.py', 'should_resize', 'base') [int]
('/zfs/raidzdev.py', 'should_resize', 'should_resize_ret') [bool]
('/zfs/raidzdev.py', 'locate_data', 'disks') [int]
('/zfs/raidzdev.py', 'locate_data', 'parity') [int]
('/zfs/raidzdev.py', 'locate_data', 'offset') [int]
('/zfs/raidzdev.py', 'locate_data', 'size') [int]
('/zfs/raidzdev.py', 'locate_data', 'first_col') [int]
('/zfs/raidzdev.py', 'locate_data', 'ret') [list]
('/zfs/raidzdev.py', 'locate_data', 'vdevs') [list]
('/zfs/raidzdev.py', 'locate_data', 'bit_12') [int]
('/zfs/raidzdev.py', 'locate_data', 'vdev_ids') [list]
('/zfs/raidzdev.py', 'locate_data', 'order') [list]
('/zfs/raidzdev.py', 'locate_data', 'i') []
('/zfs/raidzdev.py', 'locate_data', 'dva') [dva]
('/zfs/raidzdev.py', 'locate_data', 'd') []
('/zfs/raidzdev.py', 'locate_data', 'vdev_order') [list]
('/zfs/raidzdev.py', 'locate_data', '_') []
('/zfs/raidzdev.py', 'locate_data', 'next_vdev') []
('/zfs/raidzdev.py', 'locate_data', 'locate_data_ret') [list]
('/zfs/raidzdev.py', 'xor_blocks', 'args') [list]
('/zfs/raidzdev.py', 'xor_blocks', 'x') []
('/zfs/raidzdev.py', 'xor_blocks', 'xor_blocks_ret') [str]
('/zfs/raidzdev.py', 'xor_blocks', 'size') [float]
('/zfs/raidzdev.py', 'xor_blocks', 'format_str') [str]
('/zfs/raidzdev.py', 'xor_blocks', 'structure') [<_struct.Struct object at 0x10aab08b0>,,, <_struct.Struct object at 0x10ae80a90>]
('/zfs/raidzdev.py', 'xor_blocks', 't') []
('/zfs/raidzdev.py', 'xor_blocks', 'out') [list]
('/zfs/raidzdev.py', '__init__', 'self') [RaidZDev]
('/zfs/raidzdev.py', '__init__', 'parity') []
('/zfs/raidzdev.py', '__init__', 'devs') []
('/zfs/raidzdev.py', 'read_dva', 'self') [RaidZDev]
('/zfs/raidzdev.py', 'read_dva', 'dva') [dva]
('/zfs/raidzdev.py', 'read_dva', 'offset') []
('/zfs/raidzdev.py', 'read_dva', 'num_disks') [int]
('/zfs/raidzdev.py', 'read_dva', 'parity') []
('/zfs/raidzdev.py', 'read_dva', 'columns') []
('/zfs/raidzdev.py', 'read_dva', 'first') []
('/zfs/raidzdev.py', 'read_dva', 'addrs') []
('/zfs/raidzdev.py', 'read_dva', 'addr') []
('/zfs/raidzdev.py', 'read_dva', 'blocks') [list]
('/zfs/raidzdev.py', 'read_dva', 'data') [str]
('/zfs/raidzdev.py', 'read_dva', 'computed') []
('/zfs/raidzdev.py', 'read_dva', 'read_dva_ret') [str]
('/zfs/raidzdev.py', '_read_resolved', 'self') [RaidZDev]
('/zfs/raidzdev.py', '_read_resolved', 'dva') []
('/zfs/raidzdev.py', '_read_resolved', '_read_resolved_ret') []
('/zfs/vdevs.py', 'read_dva', 'self') [VDev]
('/zfs/vdevs.py', 'read_dva', 'dva') [dva]
('/zfs/vdevs.py', 'read_dva', 'offset') [int]
('/zfs/vdevs.py', 'read_dva', 'data') []
('/zfs/vdevs.py', 'read_dva', 'read_dva_ret') []
('/zfs/lzjb.py', 'decompress', 'bs') [typing.ByteString]
('/zfs/lzjb.py', 'decompress', 'size') [int]
('/zfs/lzjb.py', 'decompress', 'out') [bytearray(b'')]
('/zfs/lzjb.py', 'decompress', 'blen') [int]
('/zfs/lzjb.py', 'decompress', 'pos') [int]
('/zfs/lzjb.py', 'decompress', 'control') []
('/zfs/lzjb.py', 'decompress', 'i') []
('/zfs/lzjb.py', 'decompress', 'b') [bool]
('/zfs/lzjb.py', 'decompress', 'length') [int]
('/zfs/lzjb.py', 'decompress', 'distance') [int]
('/zfs/lzjb.py', 'decompress', 'backref') [bytearray(b'')]
('/zfs/lzjb.py', 'decompress', 'lookup') [bytearray(b'')]
('/zfs/lzjb.py', 'decompress', 'decompress_ret') []
('/zfs/filedev.py', '__init__', 'txg') [None]
('/zfs/filedev.py', '__init__', 'label') [None]
('/zfs/filedev.py', '__init__', 'self') [FileDev]
('/zfs/filedev.py', '__init__', 'path') []
('/zfs/filedev.py', 'read', 'self') [FileDev]
('/zfs/filedev.py', 'read', 'offset') []
('/zfs/filedev.py', 'read', 'size') [int]
('/zfs/filedev.py', 'read', 'read_ret') []
('/zfs/filedev.py', 'write', 'self') [FileDev]
('/zfs/filedev.py', 'write', 'offset') []
('/zfs/filedev.py', 'write', 'data') []
('/zfs/filedev.py', 'write', 'write_ret') []
('/zfs/filedev.py', 'flush', 'self') [FileDev]
('/zfs/filedev.py', 'flush', 'flush_ret') []
('/zfs/filedev.py', 'seek', 'self') [FileDev]
('/zfs/filedev.py', 'seek', 'offset') []
('/zfs/filedev.py', 'seek', 'whence') []
('/zfs/filedev.py', 'seek', 'seek_ret') []
('/explore.py', '__init__', 'self') [PoolExplorer]
('/explore.py', '__init__', 'parser') [ArgumentParser(prog='explore', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]
('/explore.py', '__init__', 'subcommands') [_SubParsersAction(option_strings=[], dest='==SUPPRESS==', nargs='A...', const=None, default=None, type=None, choices={'ls': ArgumentParser(prog='explore ls', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True), 'cat': ArgumentParser(prog='explore cat', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True), 'objectset': ArgumentParser(prog='explore objectset', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True), 'objset': ArgumentParser(prog='explore objectset', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True), 'nvparse': ArgumentParser(prog='explore nvparse', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True), 'label': ArgumentParser(prog='explore label', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True), 'dva': ArgumentParser(prog='explore dva', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True), 'fuse': ArgumentParser(prog='explore fuse', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)}, required=False, help=None, metavar='command')]
('/explore.py', '__init__', 'pool_parser') [ArgumentParser(prog='script.py', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=False)]
('/explore.py', '__init__', 'log_opts') [<argparse._ArgumentGroup object at 0x10abd3100>,,, <argparse._ArgumentGroup object at 0x10abd3220>,,, <argparse._ArgumentGroup object at 0x10adf01f0>]
('/explore.py', '__init__', 'level') []
('/explore.py', '__init__', 'try_opts') [<argparse._ArgumentGroup object at 0x10abd3e20>,,, <argparse._ArgumentGroup object at 0x10abd3f40>]
('/explore.py', '__init__', 'name') []
('/explore.py', '__init__', 'value') []
('/explore.py', '__init__', 'arg_name') [str]
('/explore.py', '__init__', 'parser_ls') [ArgumentParser(prog='explore ls', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]
('/explore.py', '__init__', 'parser_cat') [ArgumentParser(prog='explore cat', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]
('/explore.py', '__init__', 'parser_objset') [ArgumentParser(prog='explore objectset', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]
('/explore.py', '__init__', 'objset_selector_group') [<argparse._MutuallyExclusiveGroup object at 0x10ababc10>,,, <argparse._MutuallyExclusiveGroup object at 0x10ababd30>,,, <argparse._MutuallyExclusiveGroup object at 0x10af95c00>]
('/explore.py', '__init__', 'objset_exclusive_display') [<argparse._MutuallyExclusiveGroup object at 0x10abac580>,,, <argparse._MutuallyExclusiveGroup object at 0x10abac6a0>,,, <argparse._MutuallyExclusiveGroup object at 0x10c5360b0>]
('/explore.py', '__init__', 'parser_nvparse') [ArgumentParser(prog='explore nvparse', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]
('/explore.py', '__init__', 'parser_label') [ArgumentParser(prog='explore label', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]
('/explore.py', '__init__', 'parser_dva') [ArgumentParser(prog='explore dva', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]
('/explore.py', '__init__', 'parser_fuse') [ArgumentParser(prog='explore fuse', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]
('/explore.py', 'setup_module_logs', 'self') [PoolExplorer]
('/explore.py', 'setup_module_logs', 'args') []
('/explore.py', 'setup_module_logs', 'level') [int]
('/explore.py', 'setup_module_logs', 'levelname') []
('/explore.py', 'setup_module_logs', 'modules') []
('/explore.py', 'setup_module_logs', 'mod') []
('/explore.py', 'cli', 'kw') [dict]
('/explore.py', 'cli', 'self') [PoolExplorer]
('/explore.py', 'cli', 'a') []
('/explore.py', 'cli', 'args') []
('/explore.py', 'cli', 'level') [int]
('/explore.py', 'load_pool', 'self') [PoolExplorer]
('/explore.py', 'load_pool', 'args') []
('/explore.py', 'load_pool', 'path') []
('/explore.py', 'load_pool', 'devices') [list]
('/explore.py', 'load_pool', 'try_config') []
('/explore.py', 'load_pool', 'pool') []
('/explore.py', 'load_pool', 'load_pool_ret') []
('/explore.py', 'list_cmd', 'self') [PoolExplorer]
('/explore.py', 'list_cmd', 'args') []
('/explore.py', 'list_cmd', 'target') []
('/explore.py', 'list_cmd', 'file') []
('/explore.py', 'cat', 'self') [PoolExplorer]
('/explore.py', 'cat', 'args') []
('/explore.py', 'show_object', 'self') [PoolExplorer]
('/explore.py', 'show_object', 'args') []
('/explore.py', 'show_object', 'os') [<module 'os' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/os.py'>]
('/explore.py', 'show_object', 'obj') []
('/explore.py', 'show_object', 'f') []
('/explore.py', 'show_object', 'parsed') [None]
('/explore.py', 'objset', 'self') [PoolExplorer]
('/explore.py', 'objset', 'args') []
('/explore.py', 'objset', 'ds') []
('/explore.py', 'objset', 'os') []
('/explore.py', 'objset', 'f') []
('/explore.py', 'objset', 'i') []
('/explore.py', 'objset', 'obj') []
('/explore.py', 'nvparse', 'self') [PoolExplorer]
('/explore.py', 'nvparse', 'args') []
('/explore.py', 'nvparse', 'source') []
('/explore.py', 'nvparse', 'data') []
('/explore.py', 'nvparse', 'nv') []
('/explore.py', 'label', 'self') [PoolExplorer]
('/explore.py', 'label', 'args') []
('/explore.py', 'label', 'vdev') []
('/explore.py', 'label', 'label') []
('/explore.py', 'label', 'i') []
('/explore.py', 'label', 'uber') []
('/explore.py', 'mount_fuse', 'self') [PoolExplorer]
('/explore.py', 'mount_fuse', 'args') []
('/explore.py', 'read_dva', 'self') [PoolExplorer]
('/explore.py', 'read_dva', 'args') []
('/explore.py', 'read_dva', 'dva') []
('/explore.py', 'read_dva', 'read_dva_ret') [NotImplemented]
('/explore.py', 'cli', 'kwargs') [dict]
('/explore.py', 'cli', 'px') [PoolExplorer]
('/explore.py', 'cli', 'cli_ret') []