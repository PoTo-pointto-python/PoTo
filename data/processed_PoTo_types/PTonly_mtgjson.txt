('/mtgjson5/price_builder.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/providers/github_boosters.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/providers/abstract.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/providers/cardhoarder.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/providers/gatherer.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/providers/gatherer.py', 'GathererProvider_class_initializer', 'GATHERER_CARD') [str]
('/mtgjson5/providers/gatherer.py', 'GathererProvider_class_initializer', 'SETS_TO_REMOVE_PARENTHESES') [set]
('/mtgjson5/providers/cardmarket.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/providers/github_decks.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/providers/mtgban.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/providers/cardkingdom.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/providers/scryfall.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/providers/tcgplayer.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/providers/tcgplayer.py', 'CardCondition_class_initializer', 'NEAR_MINT') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardCondition_class_initializer', 'LIGHTLY_PLAYED') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardCondition_class_initializer', 'MODERATELY_PLAYED') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardCondition_class_initializer', 'HEAVILY_PLAYED') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardCondition_class_initializer', 'DAMAGED') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardCondition_class_initializer', 'UNOPENED') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardPrinting_class_initializer', 'NON_FOIL') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardPrinting_class_initializer', 'FOIL') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardLanguage_class_initializer', 'ENGLISH') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardLanguage_class_initializer', 'CHINESE_SIMPLIFIED') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardLanguage_class_initializer', 'CHINESE_TRADITIONAL') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardLanguage_class_initializer', 'FRENCH') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardLanguage_class_initializer', 'GERMAN') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardLanguage_class_initializer', 'ITALIAN') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardLanguage_class_initializer', 'JAPANESE') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardLanguage_class_initializer', 'KOREAN') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardLanguage_class_initializer', 'PORTUGUESE_BRAZIL') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardLanguage_class_initializer', 'RUSSIAN') [int]
('/mtgjson5/providers/tcgplayer.py', 'CardLanguage_class_initializer', 'SPANISH') [int]
('/mtgjson5/providers/github_mtgsqlite.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/price_builder.py', 'download_prices_archive', 'config') [<configparser.ConfigParser object at 0x10c606650>,,, <configparser.ConfigParser object at 0x10c714580>,,, <configparser.ConfigParser object at 0x125d477c0>]
('/mtgjson5/price_builder.py', 'download_prices_archive', 'github_repo_local_path') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/.mtgjson5_cache/msg,,, /testpath]
('/mtgjson5/price_builder.py', 'download_prices_archive', 'github_username') []
('/mtgjson5/price_builder.py', 'download_prices_archive', 'github_api_key') []
('/mtgjson5/price_builder.py', 'download_prices_archive', 'github_repo_name') []
('/mtgjson5/price_builder.py', 'download_prices_archive', 'github_file_name') []
('/mtgjson5/price_builder.py', 'download_prices_archive', 'github_url') [str]
('/mtgjson5/price_builder.py', 'download_prices_archive', 'git_sh') []
('/mtgjson5/price_builder.py', 'download_prices_archive', 'download_prices_archive_ret') [dict]
('/mtgjson5/price_builder.py', 'upload_prices_archive', 'config') [<configparser.ConfigParser object at 0x10c606650>,,, <configparser.ConfigParser object at 0x10c714580>,,, <configparser.ConfigParser object at 0x125a25de0>]
('/mtgjson5/price_builder.py', 'upload_prices_archive', 'github_repo_local_path') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/.mtgjson5_cache/msg,,, /testpath]
('/mtgjson5/price_builder.py', 'upload_prices_archive', 'content') [dict]
('/mtgjson5/price_builder.py', 'upload_prices_archive', 'github_username') []
('/mtgjson5/price_builder.py', 'upload_prices_archive', 'github_api_token') []
('/mtgjson5/price_builder.py', 'upload_prices_archive', 'github_file_name') []
('/mtgjson5/price_builder.py', 'upload_prices_archive', 'github_repo_name') []
('/mtgjson5/price_builder.py', 'upload_prices_archive', 'repo') []
('/mtgjson5/price_builder.py', 'upload_prices_archive', 'origin') []
('/mtgjson5/price_builder.py', 'upload_prices_archive', 'push_results') []
('/mtgjson5/price_builder.py', 'upload_prices_archive', 'push_result') []
('/mtgjson5/price_builder.py', 'prune_prices_archive', 'months') [int]
('/mtgjson5/price_builder.py', 'prune_prices_archive', 'content') [dict]
('/mtgjson5/price_builder.py', 'prune_prices_archive', 'prune_date_str') [str]
('/mtgjson5/price_builder.py', 'prune_prices_archive', 'keys_pruned') [int]
('/mtgjson5/price_builder.py', 'prune_prices_archive', 'prune_recursive') [meta_func]
('/mtgjson5/consts.py', 'module_initializer', 'TOP_LEVEL_DIR') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine]
('/mtgjson5/consts.py', 'module_initializer', 'RESOURCE_PATH') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson5/resources]
('/mtgjson5/consts.py', 'module_initializer', 'CONFIG_PATH') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson5/resources/msg,,, /Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson5/resources/mtgjson.properties]
('/mtgjson5/consts.py', 'module_initializer', 'ENV_OUT_PATH') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine]
('/mtgjson5/consts.py', 'module_initializer', 'CONFIG') [<configparser.ConfigParser object at 0x10a662440>,,, <configparser.ConfigParser object at 0x10bf60460>,,, <configparser.ConfigParser object at 0x10c15c3a0>,,, <configparser.ConfigParser object at 0x10c1b9cf0>,,, <configparser.ConfigParser object at 0x10c27c7c0>,,, <configparser.ConfigParser object at 0x10c2bf970>,,, <configparser.ConfigParser object at 0x10c388820>,,, <configparser.ConfigParser object at 0x10c46c8b0>,,, <configparser.ConfigParser object at 0x10c48c190>,,, <configparser.ConfigParser object at 0x10c4b3640>,,, <configparser.ConfigParser object at 0x10c532980>,,, <configparser.ConfigParser object at 0x10c556dd0>,,, <configparser.ConfigParser object at 0x10c583490>,,, <configparser.ConfigParser object at 0x10c600af0>,,, <configparser.ConfigParser object at 0x10c606650>,,, <configparser.ConfigParser object at 0x10c714580>,,, <configparser.ConfigParser object at 0x10c73c2b0>,,, <configparser.ConfigParser object at 0x10c8a7400>,,, <configparser.ConfigParser object at 0x10c8d0250>,,, <configparser.ConfigParser object at 0x10c9586d0>,,, <configparser.ConfigParser object at 0x10c95bd00>,,, <configparser.ConfigParser object at 0x10c997520>,,, <configparser.ConfigParser object at 0x125451ae0>,,, <configparser.ConfigParser object at 0x1254dc7c0>,,, <configparser.ConfigParser object at 0x125511c90>,,, <configparser.ConfigParser object at 0x125525c60>,,, <configparser.ConfigParser object at 0x12583ee30>,,, <configparser.ConfigParser object at 0x125bf4cd0>]
('/mtgjson5/consts.py', 'module_initializer', 'MTGJSON_VERSION') [str]
('/mtgjson5/consts.py', 'module_initializer', 'MTGJSON_BUILD_DATE') [str]
('/mtgjson5/consts.py', 'module_initializer', 'USE_CACHE') [bool]
('/mtgjson5/consts.py', 'module_initializer', 'LOG_PATH') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/msg,,, /Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_logs]
('/mtgjson5/consts.py', 'module_initializer', 'OUTPUT_PATH') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/5.X.X,,, /Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/msg,,, /Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X']
('/mtgjson5/consts.py', 'module_initializer', 'CACHE_PATH') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/.mtgjson5_cache,,, /Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/msg]
('/mtgjson5/consts.py', 'module_initializer', 'HASH_TO_GENERATE') [<sha256 _hashlib.HASH object @ 0x10a59e290>,,, <sha256 _hashlib.HASH object @ 0x10c18a050>,,, <sha256 _hashlib.HASH object @ 0x10c18be70>,,, <sha256 _hashlib.HASH object @ 0x10c2121d0>,,, <sha256 _hashlib.HASH object @ 0x10c26e7b0>,,, <sha256 _hashlib.HASH object @ 0x10c4c5350>,,, <sha256 _hashlib.HASH object @ 0x10c5cd570>,,, <sha256 _hashlib.HASH object @ 0x10c5e3cf0>,,, <sha256 _hashlib.HASH object @ 0x10c66ddf0>,,, <sha256 _hashlib.HASH object @ 0x10c6f6650>,,, <sha256 _hashlib.HASH object @ 0x10c71aa30>,,, <sha256 _hashlib.HASH object @ 0x10c759590>,,, <sha256 _hashlib.HASH object @ 0x10c7b26b0>,,, <sha256 _hashlib.HASH object @ 0x10c7d1950>,,, <sha256 _hashlib.HASH object @ 0x10c9253b0>,,, <sha256 _hashlib.HASH object @ 0x10c925f90>,,, <sha256 _hashlib.HASH object @ 0x10c934270>,,, <sha256 _hashlib.HASH object @ 0x1254233f0>,,, <sha256 _hashlib.HASH object @ 0x1254edad0>,,, <sha256 _hashlib.HASH object @ 0x12557a270>,,, <sha256 _hashlib.HASH object @ 0x1255876f0>,,, <sha256 _hashlib.HASH object @ 0x1257bdff0>,,, <sha256 _hashlib.HASH object @ 0x1257d0370>,,, <sha256 _hashlib.HASH object @ 0x125829bd0>,,, <sha256 _hashlib.HASH object @ 0x1259ac870>,,, <sha256 _hashlib.HASH object @ 0x125c49a50>,,, <sha256 _hashlib.HASH object @ 0x125d1dc70>,,, <sha256 _hashlib.HASH object @ 0x125d239b0>]
('/mtgjson5/consts.py', 'module_initializer', 'CARD_MARKET_BUFFER') [str]
('/mtgjson5/consts.py', 'module_initializer', 'CARD_KINGDOM_REFERRAL') [str]
('/mtgjson5/consts.py', 'module_initializer', 'FOREIGN_SETS') [set]
('/mtgjson5/consts.py', 'module_initializer', 'SUPER_TYPES') [set]
('/mtgjson5/consts.py', 'module_initializer', 'BASIC_LAND_NAMES') [set]
('/mtgjson5/consts.py', 'module_initializer', 'LANGUAGE_MAP') [dict]
('/mtgjson5/consts.py', 'module_initializer', 'WIZARDS_SUPPORTED_LANGUAGES') [list]
('/mtgjson5/consts.py', 'module_initializer', 'SYMBOL_MAP') [dict]
('/mtgjson5/consts.py', 'module_initializer', 'BAD_FILE_NAMES') [set]
('/mtgjson5/consts.py', 'module_initializer', 'SUPPORTED_FORMAT_OUTPUTS') [set]
('/mtgjson5/consts.py', 'module_initializer', 'SUPPORTED_SET_TYPES') [set]
('/mtgjson5/price_builder.py', 'build_today_prices', 'build_today_prices_ret') [dict]
('/mtgjson5/price_builder.py', 'build_today_prices', 'card_hoarder') [dict]
('/mtgjson5/price_builder.py', 'build_today_prices', 'tcgplayer') [dict]
('/mtgjson5/price_builder.py', 'build_today_prices', 'card_market') [dict]
('/mtgjson5/price_builder.py', 'build_today_prices', 'card_kingdom') [dict]
('/mtgjson5/price_builder.py', 'build_today_prices', 'final_results') [dict]
('/mtgjson5/compiled_classes/mtgjson_tcgplayer_skus.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/utils.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/price_builder.py', 'get_price_archive_data', 'config') [<configparser.ConfigParser object at 0x10c606650>,,, <configparser.ConfigParser object at 0x10c714580>]
('/mtgjson5/price_builder.py', 'get_price_archive_data', 'get_price_archive_data_ret') [dict]
('/mtgjson5/price_builder.py', 'get_price_archive_data', 'github_local_path') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/.mtgjson5_cache/msg]
('/mtgjson5/price_builder.py', 'download_old_all_printings', 'file_bytes') [bytes]
('/mtgjson5/price_builder.py', 'download_old_all_printings', 'file_data') [<Response [200]>]
('/mtgjson5/price_builder.py', 'download_old_all_printings', 'chunk') []
('/mtgjson5/price_builder.py', 'build_prices', 'today_prices') [dict]
('/mtgjson5/price_builder.py', 'build_prices', 'build_prices_ret') [dict]
('/mtgjson5/price_builder.py', 'build_prices', 'archive_prices') [dict]
('/mtgjson5/price_builder.py', 'build_prices', 'config') [<configparser.ConfigParser object at 0x10c606650>,,, <configparser.ConfigParser object at 0x10c714580>]
('/mtgjson5/price_builder.py', 'build_prices', 'github_local_path') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/.mtgjson5_cache/msg]
('/mtgjson5/price_builder.py', 'should_build_new_prices', 'cache_file') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/.mtgjson5_cache/msg]
('/mtgjson5/price_builder.py', 'should_build_new_prices', 'should_build_new_prices_ret') [bool]
('/mtgjson5/price_builder.py', 'should_build_new_prices', 'stat_time') [float]
('/mtgjson5/price_builder.py', 'should_build_new_prices', 'last_price_build_time') [2024-05-12 22:51:54.546650,,, 2024-05-20 23:34:43.183037]
('/mtgjson5/price_builder.py', 'should_build_new_prices', 'twelve_hours_ago') [2024-05-20 11:34:35.263002,,, 2024-05-20 11:34:43.042300]
('/mtgjson5/price_builder.py', 'prune_recursive', 'depth') [int]
('/mtgjson5/price_builder.py', 'prune_recursive', 'obj') [dict]
('/mtgjson5/price_builder.py', 'prune_recursive', 'date') [str]
('/mtgjson5/price_builder.py', 'prune_recursive', 'keys_pruned') [int]
('/mtgjson5/price_builder.py', 'prune_recursive', 'key') [str]
('/mtgjson5/price_builder.py', 'prune_recursive', 'value') [str]
('/mtgjson5/providers/cardhoarder.py', '__init__', 'self') [CardHoarderProvider]
('/mtgjson5/price_builder.py', '_generate_prices', 'provider') [CardHoarderProvider,,, CardKingdomProvider,,, CardMarketProvider,,, TCGPlayerProvider]
('/mtgjson5/price_builder.py', '_generate_prices', 'preprocess_prices') [dict]
('/mtgjson5/price_builder.py', '_generate_prices', 'final_prices') [dict]
('/mtgjson5/price_builder.py', '_generate_prices', '_generate_prices_ret') [dict]
('/mtgjson5/providers/tcgplayer.py', '__init__', 'self') [TCGPlayerProvider]
('/mtgjson5/providers/cardmarket.py', '__init__', 'headers') [None]
('/mtgjson5/providers/cardmarket.py', '__init__', 'self') [CardMarketProvider]
('/mtgjson5/providers/cardmarket.py', '__init__', 'config') [<configparser.ConfigParser object at 0x10bf60460>,,, <configparser.ConfigParser object at 0x10c15c3a0>,,, <configparser.ConfigParser object at 0x10c714580>]
('/mtgjson5/providers/cardkingdom.py', '__init__', 'self') [CardKingdomProvider]
('/mtgjson5/utils.py', 'deep_merge_dictionaries', 'first_dict') [dict,,, set]
('/mtgjson5/utils.py', 'deep_merge_dictionaries', 'other_dicts') [dict,,, set]
('/mtgjson5/utils.py', 'deep_merge_dictionaries', 'result') [dict,,, set]
('/mtgjson5/utils.py', 'deep_merge_dictionaries', 'dictionary') [MtgjsonPricesObject,,, dict,,, list,,, set]
('/mtgjson5/utils.py', 'deep_merge_dictionaries', 'key') []
('/mtgjson5/utils.py', 'deep_merge_dictionaries', 'new') [dict,,, set]
('/mtgjson5/utils.py', 'deep_merge_dictionaries', 'old') []
('/mtgjson5/utils.py', 'deep_merge_dictionaries', 'deep_merge_dictionaries_ret') [dict,,, set]
('/mtgjson5/providers/abstract.py', 'get_configs', 'get_configs_ret') [<configparser.ConfigParser object at 0x10bf60460>,,, <configparser.ConfigParser object at 0x10c15c3a0>,,, <configparser.ConfigParser object at 0x10c388820>,,, <configparser.ConfigParser object at 0x10c583490>,,, <configparser.ConfigParser object at 0x10c606650>,,, <configparser.ConfigParser object at 0x10c714580>,,, <configparser.ConfigParser object at 0x10c73c2b0>,,, <configparser.ConfigParser object at 0x10c8a7400>,,, <configparser.ConfigParser object at 0x10c8d0250>,,, <configparser.ConfigParser object at 0x10c997520>,,, <configparser.ConfigParser object at 0x125451ae0>,,, <configparser.ConfigParser object at 0x12583ee30>]
('/mtgjson5/providers/cardhoarder.py', '_build_http_header', 'self') [CardHoarderProvider]
('/mtgjson5/providers/cardhoarder.py', '_build_http_header', 'headers') [dict]
('/mtgjson5/providers/cardhoarder.py', '_build_http_header', 'config') [<configparser.ConfigParser object at 0x10c583490>]
('/mtgjson5/providers/cardhoarder.py', '_build_http_header', '_build_http_header_ret') [dict]
('/mtgjson5/providers/abstract.py', '__init__', 'self') [AbstractProvider,,, CardHoarderProvider,,, CardKingdomProvider,,, CardMarketProvider,,, GathererProvider,,, GitHubBoostersProvider,,, GitHubDecksProvider,,, GitHubMTGSqliteProvider,,, MTGBanProvider,,, ScryfallProvider,,, TCGPlayerProvider,,, WhatsInStandardProvider,,, WizardsProvider]
('/mtgjson5/providers/abstract.py', '__init__', 'headers') [None,,, dict]
('/mtgjson5/providers/cardhoarder.py', 'generate_today_price_dict', 'self') [CardHoarderProvider]
('/mtgjson5/providers/cardhoarder.py', 'generate_today_price_dict', 'all_printings_path') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/msg]
('/mtgjson5/providers/cardhoarder.py', 'generate_today_price_dict', 'generate_today_price_dict_ret') [dict]
('/mtgjson5/providers/cardhoarder.py', 'generate_today_price_dict', 'mtgo_to_mtgjson_map') [dict]
('/mtgjson5/providers/cardhoarder.py', 'generate_today_price_dict', 'normal_cards') [dict]
('/mtgjson5/providers/cardhoarder.py', 'generate_today_price_dict', 'foil_cards') []
('/mtgjson5/providers/cardhoarder.py', 'generate_today_price_dict', 'db_contents') [dict]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'MtgjsonEnumValuesObject_class_initializer', 'set_key_struct') [dict]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'MtgjsonEnumValuesObject_class_initializer', 'deck_key_struct') [dict]
('/mtgjson5/compiled_classes/mtgjson_all_identifiers.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'MtgjsonAtomicCardsObject_class_initializer', '__name_regex') [re.compile('^([^\\n]+) \\([a-z]\\)$')]
('/mtgjson5/classes/mtgjson_card.py', 'MtgjsonCardObject_class_initializer', '__allow_if_falsey') [set]
('/mtgjson5/classes/mtgjson_card.py', 'MtgjsonCardObject_class_initializer', '__remove_for_tokens') [set]
('/mtgjson5/classes/mtgjson_card.py', 'MtgjsonCardObject_class_initializer', '__remove_for_cards') [set]
('/mtgjson5/classes/mtgjson_card.py', 'MtgjsonCardObject_class_initializer', '__atomic_keys') [list]
('/mtgjson5/classes/mtgjson_set.py', 'MtgjsonSetObject_class_initializer', '__allow_if_falsey') [set]
('/mtgjson5/providers/tcgplayer.py', 'generate_today_price_dict', 'self') [TCGPlayerProvider]
('/mtgjson5/providers/tcgplayer.py', 'generate_today_price_dict', 'all_printings_path') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/msg]
('/mtgjson5/providers/tcgplayer.py', 'generate_today_price_dict', 'generate_today_price_dict_ret') [dict]
('/mtgjson5/providers/tcgplayer.py', 'generate_today_price_dict', 'ids_and_names') [list]
('/mtgjson5/providers/tcgplayer.py', 'generate_today_price_dict', 'tcg_to_mtgjson_map') [dict]
('/mtgjson5/providers/tcgplayer.py', 'generate_today_price_dict', 'buylist_dict') [dict,,, list]
('/mtgjson5/providers/tcgplayer.py', 'generate_today_price_dict', 'retail_dict') [dict,,, list]
('/mtgjson5/providers/tcgplayer.py', 'generate_today_price_dict', 'combined_listings') [list]
('/mtgjson5/providers/tcgplayer.py', 'generate_today_price_dict', 'key') []
('/mtgjson5/providers/tcgplayer.py', 'generate_today_price_dict', 'value') []
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'self') [CardMarketProvider]
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'all_printings_path') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/msg,,, /testpath]
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'generate_today_price_dict_ret') [dict]
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'mtgjson_id_map') [dict]
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'price_data') []
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'data_frame_columns') [list]
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'product_id_index') []
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'avg_sell_price_index') []
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'avg_foil_price_index') []
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'today_dict') [dict]
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'row') []
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'value') []
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'columns') [list]
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'product_id') [str]
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'mtgjson_uuid') []
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'avg_sell_price') [int]
('/mtgjson5/providers/cardmarket.py', 'generate_today_price_dict', 'avg_foil_price') [int]
('/mtgjson5/providers/cardkingdom.py', 'generate_today_price_dict', 'self') [CardKingdomProvider]
('/mtgjson5/providers/cardkingdom.py', 'generate_today_price_dict', 'all_printings_path') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/msg,,, /testpath]
('/mtgjson5/providers/cardkingdom.py', 'generate_today_price_dict', 'request_api_response') []
('/mtgjson5/providers/cardkingdom.py', 'generate_today_price_dict', 'card_kingdom_id_to_mtgjson') [dict]
('/mtgjson5/providers/cardkingdom.py', 'generate_today_price_dict', 'today_dict') [dict]
('/mtgjson5/providers/cardkingdom.py', 'generate_today_price_dict', 'card_rows') []
('/mtgjson5/providers/cardkingdom.py', 'generate_today_price_dict', 'card') []
('/mtgjson5/providers/cardkingdom.py', 'generate_today_price_dict', 'card_id') []
('/mtgjson5/providers/cardkingdom.py', 'generate_today_price_dict', 'mtgjson_uuid') [MtgjsonPricesObject,,, dict]
('/mtgjson5/providers/cardkingdom.py', 'generate_today_price_dict', 'generate_today_price_dict_ret') [dict]
('/mtgjson5/providers/tcgplayer.py', '_build_http_header', 'self') [TCGPlayerProvider]
('/mtgjson5/providers/tcgplayer.py', '_build_http_header', 'headers') [dict]
('/mtgjson5/providers/tcgplayer.py', '_build_http_header', '_build_http_header_ret') [dict]
('/mtgjson5/providers/cardmarket.py', '__init_set_map', 'self') [CardMarketProvider]
('/mtgjson5/providers/cardmarket.py', '__init_set_map', 'mkm_resp') []
('/mtgjson5/providers/cardmarket.py', '__init_set_map', 'set_content') []
('/mtgjson5/providers/cardmarket.py', '__init_set_map', 'mkm_set_name_fixes') []
('/mtgjson5/providers/cardmarket.py', '__init_set_map', 'old_set_name') []
('/mtgjson5/providers/cardmarket.py', '__init_set_map', 'new_set_name') []
('/mtgjson5/providers/cardkingdom.py', '_build_http_header', 'self') [CardKingdomProvider]
('/mtgjson5/providers/cardkingdom.py', '_build_http_header', '_build_http_header_ret') [dict]
('/mtgjson5/providers/abstract.py', '__install_cache', 'self') [AbstractProvider,,, CardHoarderProvider,,, CardKingdomProvider,,, CardMarketProvider,,, GathererProvider,,, GitHubBoostersProvider,,, GitHubDecksProvider,,, GitHubMTGSqliteProvider,,, MTGBanProvider,,, ScryfallProvider,,, TCGPlayerProvider,,, WhatsInStandardProvider,,, WizardsProvider]
('/mtgjson5/providers/cardhoarder.py', 'get_mtgo_to_mtgjson_map', 'all_printings_path') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/msg,,, /testpath]
('/mtgjson5/providers/cardhoarder.py', 'get_mtgo_to_mtgjson_map', 'mtgo_to_mtgjson') [dict]
('/mtgjson5/providers/cardhoarder.py', 'get_mtgo_to_mtgjson_map', 'card') []
('/mtgjson5/providers/cardhoarder.py', 'get_mtgo_to_mtgjson_map', 'identifiers') []
('/mtgjson5/providers/cardhoarder.py', 'get_mtgo_to_mtgjson_map', 'get_mtgo_to_mtgjson_map_ret') [dict]
('/mtgjson5/providers/cardhoarder.py', 'convert_cardhoarder_to_mtgjson', 'self') [CardHoarderProvider]
('/mtgjson5/providers/cardhoarder.py', 'convert_cardhoarder_to_mtgjson', 'url_to_parse') [str]
('/mtgjson5/providers/cardhoarder.py', 'convert_cardhoarder_to_mtgjson', 'mtgo_to_mtgjson_map') [dict]
('/mtgjson5/providers/cardhoarder.py', 'convert_cardhoarder_to_mtgjson', 'mtgjson_price_map') [dict]
('/mtgjson5/providers/cardhoarder.py', 'convert_cardhoarder_to_mtgjson', 'request_api_response') []
('/mtgjson5/providers/cardhoarder.py', 'convert_cardhoarder_to_mtgjson', 'file_rows') []
('/mtgjson5/providers/cardhoarder.py', 'convert_cardhoarder_to_mtgjson', 'file_row') []
('/mtgjson5/providers/cardhoarder.py', 'convert_cardhoarder_to_mtgjson', 'card_row') []
('/mtgjson5/providers/cardhoarder.py', 'convert_cardhoarder_to_mtgjson', 'mtgo_id') []
('/mtgjson5/providers/cardhoarder.py', 'convert_cardhoarder_to_mtgjson', 'card_uuid') []
('/mtgjson5/providers/cardhoarder.py', 'convert_cardhoarder_to_mtgjson', 'convert_cardhoarder_to_mtgjson_ret') [dict]
('/mtgjson5/providers/cardhoarder.py', '_construct_for_cards', 'is_mtgo_normal') [bool]
('/mtgjson5/providers/cardhoarder.py', '_construct_for_cards', 'self') [CardHoarderProvider]
('/mtgjson5/providers/cardhoarder.py', '_construct_for_cards', 'semi_completed_data') [dict]
('/mtgjson5/providers/cardhoarder.py', '_construct_for_cards', 'cards') [dict]
('/mtgjson5/providers/cardhoarder.py', '_construct_for_cards', 'key') []
('/mtgjson5/providers/cardhoarder.py', '_construct_for_cards', 'value') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_magic_set_ids', 'self') [TCGPlayerProvider]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_magic_set_ids', 'magic_set_ids') [list]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_magic_set_ids', 'api_offset') [int]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_magic_set_ids', 'api_response') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_magic_set_ids', 'response') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_magic_set_ids', 'magic_set') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_magic_set_ids', 'get_tcgplayer_magic_set_ids_ret') [list]
('/mtgjson5/utils.py', 'generate_card_mapping', 'all_printings_path') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/msg,,, /testpath]
('/mtgjson5/utils.py', 'generate_card_mapping', 'left_side_components') [tuple]
('/mtgjson5/utils.py', 'generate_card_mapping', 'right_side_components') [tuple]
('/mtgjson5/utils.py', 'generate_card_mapping', 'dump_map') [dict]
('/mtgjson5/utils.py', 'generate_card_mapping', 'card') []
('/mtgjson5/utils.py', 'generate_card_mapping', 'key') []
('/mtgjson5/utils.py', 'generate_card_mapping', 'inside_component') [str]
('/mtgjson5/utils.py', 'generate_card_mapping', 'value') []
('/mtgjson5/utils.py', 'generate_card_mapping', 'generate_card_mapping_ret') [dict]
('/mtgjson5/utils.py', 'parallel_call', 'pool_size') [int]
('/mtgjson5/utils.py', 'parallel_call', 'force_starmap') [bool]
('/mtgjson5/utils.py', 'parallel_call', 'fold_dict') [bool]
('/mtgjson5/utils.py', 'parallel_call', 'fold_list') [bool]
('/mtgjson5/utils.py', 'parallel_call', 'repeatable_args') [None,,, list,,, tuple]
('/mtgjson5/utils.py', 'parallel_call', 'function') [meta_func]
('/mtgjson5/utils.py', 'parallel_call', 'args') [list]
('/mtgjson5/utils.py', 'parallel_call', 'pool') [<Pool at 0x10bf43220 set()>,,, <Pool at 0x10c011420 set()>,,, <Pool at 0x10c2aa320 set()>,,, <Pool at 0x10c878b80 set()>,,, <Pool at 0x12541d150 set()>,,, <Pool at 0x125c06650 set()>]
('/mtgjson5/utils.py', 'parallel_call', 'arg') [bool,,, dict,,, int,,, str]
('/mtgjson5/utils.py', 'parallel_call', 'extra_args_rep') [list]
('/mtgjson5/utils.py', 'parallel_call', 'results') [list]
('/mtgjson5/utils.py', 'parallel_call', 'parallel_call_ret') [dict,,, list]
('/mtgjson5/providers/cardmarket.py', '_get_card_market_data', 'self') [CardMarketProvider]
('/mtgjson5/providers/cardmarket.py', '_get_card_market_data', 'mkm_response') []
('/mtgjson5/providers/cardmarket.py', '_get_card_market_data', 'price_data') []
('/mtgjson5/providers/cardmarket.py', '_get_card_market_data', 'decoded_data') []
('/mtgjson5/providers/cardmarket.py', '_get_card_market_data', '_get_card_market_data_ret') []
('/mtgjson5/classes/mtgjson_prices.py', '__init__', 'self') [MtgjsonPricesObject]
('/mtgjson5/classes/mtgjson_prices.py', '__init__', 'source') [str]
('/mtgjson5/classes/mtgjson_prices.py', '__init__', 'provider') [str]
('/mtgjson5/classes/mtgjson_prices.py', '__init__', 'date') []
('/mtgjson5/classes/mtgjson_prices.py', '__init__', 'currency') [str]
('/mtgjson5/providers/cardkingdom.py', 'download', 'params') [None,,, dict]
('/mtgjson5/providers/cardkingdom.py', 'download', 'self') [CardKingdomProvider]
('/mtgjson5/providers/cardkingdom.py', 'download', 'url') [str]
('/mtgjson5/providers/cardkingdom.py', 'download', 'session') [<requests.sessions.Session object at 0x10c2bdf00>,,, <requests.sessions.Session object at 0x10c56b130>]
('/mtgjson5/providers/cardkingdom.py', 'download', 'response') []
('/mtgjson5/providers/cardkingdom.py', 'download', 'download_ret') []
('/mtgjson5/providers/tcgplayer.py', '_request_tcgplayer_bearer', 'self') [TCGPlayerProvider]
('/mtgjson5/providers/tcgplayer.py', '_request_tcgplayer_bearer', 'config') [<configparser.ConfigParser object at 0x10c8a7400>,,, <configparser.ConfigParser object at 0x12583ee30>]
('/mtgjson5/providers/tcgplayer.py', '_request_tcgplayer_bearer', '_request_tcgplayer_bearer_ret') [str]
('/mtgjson5/providers/tcgplayer.py', '_request_tcgplayer_bearer', 'tcg_post') []
('/mtgjson5/providers/tcgplayer.py', '_request_tcgplayer_bearer', 'request_as_json') []
('/mtgjson5/utils.py', 'get_all_cards_and_tokens', 'all_printings_path') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/msg,,, /testpath]
('/mtgjson5/utils.py', 'get_all_cards_and_tokens', 'file_contents') []
('/mtgjson5/utils.py', 'get_all_cards_and_tokens', 'card') []
('/mtgjson5/providers/cardhoarder.py', 'download', 'params') [None,,, dict]
('/mtgjson5/providers/cardhoarder.py', 'download', 'self') [CardHoarderProvider]
('/mtgjson5/providers/cardhoarder.py', 'download', 'url') [str]
('/mtgjson5/providers/cardhoarder.py', 'download', 'session') [<requests.sessions.Session object at 0x10c1d72b0>,,, <requests.sessions.Session object at 0x10c2bdf00>]
('/mtgjson5/providers/cardhoarder.py', 'download', 'response') []
('/mtgjson5/providers/cardhoarder.py', 'download', 'download_ret') []
('/mtgjson5/providers/tcgplayer.py', 'download', 'params') [None,,, dict]
('/mtgjson5/providers/tcgplayer.py', 'download', 'self') [TCGPlayerProvider]
('/mtgjson5/providers/tcgplayer.py', 'download', 'url') [str]
('/mtgjson5/providers/tcgplayer.py', 'download', 'session') [<requests.sessions.Session object at 0x10c27e1a0>,,, <requests.sessions.Session object at 0x10c2bdf00>,,, <requests.sessions.Session object at 0x10c67b250>,,, <requests.sessions.Session object at 0x12541ea40>]
('/mtgjson5/providers/tcgplayer.py', 'download', 'response') []
('/mtgjson5/providers/tcgplayer.py', 'download', 'download_ret') []
('/mtgjson5/utils.py', 'retryable_session', 'retries') [int]
('/mtgjson5/utils.py', 'retryable_session', 'stack') [list]
('/mtgjson5/utils.py', 'retryable_session', 'calling_class') []
('/mtgjson5/utils.py', 'retryable_session', 'session') [<requests.sessions.Session object at 0x10c1d7100>,,, <requests.sessions.Session object at 0x10c1d72b0>,,, <requests.sessions.Session object at 0x10c25ab60>,,, <requests.sessions.Session object at 0x10c27e1a0>,,, <requests.sessions.Session object at 0x10c2bdf00>,,, <requests.sessions.Session object at 0x10c429cf0>,,, <requests.sessions.Session object at 0x10c445600>,,, <requests.sessions.Session object at 0x10c46d9c0>,,, <requests.sessions.Session object at 0x10c56b130>,,, <requests.sessions.Session object at 0x10c67b250>,,, <requests.sessions.Session object at 0x10c680730>,,, <requests.sessions.Session object at 0x10c7747f0>,,, <requests.sessions.Session object at 0x12541ea40>,,, <requests.sessions.Session object at 0x1258a3d30>,,, <requests.sessions.Session object at 0x125994d60>,,, <requests.sessions.Session object at 0x125a200a0>,,, <requests.sessions.Session object at 0x125c34490>,,, <requests.sessions.Session object at 0x125d35030>]
('/mtgjson5/utils.py', 'retryable_session', 'retry') [Retry(total=10, connect=None, read=None, redirect=None, status=None)]
('/mtgjson5/utils.py', 'retryable_session', 'adapter') [<requests.adapters.HTTPAdapter object at 0x10bf42e30>,,, <requests.adapters.HTTPAdapter object at 0x10bf9b8e0>,,, <requests.adapters.HTTPAdapter object at 0x10c013970>,,, <requests.adapters.HTTPAdapter object at 0x10c16a1a0>,,, <requests.adapters.HTTPAdapter object at 0x10c187580>,,, <requests.adapters.HTTPAdapter object at 0x10c1f9d50>,,, <requests.adapters.HTTPAdapter object at 0x10c2ab310>,,, <requests.adapters.HTTPAdapter object at 0x10c2c5450>,,, <requests.adapters.HTTPAdapter object at 0x10c3e6290>,,, <requests.adapters.HTTPAdapter object at 0x10c437970>,,, <requests.adapters.HTTPAdapter object at 0x10c8635e0>,,, <requests.adapters.HTTPAdapter object at 0x10c8a45b0>,,, <requests.adapters.HTTPAdapter object at 0x10c96f2e0>,,, <requests.adapters.HTTPAdapter object at 0x12545c8e0>,,, <requests.adapters.HTTPAdapter object at 0x12554a530>,,, <requests.adapters.HTTPAdapter object at 0x1255e4b20>,,, <requests.adapters.HTTPAdapter object at 0x1258d4880>,,, <requests.adapters.HTTPAdapter object at 0x125bfdc00>]
('/mtgjson5/utils.py', 'retryable_session', 'retryable_session_ret') [<requests.sessions.Session object at 0x10c1d7100>,,, <requests.sessions.Session object at 0x10c1d72b0>,,, <requests.sessions.Session object at 0x10c25ab60>,,, <requests.sessions.Session object at 0x10c27e1a0>,,, <requests.sessions.Session object at 0x10c2bdf00>,,, <requests.sessions.Session object at 0x10c429cf0>,,, <requests.sessions.Session object at 0x10c445600>,,, <requests.sessions.Session object at 0x10c46d9c0>,,, <requests.sessions.Session object at 0x10c56b130>,,, <requests.sessions.Session object at 0x10c67b250>,,, <requests.sessions.Session object at 0x10c680730>,,, <requests.sessions.Session object at 0x10c7747f0>,,, <requests.sessions.Session object at 0x12541ea40>,,, <requests.sessions.Session object at 0x1258a3d30>,,, <requests.sessions.Session object at 0x125994d60>,,, <requests.sessions.Session object at 0x125a200a0>,,, <requests.sessions.Session object at 0x125c34490>,,, <requests.sessions.Session object at 0x125d35030>]
('/mtgjson5/providers/abstract.py', 'log_download', 'response') []
('/mtgjson5/utils.py', 'get_all_cards_and_tokens_from_content', 'all_printings_content') [dict,,, set]
('/mtgjson5/utils.py', 'get_all_cards_and_tokens_from_content', 'cards_and_tokens_with_set_code') [list]
('/mtgjson5/utils.py', 'get_all_cards_and_tokens_from_content', 'value') []
('/mtgjson5/utils.py', 'get_all_cards_and_tokens_from_content', 'card') []
('/mtgjson5/utils.py', 'get_all_cards_and_tokens_from_content', 'get_all_cards_and_tokens_from_content_ret') [list]
('/mtgjson5/providers/github_mtgsqlite.py', '__init__', 'self') [GitHubMTGSqliteProvider]
('/mtgjson5/providers/github_mtgsqlite.py', 'download', 'params') [None,,, dict]
('/mtgjson5/providers/github_mtgsqlite.py', 'download', 'self') [GitHubMTGSqliteProvider]
('/mtgjson5/providers/github_mtgsqlite.py', 'download', 'url') [str]
('/mtgjson5/providers/github_mtgsqlite.py', 'download', 'git_sh') []
('/mtgjson5/providers/github_mtgsqlite.py', 'build_sql_and_csv_files', 'self') [GitHubMTGSqliteProvider]
('/mtgjson5/providers/github_mtgsqlite.py', '_build_http_header', 'self') [GitHubMTGSqliteProvider]
('/mtgjson5/providers/github_mtgsqlite.py', '_build_http_header', '_build_http_header_ret') [dict]
('/mtgjson5/classes/mtgjson_foreign_data.py', '__init__', 'self') [MtgjsonForeignDataObject]
('/mtgjson5/classes/mtgjson_foreign_data.py', 'to_json', 'self') [MtgjsonForeignDataObject]
('/mtgjson5/classes/mtgjson_foreign_data.py', 'to_json', 'skip_keys') [tuple]
('/mtgjson5/classes/mtgjson_foreign_data.py', 'to_json', 'key') []
('/mtgjson5/classes/mtgjson_foreign_data.py', 'to_json', 'value') []
('/mtgjson5/classes/mtgjson_foreign_data.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/utils.py', 'to_camel_case', 'snake_str') [str]
('/mtgjson5/utils.py', 'to_camel_case', 'components') []
('/mtgjson5/utils.py', 'to_camel_case', 'to_camel_case_ret') [str]
('/mtgjson5/compiled_classes/mtgjson_structures.py', '__init__', 'self') [MtgjsonStructuresObject]
('/mtgjson5/compiled_classes/mtgjson_structures.py', 'get_all_compiled_file_names', 'self') [MtgjsonStructuresObject]
('/mtgjson5/compiled_classes/mtgjson_structures.py', 'get_all_compiled_file_names', 'get_all_compiled_file_names_ret') [list]
('/mtgjson5/compiled_classes/mtgjson_structures.py', 'get_compiled_list_files', 'self') [MtgjsonStructuresObject]
('/mtgjson5/compiled_classes/mtgjson_structures.py', 'get_compiled_list_files', 'get_compiled_list_files_ret') [list]
('/mtgjson5/compiled_classes/mtgjson_structures.py', 'to_json', 'self') [MtgjsonStructuresObject]
('/mtgjson5/compiled_classes/mtgjson_structures.py', 'to_json', 'key') []
('/mtgjson5/compiled_classes/mtgjson_structures.py', 'to_json', 'value') []
('/mtgjson5/compiled_classes/mtgjson_structures.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/providers/abstract.py', 'download', 'params') [None,,, dict]
('/mtgjson5/providers/abstract.py', 'download', 'self') [AbstractProvider]
('/mtgjson5/providers/abstract.py', 'download', 'url') [str]
('/mtgjson5/arg_parser.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/arg_parser.py', 'parse_args', 'parser') [ArgumentParser(prog='mtgjson5', usage=None, description=None, formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)]
('/mtgjson5/arg_parser.py', 'parse_args', 'sets_group') [<argparse._MutuallyExclusiveGroup object at 0x10c15f2b0>,,, <argparse._MutuallyExclusiveGroup object at 0x10c15fc10>,,, <argparse._MutuallyExclusiveGroup object at 0x122a2d1e0>,,, <argparse._MutuallyExclusiveGroup object at 0x122a435b0>,,, <argparse._MutuallyExclusiveGroup object at 0x122a436d0>,,, <argparse._MutuallyExclusiveGroup object at 0x12546c760>]
('/mtgjson5/arg_parser.py', 'parse_args', 'mtgjson_arg_group') [<argparse._ArgumentGroup object at 0x10c1540d0>,,, <argparse._ArgumentGroup object at 0x10c154160>,,, <argparse._ArgumentGroup object at 0x122a2cb50>,,, <argparse._ArgumentGroup object at 0x122a703d0>,,, <argparse._ArgumentGroup object at 0x122a704f0>,,, <argparse._ArgumentGroup object at 0x12546c7c0>]
('/mtgjson5/arg_parser.py', 'parse_args', 'parse_args_ret') [Namespace(sets=[], all_sets=False, full_build=False, resume_build=False, compress=False, pretty=False, skip_sets=[], referrals=False, no_alerts=False)]
('/mtgjson5/arg_parser.py', 'get_sets_already_built', 'json_output_files') [list]
('/mtgjson5/arg_parser.py', 'get_sets_already_built', 'set_codes_found') [list]
('/mtgjson5/arg_parser.py', 'get_sets_already_built', 'set_code') [bool]
('/mtgjson5/arg_parser.py', 'get_sets_already_built', 'get_sets_already_built_ret') [list]
('/mtgjson5/arg_parser.py', 'get_all_scryfall_sets', 'scryfall_instance') [ScryfallProvider]
('/mtgjson5/arg_parser.py', 'get_all_scryfall_sets', 'scryfall_sets') []
('/mtgjson5/arg_parser.py', 'get_all_scryfall_sets', 'get_all_scryfall_sets_ret') [list]
('/mtgjson5/arg_parser.py', 'get_all_scryfall_sets', 'set_obj') []
('/mtgjson5/arg_parser.py', 'get_all_scryfall_sets', 'scryfall_set_codes') [list]
('/mtgjson5/arg_parser.py', 'get_all_scryfall_sets', 'set_code') []
('/mtgjson5/arg_parser.py', 'get_sets_to_build', 'args') []
('/mtgjson5/arg_parser.py', 'get_sets_to_build', 'get_sets_to_build_ret') []
('/mtgjson5/arg_parser.py', 'get_sets_to_build', 'scryfall_sets') []
('/mtgjson5/arg_parser.py', 'get_sets_to_build', 'non_token_sets') [bool]
('/mtgjson5/arg_parser.py', 'get_sets_to_build', 'return_list') [list]
('/mtgjson5/providers/scryfall.py', '__init__', 'self') [ScryfallProvider]
('/mtgjson5/providers/scryfall.py', 'download', 'params') [None,,, dict]
('/mtgjson5/providers/scryfall.py', 'download', 'self') [ScryfallProvider]
('/mtgjson5/providers/scryfall.py', 'download', 'url') [None,,, bool,,, dict,,, list,,, str]
('/mtgjson5/providers/scryfall.py', 'download', 'session') [<requests.sessions.Session object at 0x10c1d7100>,,, <requests.sessions.Session object at 0x10c25ab60>,,, <requests.sessions.Session object at 0x12541ea40>,,, <requests.sessions.Session object at 0x1258a3d30>,,, <requests.sessions.Session object at 0x125994d60>]
('/mtgjson5/providers/scryfall.py', 'download', 'response') []
('/mtgjson5/providers/scryfall.py', 'download', 'download_ret') []
('/mtgjson5/providers/scryfall.py', '_build_http_header', 'self') [ScryfallProvider]
('/mtgjson5/providers/scryfall.py', '_build_http_header', 'config') [<configparser.ConfigParser object at 0x10c15c3a0>,,, <configparser.ConfigParser object at 0x10c73c2b0>,,, <configparser.ConfigParser object at 0x10c997520>,,, <configparser.ConfigParser object at 0x125451ae0>]
('/mtgjson5/providers/scryfall.py', '_build_http_header', '_build_http_header_ret') [dict]
('/mtgjson5/providers/scryfall.py', '_build_http_header', 'headers') [dict]
('/mtgjson5/providers/scryfall.py', 'generate_cards_without_limits', 'self') [ScryfallProvider]
('/mtgjson5/providers/scryfall.py', 'generate_cards_without_limits', 'generate_cards_without_limits_ret') []
('/mtgjson5/providers/github_decks.py', '__init__', 'self') [GitHubDecksProvider]
('/mtgjson5/providers/github_decks.py', 'download', 'params') [None,,, dict]
('/mtgjson5/providers/github_decks.py', 'download', 'self') [GitHubDecksProvider]
('/mtgjson5/providers/github_decks.py', 'download', 'url') [str]
('/mtgjson5/providers/github_decks.py', 'download', 'session') [<requests.sessions.Session object at 0x10c680730>,,, <requests.sessions.Session object at 0x12541ea40>]
('/mtgjson5/providers/github_decks.py', 'download', 'response') []
('/mtgjson5/providers/github_decks.py', 'download', 'download_ret') [list]
('/mtgjson5/providers/github_decks.py', 'iterate_precon_decks', 'self') [GitHubDecksProvider]
('/mtgjson5/providers/github_decks.py', 'iterate_precon_decks', 'deck') [set]
('/mtgjson5/providers/github_decks.py', 'iterate_precon_decks', 'this_deck') [MtgjsonDeckObject]
('/mtgjson5/providers/github_decks.py', 'build_single_card', 'card') [set]
('/mtgjson5/providers/github_decks.py', 'build_single_card', 'cards') [list]
('/mtgjson5/providers/github_decks.py', 'build_single_card', 'set_to_build_from') []
('/mtgjson5/providers/github_decks.py', 'build_single_card', 'build_single_card_ret') [list]
('/mtgjson5/providers/github_decks.py', 'build_single_card', 'mtgjson_card') []
('/mtgjson5/providers/github_decks.py', '_build_http_header', 'self') [GitHubDecksProvider]
('/mtgjson5/providers/github_decks.py', '_build_http_header', '_build_http_header_ret') [dict]
('/mtgjson5/classes/mtgjson_deck.py', 'set_sanitized_name', 'self') [MtgjsonDeckObject]
('/mtgjson5/classes/mtgjson_deck.py', 'set_sanitized_name', 'name') [str]
('/mtgjson5/classes/mtgjson_deck.py', 'set_sanitized_name', 'word_characters_only_regex') [re.compile('[^\\w]')]
('/mtgjson5/classes/mtgjson_deck.py', 'set_sanitized_name', 'capital_case') [str]
('/mtgjson5/classes/mtgjson_deck.py', 'set_sanitized_name', 'deck_name_sanitized') [str]
('/mtgjson5/classes/mtgjson_purchase_urls.py', 'build_keys_to_skip', 'self') [MtgjsonPurchaseUrlsObject]
('/mtgjson5/classes/mtgjson_purchase_urls.py', 'build_keys_to_skip', 'excluded_keys') [set]
('/mtgjson5/classes/mtgjson_purchase_urls.py', 'build_keys_to_skip', '_') []
('/mtgjson5/classes/mtgjson_purchase_urls.py', 'build_keys_to_skip', 'value') []
('/mtgjson5/classes/mtgjson_purchase_urls.py', 'build_keys_to_skip', 'build_keys_to_skip_ret') [set]
('/mtgjson5/classes/mtgjson_purchase_urls.py', 'to_json', 'self') [MtgjsonPurchaseUrlsObject]
('/mtgjson5/classes/mtgjson_purchase_urls.py', 'to_json', 'skip_keys') []
('/mtgjson5/classes/mtgjson_purchase_urls.py', 'to_json', 'key') []
('/mtgjson5/classes/mtgjson_purchase_urls.py', 'to_json', 'value') []
('/mtgjson5/classes/mtgjson_purchase_urls.py', 'to_json', 'to_json_ret') [dict]
('/setup.py', 'module_initializer', 'project_root') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/utils]
('/setup.py', 'module_initializer', 'config_file') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/utils/msg,,, /Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/utils/mtgjson5/resources/mtgjson.properties]
('/setup.py', 'module_initializer', 'config') [<configparser.ConfigParser object at 0x10a661330>]
('/mtgjson5/referral_builder.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/compress_generator.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/set_builder.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/output_generator.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/__main__.py', 'module_initializer', 'LOGGER') [<Logger pt_engine.utils.base (WARNING)>]
('/mtgjson5/providers/gatherer.py', '__init__', 'self') [GathererProvider]
('/mtgjson5/providers/gatherer.py', 'download', 'params') [None,,, dict]
('/mtgjson5/providers/gatherer.py', 'download', 'self') [GathererProvider]
('/mtgjson5/providers/gatherer.py', 'download', 'url') [str]
('/mtgjson5/providers/gatherer.py', 'download', 'session') [<requests.sessions.Session object at 0x125d35030>]
('/mtgjson5/providers/gatherer.py', 'download', 'response') []
('/mtgjson5/providers/gatherer.py', 'download', 'download_ret') []
('/mtgjson5/providers/gatherer.py', 'get_cards', 'set_code') [str]
('/mtgjson5/providers/gatherer.py', 'get_cards', 'self') [GathererProvider]
('/mtgjson5/providers/gatherer.py', 'get_cards', 'multiverse_id') [None,,, str]
('/mtgjson5/providers/gatherer.py', 'get_cards', 'response') []
('/mtgjson5/providers/gatherer.py', 'get_cards', 'get_cards_ret') [list]
('/mtgjson5/providers/gatherer.py', 'parse_cards', 'strip_parentheses') [bool]
('/mtgjson5/providers/gatherer.py', 'parse_cards', 'self') [GathererProvider]
('/mtgjson5/providers/gatherer.py', 'parse_cards', 'gatherer_data') [str]
('/mtgjson5/providers/gatherer.py', 'parse_cards', 'soup') []
('/mtgjson5/providers/gatherer.py', 'parse_cards', 'columns') []
('/mtgjson5/providers/gatherer.py', 'parse_cards', 'c') []
('/mtgjson5/providers/gatherer.py', 'parse_cards', 'parse_cards_ret') [list]
('/mtgjson5/providers/gatherer.py', 'strip_parentheses_from_text', 'text') [None,,, str]
('/mtgjson5/providers/gatherer.py', 'strip_parentheses_from_text', 'strip_parentheses_from_text_ret') []
('/mtgjson5/providers/gatherer.py', '_build_http_header', 'self') [GathererProvider]
('/mtgjson5/providers/gatherer.py', '_build_http_header', '_build_http_header_ret') [dict]
('/mtgjson5/providers/gatherer.py', '_parse_column', 'self') [GathererProvider]
('/mtgjson5/providers/gatherer.py', '_parse_column', 'gatherer_column') []
('/mtgjson5/providers/gatherer.py', '_parse_column', 'strip_parentheses') [bool]
('/mtgjson5/providers/gatherer.py', '_parse_column', 'row') []
('/mtgjson5/providers/gatherer.py', '_parse_column', 'label_to_values') [dict]
('/mtgjson5/providers/gatherer.py', '_parse_column', 'card_name') []
('/mtgjson5/providers/gatherer.py', '_parse_column', 'card_types') []
('/mtgjson5/providers/gatherer.py', '_parse_column', 'flavor_lines') [list]
('/mtgjson5/providers/gatherer.py', '_parse_column', 'flavor_box') []
('/mtgjson5/providers/gatherer.py', '_parse_column', 'text_lines') [list]
('/mtgjson5/providers/gatherer.py', '_parse_column', 'textbox') []
('/mtgjson5/providers/gatherer.py', '_parse_column', 'original_text') [None,,, str]
('/mtgjson5/providers/gatherer.py', '_parse_column', '_parse_column_ret') [GathererCard]
('/mtgjson5/providers/gatherer.py', '_replace_symbols', 'tag') []
('/mtgjson5/providers/gatherer.py', '_replace_symbols', 'tag_copy') []
('/mtgjson5/providers/gatherer.py', '_replace_symbols', 'images') []
('/mtgjson5/providers/gatherer.py', '_replace_symbols', 'image') []
('/mtgjson5/providers/gatherer.py', '_replace_symbols', 'alt') []
('/mtgjson5/providers/gatherer.py', '_replace_symbols', 'symbol') []
('/mtgjson5/providers/gatherer.py', '_replace_symbols', '_replace_symbols_ret') []
('/mtgjson5/classes/mtgjson_set.py', '__init__', 'self') [MtgjsonSetObject]
('/mtgjson5/referral_builder.py', 'build_and_write_referral_map', 'mtgjson_set') [MtgjsonSetObject]
('/mtgjson5/referral_builder.py', 'build_and_write_referral_map', 'referral_map') [list]
('/mtgjson5/referral_builder.py', 'build_referral_map', 'mtgjson_set') [MtgjsonSetObject]
('/mtgjson5/referral_builder.py', 'build_referral_map', 'return_list') [list]
('/mtgjson5/referral_builder.py', 'build_referral_map', 'string_regex') [re.compile('scryfall', re.IGNORECASE)]
('/mtgjson5/referral_builder.py', 'build_referral_map', 'mtgjson_card_object') []
('/mtgjson5/referral_builder.py', 'build_referral_map', 'service') []
('/mtgjson5/referral_builder.py', 'build_referral_map', 'url') []
('/mtgjson5/referral_builder.py', 'build_referral_map', 'build_referral_map_ret') [list]
('/mtgjson5/referral_builder.py', 'write_referral_map', 'single_set_referral_map') [list]
('/mtgjson5/referral_builder.py', 'write_referral_map', 'entry') [tuple]
('/mtgjson5/referral_builder.py', 'fixup_referral_map', 'lines') [list]
('/mtgjson5/compiled_classes/mtgjson_keywords.py', '__init__', 'self') [MtgjsonKeywordsObject]
('/mtgjson5/compiled_classes/mtgjson_keywords.py', 'to_json', 'self') [MtgjsonKeywordsObject]
('/mtgjson5/compiled_classes/mtgjson_keywords.py', 'to_json', 'key') []
('/mtgjson5/compiled_classes/mtgjson_keywords.py', 'to_json', 'value') []
('/mtgjson5/compiled_classes/mtgjson_keywords.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/providers/scryfall.py', 'get_catalog_entry', 'self') [ScryfallProvider]
('/mtgjson5/providers/scryfall.py', 'get_catalog_entry', 'catalog_key') [str]
('/mtgjson5/providers/scryfall.py', 'get_catalog_entry', 'catalog_data') []
('/mtgjson5/providers/scryfall.py', 'get_catalog_entry', 'get_catalog_entry_ret') [list]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_sku_data', 'group_id_and_name') [set,,, tuple]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_sku_data', 'magic_set_product_data') [list]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_sku_data', 'api_offset') [int]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_sku_data', 'api_response') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_sku_data', 'response') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_sku_data', 'get_tcgplayer_sku_data_ret') [list]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_sku_map', 'tcgplayer_set_sku_data') [list]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_sku_map', 'tcgplayer_sku_map') [dict]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_sku_map', 'product_data') [dict]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_sku_map', 'map_entry') [dict]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_sku_map', 'sku') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_sku_map', 'product_id') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_sku_map', 'get_tcgplayer_sku_map_ret') [dict]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_buylist_prices_map', 'group_id_and_name') [tuple]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_buylist_prices_map', 'tcg_to_mtgjson_map') [dict]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_buylist_prices_map', 'api_response') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_buylist_prices_map', 'get_tcgplayer_buylist_prices_map_ret') [dict]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_buylist_prices_map', 'response') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_buylist_prices_map', 'prices_map') [dict]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_buylist_prices_map', 'tcgplayer_sku_data') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_buylist_prices_map', 'sku_map') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_buylist_prices_map', 'buylist_data') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_buylist_prices_map', 'product_id') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_buylist_prices_map', 'key') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_buylist_prices_map', 'sku') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_buylist_prices_map', 'product_sku') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_prices_map', 'group_id_and_name') [tuple]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_prices_map', 'tcg_to_mtgjson_map') [dict]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_prices_map', 'api_response') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_prices_map', 'get_tcgplayer_prices_map_ret') [dict]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_prices_map', 'response') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_prices_map', 'prices_map') [dict]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_prices_map', 'tcgplayer_object') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_prices_map', 'key') []
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_prices_map', 'is_non_foil') [bool]
('/mtgjson5/providers/tcgplayer.py', 'get_tcgplayer_prices_map', 'card_price') []
('/mtgjson5/providers/tcgplayer.py', 'convert_sku_data_enum', 'sku') [dict]
('/mtgjson5/providers/tcgplayer.py', 'convert_sku_data_enum', 'convert_sku_data_enum_ret') [dict]
('/mtgjson5/classes/mtgjson_translations.py', '__init__', 'active_dict') [None,,, bool,,, dict,,, list]
('/mtgjson5/classes/mtgjson_translations.py', '__init__', 'self') [MtgjsonTranslationsObject]
('/mtgjson5/classes/mtgjson_translations.py', 'parse_key', 'key') [str]
('/mtgjson5/classes/mtgjson_translations.py', 'parse_key', 'components') []
('/mtgjson5/classes/mtgjson_translations.py', 'parse_key', 'parse_key_ret') [str]
('/mtgjson5/classes/mtgjson_translations.py', 'to_json', 'self') [MtgjsonTranslationsObject]
('/mtgjson5/classes/mtgjson_translations.py', 'to_json', 'key') []
('/mtgjson5/classes/mtgjson_translations.py', 'to_json', 'value') []
('/mtgjson5/classes/mtgjson_translations.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/compress_generator.py', 'compress_mtgjson_contents', 'directory') [/testpath]
('/mtgjson5/compress_generator.py', 'compress_mtgjson_contents', 'file') []
('/mtgjson5/compress_generator.py', 'compress_mtgjson_contents', 'single_set_files') [list]
('/mtgjson5/compress_generator.py', 'compress_mtgjson_contents', 'set_file') []
('/mtgjson5/compress_generator.py', 'compress_mtgjson_contents', 'deck_files') [list]
('/mtgjson5/compress_generator.py', 'compress_mtgjson_contents', 'deck_file') []
('/mtgjson5/compress_generator.py', 'compress_mtgjson_contents', 'sql_files') [list]
('/mtgjson5/compress_generator.py', 'compress_mtgjson_contents', 'sql_file') []
('/mtgjson5/compress_generator.py', 'compress_mtgjson_contents', 'csv_files') [list]
('/mtgjson5/compress_generator.py', 'compress_mtgjson_contents', 'csv_file') []
('/mtgjson5/compress_generator.py', 'compress_mtgjson_contents', 'compiled_files') [list]
('/mtgjson5/compress_generator.py', 'compress_mtgjson_contents', 'compiled_file') []
('/mtgjson5/compress_generator.py', '_compress_mtgjson_file', 'file') []
('/mtgjson5/compress_generator.py', '_compress_mtgjson_file', 'compression_commands') [list]
('/mtgjson5/compress_generator.py', '_compress_mtgjson_directory', 'files') [list]
('/mtgjson5/compress_generator.py', '_compress_mtgjson_directory', 'directory') [/testpath]
('/mtgjson5/compress_generator.py', '_compress_mtgjson_directory', 'output_file') [str]
('/mtgjson5/compress_generator.py', '_compress_mtgjson_directory', 'temp_dir') [/testpath/msg]
('/mtgjson5/compress_generator.py', '_compress_mtgjson_directory', 'file') []
('/mtgjson5/compress_generator.py', '_compress_mtgjson_directory', 'compression_commands') [list]
('/mtgjson5/compress_generator.py', '_compressor', 'compression_commands') [list]
('/mtgjson5/compress_generator.py', '_compressor', 'command') [list]
('/mtgjson5/compress_generator.py', '_compressor', 'processes') [list]
('/mtgjson5/compress_generator.py', '_compressor', 'process') []
('/mtgjson5/compiled_classes/mtgjson_set_list.py', '__init__', 'self') [MtgjsonSetListObject]
('/mtgjson5/compiled_classes/mtgjson_set_list.py', 'get_all_set_list', 'files_to_ignore') [list]
('/mtgjson5/compiled_classes/mtgjson_set_list.py', 'get_all_set_list', 'all_sets_data') [list]
('/mtgjson5/compiled_classes/mtgjson_set_list.py', 'get_all_set_list', 'set_file') []
('/mtgjson5/compiled_classes/mtgjson_set_list.py', 'get_all_set_list', 'set_data') []
('/mtgjson5/compiled_classes/mtgjson_set_list.py', 'get_all_set_list', 'key') [str]
('/mtgjson5/compiled_classes/mtgjson_set_list.py', 'get_all_set_list', 'get_all_set_list_ret') [list]
('/mtgjson5/compiled_classes/mtgjson_set_list.py', 'to_json', 'self') [MtgjsonSetListObject]
('/mtgjson5/compiled_classes/mtgjson_set_list.py', 'to_json', 'to_json_ret') [list]
('/mtgjson5/providers/scryfall.py', 'download_cards', 'self') [ScryfallProvider]
('/mtgjson5/providers/scryfall.py', 'download_cards', 'set_code') [str]
('/mtgjson5/providers/scryfall.py', 'download_cards', 'set_api_json') []
('/mtgjson5/providers/scryfall.py', 'download_cards', 'download_cards_ret') [list]
('/mtgjson5/providers/scryfall.py', 'download_cards', 'scryfall_cards') [list]
('/mtgjson5/providers/scryfall.py', 'download_cards', 'setup_index') []
('/mtgjson5/providers/scryfall.py', 'download_cards', 'cards_api_url') []
('/mtgjson5/providers/scryfall.py', 'download_cards', 'page_downloaded') [int]
('/mtgjson5/providers/scryfall.py', 'download_cards', 'cards_api_json') []
('/mtgjson5/providers/scryfall.py', 'download_cards', 'card_obj') []
('/mtgjson5/classes/mtgjson_set.py', 'build_keys_to_skip', 'self') [MtgjsonSetObject]
('/mtgjson5/classes/mtgjson_set.py', 'build_keys_to_skip', 'excluded_keys') [set]
('/mtgjson5/classes/mtgjson_set.py', 'build_keys_to_skip', 'key') []
('/mtgjson5/classes/mtgjson_set.py', 'build_keys_to_skip', 'value') []
('/mtgjson5/classes/mtgjson_set.py', 'build_keys_to_skip', 'build_keys_to_skip_ret') [set]
('/mtgjson5/classes/mtgjson_set.py', 'to_json', 'self') [MtgjsonSetObject]
('/mtgjson5/classes/mtgjson_set.py', 'to_json', 'skip_keys') []
('/mtgjson5/classes/mtgjson_set.py', 'to_json', 'key') []
('/mtgjson5/classes/mtgjson_set.py', 'to_json', 'value') []
('/mtgjson5/classes/mtgjson_set.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/classes/mtgjson_rulings.py', '__init__', 'self') [MtgjsonRulingObject]
('/mtgjson5/classes/mtgjson_rulings.py', '__init__', 'date') []
('/mtgjson5/classes/mtgjson_rulings.py', '__init__', 'text') []
('/mtgjson5/classes/mtgjson_rulings.py', 'to_json', 'self') [MtgjsonRulingObject]
('/mtgjson5/classes/mtgjson_rulings.py', 'to_json', 'key') []
('/mtgjson5/classes/mtgjson_rulings.py', 'to_json', 'value') []
('/mtgjson5/classes/mtgjson_rulings.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/classes/mtgjson_identifiers.py', '__init__', 'self') [MtgjsonIdentifiersObject]
('/mtgjson5/classes/mtgjson_identifiers.py', 'to_json', 'self') [MtgjsonIdentifiersObject]
('/mtgjson5/classes/mtgjson_identifiers.py', 'to_json', 'key') []
('/mtgjson5/classes/mtgjson_identifiers.py', 'to_json', 'value') []
('/mtgjson5/classes/mtgjson_identifiers.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/compiled_classes/mtgjson_all_identifiers.py', '__init__', 'self') [MtgjsonAllIdentifiersObject]
('/mtgjson5/compiled_classes/mtgjson_all_identifiers.py', '__init__', 'all_printings') [dict]
('/mtgjson5/compiled_classes/mtgjson_all_identifiers.py', '__init__', 'card') [set]
('/mtgjson5/compiled_classes/mtgjson_all_identifiers.py', 'to_json', 'self') [MtgjsonAllIdentifiersObject]
('/mtgjson5/compiled_classes/mtgjson_all_identifiers.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/classes/mtgjson_leadership_skills.py', '__init__', 'self') [MtgjsonLeadershipSkillsObject]
('/mtgjson5/classes/mtgjson_leadership_skills.py', '__init__', 'brawl') [None,,, bool,,, str]
('/mtgjson5/classes/mtgjson_leadership_skills.py', '__init__', 'commander') [None,,, bool,,, str]
('/mtgjson5/classes/mtgjson_leadership_skills.py', '__init__', 'oathbreaker') [bool]
('/mtgjson5/classes/mtgjson_leadership_skills.py', 'to_json', 'self') [MtgjsonLeadershipSkillsObject]
('/mtgjson5/classes/mtgjson_leadership_skills.py', 'to_json', 'key') []
('/mtgjson5/classes/mtgjson_leadership_skills.py', 'to_json', 'value') []
('/mtgjson5/classes/mtgjson_leadership_skills.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/utils.py', 'init_logger', 'start_time') [str]
('/mtgjson5/utils.py', 'url_keygen', 'with_leading') [bool]
('/mtgjson5/utils.py', 'url_keygen', 'unique_seed') [bool,,, dict,,, int,,, list,,, str]
('/mtgjson5/utils.py', 'url_keygen', 'return_value') [bool,,, str]
('/mtgjson5/utils.py', 'url_keygen', 'url_keygen_ret') [bool,,, str]
('/mtgjson5/utils.py', 'parse_magic_rules_subset', 'end_header') [str]
('/mtgjson5/utils.py', 'parse_magic_rules_subset', 'start_header') [str]
('/mtgjson5/utils.py', 'parse_magic_rules_subset', 'magic_rules') [str]
('/mtgjson5/utils.py', 'parse_magic_rules_subset', 'valid_line_segments') [str]
('/mtgjson5/utils.py', 'parse_magic_rules_subset', 'parse_magic_rules_subset_ret') [str]
('/mtgjson5/utils.py', 'sort_internal_lists', 'data') [dict]
('/mtgjson5/utils.py', 'sort_internal_lists', 'key') []
('/mtgjson5/utils.py', 'sort_internal_lists', 'value') []
('/mtgjson5/utils.py', 'sort_internal_lists', 'sort_internal_lists_ret') [dict]
('/mtgjson5/utils.py', 'fix_windows_set_name', 'set_name') [str]
('/mtgjson5/utils.py', 'fix_windows_set_name', 'fix_windows_set_name_ret') [str]
('/mtgjson5/utils.py', 'get_file_hash', 'block_size') [int]
('/mtgjson5/utils.py', 'get_file_hash', 'file_to_hash') [/testpath]
('/mtgjson5/utils.py', 'get_file_hash', 'get_file_hash_ret') [str]
('/mtgjson5/utils.py', 'get_file_hash', 'hash_operation') [<sha256 _hashlib.HASH object @ 0x10c6f7a90>,,, <sha256 _hashlib.HASH object @ 0x125a16ef0>]
('/mtgjson5/utils.py', 'get_file_hash', 'data') []
('/mtgjson5/utils.py', 'get_str_or_none', 'value') []
('/mtgjson5/utils.py', 'get_str_or_none', 'get_str_or_none_ret') [None]
('/mtgjson5/utils.py', 'send_push_notification', 'message') [str]
('/mtgjson5/utils.py', 'send_push_notification', 'send_push_notification_ret') [bool]
('/mtgjson5/utils.py', 'send_push_notification', 'pushover_app_token') []
('/mtgjson5/utils.py', 'send_push_notification', 'pushover_app_users') [list]
('/mtgjson5/utils.py', 'send_push_notification', 'all_succeeded') [bool]
('/mtgjson5/utils.py', 'send_push_notification', 'user') []
('/mtgjson5/utils.py', 'send_push_notification', 'response') []
('/mtgjson5/classes/mtgjson_card.py', '__init__', 'is_token') [bool]
('/mtgjson5/classes/mtgjson_card.py', '__init__', 'self') [MtgjsonCardObject]
('/mtgjson5/classes/mtgjson_card.py', 'set_illustration_ids', 'self') [MtgjsonCardObject]
('/mtgjson5/classes/mtgjson_card.py', 'set_illustration_ids', 'illustration_ids') [list,,, str]
('/mtgjson5/classes/mtgjson_card.py', 'get_illustration_ids', 'self') [MtgjsonCardObject]
('/mtgjson5/classes/mtgjson_card.py', 'get_illustration_ids', 'get_illustration_ids_ret') [list]
('/mtgjson5/classes/mtgjson_card.py', 'get_names', 'self') [MtgjsonCardObject]
('/mtgjson5/classes/mtgjson_card.py', 'get_names', 'get_names_ret') [None,,, list]
('/mtgjson5/classes/mtgjson_card.py', 'set_names', 'self') [MtgjsonCardObject]
('/mtgjson5/classes/mtgjson_card.py', 'set_names', 'names') [list]
('/mtgjson5/classes/mtgjson_card.py', 'append_names', 'self') [MtgjsonCardObject]
('/mtgjson5/classes/mtgjson_card.py', 'append_names', 'name') []
('/mtgjson5/classes/mtgjson_card.py', 'set_watermark', 'self') [MtgjsonCardObject]
('/mtgjson5/classes/mtgjson_card.py', 'set_watermark', 'watermark') [None,,, str]
('/mtgjson5/classes/mtgjson_card.py', 'set_watermark', 'card') []
('/mtgjson5/classes/mtgjson_card.py', 'get_atomic_keys', 'self') [MtgjsonCardObject]
('/mtgjson5/classes/mtgjson_card.py', 'get_atomic_keys', 'get_atomic_keys_ret') [list]
('/mtgjson5/classes/mtgjson_card.py', 'build_keys_to_skip', 'self') [MtgjsonCardObject]
('/mtgjson5/classes/mtgjson_card.py', 'build_keys_to_skip', 'excluded_keys') [set]
('/mtgjson5/classes/mtgjson_card.py', 'build_keys_to_skip', 'key') []
('/mtgjson5/classes/mtgjson_card.py', 'build_keys_to_skip', 'value') []
('/mtgjson5/classes/mtgjson_card.py', 'build_keys_to_skip', 'build_keys_to_skip_ret') [set]
('/mtgjson5/classes/mtgjson_card.py', 'to_json', 'self') [MtgjsonCardObject]
('/mtgjson5/classes/mtgjson_card.py', 'to_json', 'skip_keys') []
('/mtgjson5/classes/mtgjson_card.py', 'to_json', 'key') []
('/mtgjson5/classes/mtgjson_card.py', 'to_json', 'value') []
('/mtgjson5/classes/mtgjson_card.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/providers/cardmarket.py', 'get_set_id', 'self') [CardMarketProvider]
('/mtgjson5/providers/cardmarket.py', 'get_set_id', 'set_name') [str]
('/mtgjson5/providers/cardmarket.py', 'get_set_id', 'get_set_id_ret') [None,,, int]
('/mtgjson5/providers/cardmarket.py', 'get_extras_set_id', 'self') [CardMarketProvider]
('/mtgjson5/providers/cardmarket.py', 'get_extras_set_id', 'set_name') [str]
('/mtgjson5/providers/cardmarket.py', 'get_extras_set_id', 'get_extras_set_id_ret') [None]
('/mtgjson5/providers/cardmarket.py', 'get_extras_set_id', 'extras_set_name') [str]
('/mtgjson5/providers/cardmarket.py', 'get_set_name', 'self') [CardMarketProvider]
('/mtgjson5/providers/cardmarket.py', 'get_set_name', 'set_name') [str]
('/mtgjson5/providers/cardmarket.py', 'get_set_name', 'get_set_name_ret') [None,,, str]
('/mtgjson5/providers/cardmarket.py', 'download', 'params') [None,,, set]
('/mtgjson5/providers/cardmarket.py', 'download', 'self') [CardMarketProvider]
('/mtgjson5/providers/cardmarket.py', 'download', 'url') [str]
('/mtgjson5/providers/cardmarket.py', 'download', 'download_ret') [None]
('/mtgjson5/providers/cardmarket.py', 'get_mkm_cards', 'self') [CardMarketProvider]
('/mtgjson5/providers/cardmarket.py', 'get_mkm_cards', 'mcm_id') [None,,, int]
('/mtgjson5/providers/cardmarket.py', 'get_mkm_cards', 'get_mkm_cards_ret') [dict]
('/mtgjson5/providers/cardmarket.py', 'get_mkm_cards', 'mkm_resp') [None]
('/mtgjson5/providers/cardmarket.py', 'get_mkm_cards', '_') []
('/mtgjson5/providers/cardmarket.py', 'get_mkm_cards', 'set_in_progress') [dict]
('/mtgjson5/providers/cardmarket.py', 'get_mkm_cards', 'set_content') []
('/mtgjson5/providers/cardmarket.py', 'get_mkm_cards', 'name') []
('/mtgjson5/providers/cardmarket.py', 'get_mkm_cards', 'name_no_special_chars') []
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', '__init__', 'self') [MtgjsonAllPrintingsObject]
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', '__init__', 'files_to_build') [list]
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', 'to_json', 'self') [MtgjsonAllPrintingsObject]
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', 'get_files_to_build', 'files_to_ignore') [list]
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', 'get_files_to_build', 'file_path') []
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', 'get_files_to_build', 'get_files_to_build_ret') [list]
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', 'iterate_all_sets', 'self') [MtgjsonAllPrintingsObject]
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', 'iterate_all_sets', 'files_to_build') [list]
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', 'iterate_all_sets', 'set_file') []
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', 'iterate_all_sets', 'file_content') []
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', 'iterate_all_sets', 'set_code') []
('/mtgjson5/set_builder.py', 'parse_card_types', 'card_type') [str]
('/mtgjson5/set_builder.py', 'parse_card_types', 'sub_types') [list]
('/mtgjson5/set_builder.py', 'parse_card_types', 'super_types') [list]
('/mtgjson5/set_builder.py', 'parse_card_types', 'types') [list]
('/mtgjson5/set_builder.py', 'parse_card_types', 'supertypes_and_types') [str]
('/mtgjson5/set_builder.py', 'parse_card_types', 'split_type') []
('/mtgjson5/set_builder.py', 'parse_card_types', 'subtypes') []
('/mtgjson5/set_builder.py', 'parse_card_types', 'x') []
('/mtgjson5/set_builder.py', 'parse_card_types', 'value') []
('/mtgjson5/set_builder.py', 'parse_card_types', 'parse_card_types_ret') [tuple]
('/mtgjson5/set_builder.py', 'get_card_colors', 'mana_cost') [str]
('/mtgjson5/set_builder.py', 'get_card_colors', 'color_options') [list]
('/mtgjson5/set_builder.py', 'get_card_colors', 'ret_val') [list]
('/mtgjson5/set_builder.py', 'get_card_colors', 'color') [str]
('/mtgjson5/set_builder.py', 'get_card_colors', 'get_card_colors_ret') [list]
('/mtgjson5/set_builder.py', 'get_scryfall_set_data', 'set_code') [str]
('/mtgjson5/set_builder.py', 'get_scryfall_set_data', 'set_data') []
('/mtgjson5/set_builder.py', 'get_scryfall_set_data', 'get_scryfall_set_data_ret') [None]
('/mtgjson5/set_builder.py', 'is_number', 'string') [str]
('/mtgjson5/set_builder.py', 'is_number', 'is_number_ret') [bool]
('/mtgjson5/set_builder.py', 'get_card_cmc', 'mana_cost') [str]
('/mtgjson5/set_builder.py', 'get_card_cmc', 'total') [float,,, int]
('/mtgjson5/set_builder.py', 'get_card_cmc', 'symbol') []
('/mtgjson5/set_builder.py', 'get_card_cmc', 'element') []
('/mtgjson5/set_builder.py', 'get_card_cmc', 'get_card_cmc_ret') [float,,, int]
('/mtgjson5/set_builder.py', 'parse_printings', 'sf_prints_url') [None,,, str]
('/mtgjson5/set_builder.py', 'parse_printings', 'card_sets') [set]
('/mtgjson5/set_builder.py', 'parse_printings', 'prints_api_json') []
('/mtgjson5/set_builder.py', 'parse_printings', 'card') []
('/mtgjson5/set_builder.py', 'parse_printings', 'parse_printings_ret') [list]
('/mtgjson5/set_builder.py', 'parse_legalities', 'sf_card_legalities') [set]
('/mtgjson5/set_builder.py', 'parse_legalities', 'card_legalities') [MtgjsonLegalitiesObject]
('/mtgjson5/set_builder.py', 'parse_legalities', 'key') []
('/mtgjson5/set_builder.py', 'parse_legalities', 'value') []
('/mtgjson5/set_builder.py', 'parse_legalities', 'parse_legalities_ret') [MtgjsonLegalitiesObject]
('/mtgjson5/set_builder.py', 'parse_rulings', 'rulings_url') [str]
('/mtgjson5/set_builder.py', 'parse_rulings', 'rules_api_json') []
('/mtgjson5/set_builder.py', 'parse_rulings', 'parse_rulings_ret') [list]
('/mtgjson5/set_builder.py', 'parse_rulings', 'mtgjson_rules') [list]
('/mtgjson5/set_builder.py', 'parse_rulings', 'sf_rule') []
('/mtgjson5/set_builder.py', 'parse_rulings', 'mtgjson_rule') [MtgjsonRulingObject]
('/mtgjson5/set_builder.py', 'mark_duel_decks', 'set_code') [str]
('/mtgjson5/set_builder.py', 'mark_duel_decks', 'mtgjson_cards') [dict,,, list]
('/mtgjson5/set_builder.py', 'mark_duel_decks', 'land_pile_marked') [bool]
('/mtgjson5/set_builder.py', 'mark_duel_decks', 'side_letter_as_number') [int]
('/mtgjson5/set_builder.py', 'mark_duel_decks', 'card') [bool,,, dict,,, list]
('/mtgjson5/set_builder.py', 'parse_keyrune_code', 'url') [str]
('/mtgjson5/set_builder.py', 'parse_keyrune_code', 'file_stem') []
('/mtgjson5/set_builder.py', 'parse_keyrune_code', 'upstream_to_keyrune_map') []
('/mtgjson5/set_builder.py', 'parse_keyrune_code', 'parse_keyrune_code_ret') []
('/mtgjson5/set_builder.py', 'build_mtgjson_set', 'set_code') [str]
('/mtgjson5/set_builder.py', 'build_mtgjson_set', 'mtgjson_set') [MtgjsonSetObject]
('/mtgjson5/set_builder.py', 'build_mtgjson_set', 'set_data') []
('/mtgjson5/set_builder.py', 'build_mtgjson_set', 'build_mtgjson_set_ret') [MtgjsonSetObject,,, None]
('/mtgjson5/set_builder.py', 'build_mtgjson_set', 'base_total_sizes') [tuple]
('/mtgjson5/set_builder.py', 'build_base_mtgjson_tokens', 'set_code') [str]
('/mtgjson5/set_builder.py', 'build_base_mtgjson_tokens', 'added_tokens') [list]
('/mtgjson5/set_builder.py', 'build_base_mtgjson_tokens', 'build_base_mtgjson_tokens_ret') [dict,,, list]
('/mtgjson5/set_builder.py', 'build_base_mtgjson_cards', 'set_release_date') [str]
('/mtgjson5/set_builder.py', 'build_base_mtgjson_cards', 'is_token') [bool]
('/mtgjson5/set_builder.py', 'build_base_mtgjson_cards', 'additional_cards') [None,,, list]
('/mtgjson5/set_builder.py', 'build_base_mtgjson_cards', 'set_code') [str]
('/mtgjson5/set_builder.py', 'build_base_mtgjson_cards', 'cards') [list]
('/mtgjson5/set_builder.py', 'build_base_mtgjson_cards', 'mtgjson_cards') [dict,,, list]
('/mtgjson5/set_builder.py', 'build_base_mtgjson_cards', 'build_base_mtgjson_cards_ret') [dict,,, list]
('/mtgjson5/set_builder.py', 'add_is_starter_option', 'set_code') [str]
('/mtgjson5/set_builder.py', 'add_is_starter_option', 'search_url') [str]
('/mtgjson5/set_builder.py', 'add_is_starter_option', 'mtgjson_cards') [dict,,, list]
('/mtgjson5/set_builder.py', 'add_is_starter_option', 'starter_card_url') []
('/mtgjson5/set_builder.py', 'add_is_starter_option', 'starter_cards') []
('/mtgjson5/set_builder.py', 'add_is_starter_option', 'scryfall_object') []
('/mtgjson5/set_builder.py', 'add_is_starter_option', 'item') [MtgjsonCardObject,,, bool,,, dict,,, list]
('/mtgjson5/set_builder.py', 'add_is_starter_option', 'mtgjson_cards_with_same_id') [list]
('/mtgjson5/set_builder.py', 'add_is_starter_option', 'card') [MtgjsonCardObject,,, bool,,, dict,,, list]
('/mtgjson5/set_builder.py', 'add_leadership_skills', 'mtgjson_card') [MtgjsonCardObject]
('/mtgjson5/set_builder.py', 'add_leadership_skills', 'is_commander_legal') [None,,, bool,,, str]
('/mtgjson5/set_builder.py', 'add_leadership_skills', 'is_oathbreaker_legal') [bool]
('/mtgjson5/set_builder.py', 'add_leadership_skills', 'is_brawl_legal') [None,,, bool,,, str]
('/mtgjson5/set_builder.py', 'add_uuid', 'mtgjson_card') [MtgjsonCardObject]
('/mtgjson5/set_builder.py', 'add_uuid', 'id_source_v5') [str]
('/mtgjson5/set_builder.py', 'add_uuid', 'id_source_v4') [str]
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'set_release_date') [str]
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'is_token') [bool]
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'face_id') [int]
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'scryfall_object') [set]
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'mtgjson_cards') [list]
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'mtgjson_card') [MtgjsonCardObject]
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'face_data') [set]
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'card_face') []
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'i') []
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'card_type') []
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'card_release_date') []
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'ascii_name') []
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'face_names') [None,,, list]
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'face_illustration_ids') [list]
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'index') []
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'card_types') []
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'keyword') []
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'meld_object') [list]
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'a_part') []
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'reverse_related') [list]
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'gatherer_cards') [list]
('/mtgjson5/set_builder.py', 'build_mtgjson_card', 'build_mtgjson_card_ret') [list]
('/mtgjson5/set_builder.py', 'add_variations_and_alternative_fields', 'mtgjson_set') [MtgjsonSetObject]
('/mtgjson5/set_builder.py', 'add_variations_and_alternative_fields', 'this_card') [bool,,, dict,,, list]
('/mtgjson5/set_builder.py', 'add_variations_and_alternative_fields', 'other_card') [bool,,, dict,,, list]
('/mtgjson5/set_builder.py', 'add_variations_and_alternative_fields', 'item') [bool,,, dict,,, list]
('/mtgjson5/set_builder.py', 'add_variations_and_alternative_fields', 'variations') [list]
('/mtgjson5/set_builder.py', 'add_variations_and_alternative_fields', 'card_number') []
('/mtgjson5/set_builder.py', 'add_mcm_details', 'mtgjson_set') [MtgjsonSetObject]
('/mtgjson5/set_builder.py', 'add_mcm_details', 'mkm_cards') [dict]
('/mtgjson5/set_builder.py', 'add_mcm_details', 'extras_cards') [dict]
('/mtgjson5/set_builder.py', 'add_mcm_details', 'mtgjson_card') [bool,,, dict,,, list]
('/mtgjson5/set_builder.py', 'add_mcm_details', 'delete_key') [bool]
('/mtgjson5/set_builder.py', 'add_mcm_details', 'search_cards') [dict]
('/mtgjson5/set_builder.py', 'add_mcm_details', 'card_key') [bool,,, dict,,, list,,, str]
('/mtgjson5/set_builder.py', 'add_mcm_details', 'mkm_card') [bool,,, dict,,, list]
('/mtgjson5/set_builder.py', 'add_mcm_details', 'mkm_obj') [bool,,, dict,,, list]
('/mtgjson5/set_builder.py', 'get_base_and_total_set_sizes', 'set_code') [str]
('/mtgjson5/set_builder.py', 'get_base_and_total_set_sizes', 'base_set_size_override') []
('/mtgjson5/set_builder.py', 'get_base_and_total_set_sizes', 'base_set_size') []
('/mtgjson5/set_builder.py', 'get_base_and_total_set_sizes', 'base_set_size_download') []
('/mtgjson5/set_builder.py', 'get_base_and_total_set_sizes', 'total_set_size') [int]
('/mtgjson5/set_builder.py', 'get_base_and_total_set_sizes', 'get_base_and_total_set_sizes_ret') [tuple]
('/mtgjson5/providers/wizards.py', '__init__', 'self') [WizardsProvider]
('/mtgjson5/providers/wizards.py', 'get_translation_for_set', 'self') [WizardsProvider]
('/mtgjson5/providers/wizards.py', 'get_translation_for_set', 'set_code') [str]
('/mtgjson5/providers/wizards.py', 'get_translation_for_set', 'get_translation_for_set_ret') [MtgjsonTranslationsObject]
('/mtgjson5/set_builder.py', 'relocate_miscellaneous_tokens', 'mtgjson_set') [MtgjsonSetObject]
('/mtgjson5/set_builder.py', 'relocate_miscellaneous_tokens', 'token_types') [set]
('/mtgjson5/set_builder.py', 'relocate_miscellaneous_tokens', 'tokens_found') [bool,,, dict,,, list]
('/mtgjson5/set_builder.py', 'relocate_miscellaneous_tokens', 'scryfall_id') [bool,,, dict,,, list]
('/mtgjson5/set_builder.py', 'add_card_kingdom_details', 'mtgjson_set') [MtgjsonSetObject]
('/mtgjson5/set_builder.py', 'add_card_kingdom_details', 'translation_table') [dict]
('/mtgjson5/set_builder.py', 'add_card_kingdom_details', 'mtgjson_card') [bool,,, dict,,, list]
('/mtgjson5/set_builder.py', 'add_card_kingdom_details', 'entry') [bool,,, dict,,, list]
('/mtgjson5/providers/github_boosters.py', '__init__', 'self') [GitHubBoostersProvider]
('/mtgjson5/providers/github_boosters.py', 'get_set_booster_data', 'self') [GitHubBoostersProvider]
('/mtgjson5/providers/github_boosters.py', 'get_set_booster_data', 'set_code') [str]
('/mtgjson5/providers/github_boosters.py', 'get_set_booster_data', 'get_set_booster_data_ret') []
('/mtgjson5/classes/mtgjson_meta.py', '__init__', 'version') [str]
('/mtgjson5/classes/mtgjson_meta.py', '__init__', 'date') [str]
('/mtgjson5/classes/mtgjson_meta.py', '__init__', 'self') [MtgjsonMetaObject]
('/mtgjson5/providers/whats_in_standard.py', '__init__', 'self') [WhatsInStandardProvider]
('/mtgjson5/set_builder.py', 'parse_foreign', 'sf_prints_url') []
('/mtgjson5/set_builder.py', 'parse_foreign', 'card_name') [None,,, str]
('/mtgjson5/set_builder.py', 'parse_foreign', 'card_number') []
('/mtgjson5/set_builder.py', 'parse_foreign', 'set_name') []
('/mtgjson5/set_builder.py', 'parse_foreign', 'card_foreign_entries') [list]
('/mtgjson5/set_builder.py', 'parse_foreign', 'prints_api_json') []
('/mtgjson5/set_builder.py', 'parse_foreign', 'parse_foreign_ret') [list]
('/mtgjson5/set_builder.py', 'parse_foreign', 'foreign_card') []
('/mtgjson5/set_builder.py', 'parse_foreign', 'card_foreign_entry') [MtgjsonForeignDataObject]
('/mtgjson5/set_builder.py', 'parse_foreign', 'face') [int]
('/mtgjson5/set_builder.py', 'parse_foreign', 'face_data') []
('/mtgjson5/providers/wizards.py', '_build_http_header', 'self') [WizardsProvider]
('/mtgjson5/providers/wizards.py', '_build_http_header', '_build_http_header_ret') [dict]
('/mtgjson5/providers/wizards.py', 'load_translation_table', 'self') [WizardsProvider]
('/mtgjson5/providers/wizards.py', 'build_translation_table', 'self') [WizardsProvider]
('/mtgjson5/providers/wizards.py', 'build_translation_table', 'translation_table') [dict]
('/mtgjson5/providers/wizards.py', 'build_translation_table', 'short_code') [str]
('/mtgjson5/providers/wizards.py', 'build_translation_table', 'long_name') [str]
('/mtgjson5/providers/mtgban.py', '__init__', 'self') [MTGBanProvider]
('/mtgjson5/providers/mtgban.py', 'get_mtgjson_to_card_kingdom', 'self') [MTGBanProvider]
('/mtgjson5/providers/mtgban.py', 'get_mtgjson_to_card_kingdom', 'get_mtgjson_to_card_kingdom_ret') [dict]
('/mtgjson5/providers/github_boosters.py', '_build_http_header', 'self') [GitHubBoostersProvider]
('/mtgjson5/providers/github_boosters.py', '_build_http_header', '_build_http_header_ret') [dict]
('/mtgjson5/providers/github_boosters.py', 'download', 'params') [None,,, dict]
('/mtgjson5/providers/github_boosters.py', 'download', 'self') [GitHubBoostersProvider]
('/mtgjson5/providers/github_boosters.py', 'download', 'url') [str]
('/mtgjson5/providers/github_boosters.py', 'download', 'session') [<requests.sessions.Session object at 0x125c34490>]
('/mtgjson5/providers/github_boosters.py', 'download', 'response') []
('/mtgjson5/providers/github_boosters.py', 'download', 'download_ret') [dict]
('/mtgjson5/providers/whats_in_standard.py', '_build_http_header', 'self') [WhatsInStandardProvider]
('/mtgjson5/providers/whats_in_standard.py', '_build_http_header', '_build_http_header_ret') [dict]
('/mtgjson5/providers/whats_in_standard.py', 'standard_legal_set_codes', 'self') [WhatsInStandardProvider]
('/mtgjson5/providers/whats_in_standard.py', 'standard_legal_set_codes', 'standard_legal_set_codes_ret') [bool,,, set]
('/mtgjson5/providers/whats_in_standard.py', 'standard_legal_set_codes', 'api_response') []
('/mtgjson5/providers/whats_in_standard.py', 'standard_legal_set_codes', 'standard_set_codes') [bool]
('/mtgjson5/providers/wizards.py', 'build_single_language', 'self') [WizardsProvider]
('/mtgjson5/providers/wizards.py', 'build_single_language', 'short_lang_code') [str]
('/mtgjson5/providers/wizards.py', 'build_single_language', 'long_lang_name') [str]
('/mtgjson5/providers/wizards.py', 'build_single_language', 'translation_table') [dict]
('/mtgjson5/providers/wizards.py', 'build_single_language', 'soup') []
('/mtgjson5/providers/wizards.py', 'build_single_language', 'set_lines') []
('/mtgjson5/providers/wizards.py', 'build_single_language', 'set_line') []
('/mtgjson5/providers/wizards.py', 'build_single_language', 'icon') []
('/mtgjson5/providers/wizards.py', 'build_single_language', 'set_name') []
('/mtgjson5/providers/wizards.py', 'build_single_language', 'set_icon_url') []
('/mtgjson5/providers/wizards.py', 'build_single_language', 'build_single_language_ret') [dict]
('/mtgjson5/providers/wizards.py', 'convert_keys_to_set_names', 'self') [WizardsProvider]
('/mtgjson5/providers/wizards.py', 'convert_keys_to_set_names', 'table') [dict]
('/mtgjson5/providers/wizards.py', 'convert_keys_to_set_names', 'return_table') [dict]
('/mtgjson5/providers/wizards.py', 'convert_keys_to_set_names', 'key') [str]
('/mtgjson5/providers/wizards.py', 'convert_keys_to_set_names', 'value') [dict]
('/mtgjson5/providers/wizards.py', 'convert_keys_to_set_names', 'new_key') []
('/mtgjson5/providers/wizards.py', 'convert_keys_to_set_names', 'convert_keys_to_set_names_ret') [dict]
('/mtgjson5/providers/wizards.py', 'set_names_to_set_codes', 'table') [dict]
('/mtgjson5/providers/wizards.py', 'set_names_to_set_codes', 'set_name_fixes') []
('/mtgjson5/providers/wizards.py', 'set_names_to_set_codes', 'key') []
('/mtgjson5/providers/wizards.py', 'set_names_to_set_codes', 'value') []
('/mtgjson5/providers/wizards.py', 'set_names_to_set_codes', 'new_table') [dict,,, list]
('/mtgjson5/providers/wizards.py', 'set_names_to_set_codes', 'set_names_to_set_codes_ret') [dict]
('/mtgjson5/providers/wizards.py', 'override_set_translations', 'table') [dict]
('/mtgjson5/providers/wizards.py', 'override_set_translations', 'translation_fixes') []
('/mtgjson5/providers/wizards.py', 'override_set_translations', 'set_code') []
('/mtgjson5/providers/wizards.py', 'override_set_translations', 'override_translations') []
('/mtgjson5/providers/wizards.py', 'override_set_translations', 'override_set_translations_ret') [dict]
('/mtgjson5/providers/mtgban.py', '_build_http_header', 'self') [MTGBanProvider]
('/mtgjson5/providers/mtgban.py', '_build_http_header', 'headers') [dict]
('/mtgjson5/providers/mtgban.py', '_build_http_header', 'config') [<configparser.ConfigParser object at 0x10c388820>]
('/mtgjson5/providers/mtgban.py', '_build_http_header', '_build_http_header_ret') [dict]
('/mtgjson5/providers/mtgban.py', 'download', 'params') [None,,, dict]
('/mtgjson5/providers/mtgban.py', 'download', 'self') [MTGBanProvider]
('/mtgjson5/providers/mtgban.py', 'download', 'url') [str]
('/mtgjson5/providers/mtgban.py', 'download', 'session') [<requests.sessions.Session object at 0x10c445600>]
('/mtgjson5/providers/mtgban.py', 'download', 'response') []
('/mtgjson5/providers/mtgban.py', 'download', 'download_ret') []
('/mtgjson5/providers/whats_in_standard.py', 'download', 'params') [None,,, dict]
('/mtgjson5/providers/whats_in_standard.py', 'download', 'self') [WhatsInStandardProvider]
('/mtgjson5/providers/whats_in_standard.py', 'download', 'url') [str]
('/mtgjson5/providers/whats_in_standard.py', 'download', 'session') [<requests.sessions.Session object at 0x125a200a0>]
('/mtgjson5/providers/whats_in_standard.py', 'download', 'response') []
('/mtgjson5/providers/whats_in_standard.py', 'download', 'download_ret') []
('/mtgjson5/providers/wizards.py', 'download', 'params') [None,,, dict]
('/mtgjson5/providers/wizards.py', 'download', 'self') [WizardsProvider]
('/mtgjson5/providers/wizards.py', 'download', 'url') [str]
('/mtgjson5/providers/wizards.py', 'download', 'session') [<requests.sessions.Session object at 0x10c46d9c0>,,, <requests.sessions.Session object at 0x10c7747f0>,,, <requests.sessions.Session object at 0x12541ea40>]
('/mtgjson5/providers/wizards.py', 'download', 'response') []
('/mtgjson5/providers/wizards.py', 'download', 'download_ret') []
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', '__init__', 'cards_to_parse') [None]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', '__init__', 'self') [MtgjsonAtomicCardsObject]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'iterate_all_cards', 'cards_to_load') [None,,, list]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'iterate_all_cards', 'self') [MtgjsonAtomicCardsObject]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'iterate_all_cards', 'files_to_ignore') [list]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'iterate_all_cards', 'valid_keys') [list]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'iterate_all_cards', 'set_file') []
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'iterate_all_cards', 'file_content') []
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'to_json', 'self') [MtgjsonAtomicCardsObject]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'update_global_card_list', 'self') [MtgjsonAtomicCardsObject]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'update_global_card_list', 'card_list') [None,,, list]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'update_global_card_list', 'valid_keys') [list]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'update_global_card_list', 'card') [set]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'update_global_card_list', 'key') [str]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'update_global_card_list', 'atomic_card') [dict]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'update_global_card_list', 'foreign_data') []
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'update_global_card_list', 'values') []
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'update_global_card_list', 'card_name') []
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'update_global_card_list', 'should_add_card') [bool]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'update_global_card_list', 'card_entry') [MtgjsonPricesObject,,, dict,,, list,,, set]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'update_global_card_list', 'hold_entry') [MtgjsonPricesObject,,, dict,,, list,,, set]
('/mtgjson5/compiled_classes/mtgjson_atomic_cards.py', 'update_global_card_list', 'entry') [MtgjsonPricesObject,,, dict,,, list,,, set]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', '__init__', 'self') [MtgjsonEnumValuesObject]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', '__init__', 'set_and_cards') [dict]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', '__init__', 'decks') [dict]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', '__init__', 'keywords') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/.json,,, /Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/msg]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', '__init__', 'content') []
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_deck_enums', 'self') [MtgjsonEnumValuesObject]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_deck_enums', 'decks_directory') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/decks,,, /testpath]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_deck_enums', 'type_map') [dict]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_deck_enums', 'object_name') [str]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_deck_enums', 'object_values') [list]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_deck_enums', 'object_field_name') [str]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_deck_enums', 'deck') []
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_deck_enums', 'content') []
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_deck_enums', 'key') []
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_deck_enums', 'construct_deck_enums_ret') [dict]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'self') [MtgjsonEnumValuesObject]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'all_printing_content') [dict,,, set]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'type_map') [dict]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'object_name') [str]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'object_values') [list]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'object_field_name') [str]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'set_contents') []
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'set_contents_key') []
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'match_keys') [set]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'card') []
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'card_key') []
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'card_value') []
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'value') []
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'single_value') []
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'attribute') []
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'construct_set_and_card_enums', 'construct_set_and_card_enums_ret') [dict]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'to_json', 'self') [MtgjsonEnumValuesObject]
('/mtgjson5/compiled_classes/mtgjson_enum_values.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/compiled_classes/mtgjson_tcgplayer_skus.py', '__init__', 'self') [MtgjsonTcgplayerSkusObject]
('/mtgjson5/compiled_classes/mtgjson_tcgplayer_skus.py', '__init__', 'all_printings_path') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/msg]
('/mtgjson5/compiled_classes/mtgjson_tcgplayer_skus.py', '__init__', 'tcg_to_mtgjson_map') [dict]
('/mtgjson5/compiled_classes/mtgjson_tcgplayer_skus.py', '__init__', 'group') [set]
('/mtgjson5/compiled_classes/mtgjson_tcgplayer_skus.py', '__init__', 'tcgplayer_sku_data') [list]
('/mtgjson5/compiled_classes/mtgjson_tcgplayer_skus.py', '__init__', 'product') [set]
('/mtgjson5/compiled_classes/mtgjson_tcgplayer_skus.py', '__init__', 'product_id') []
('/mtgjson5/compiled_classes/mtgjson_tcgplayer_skus.py', '__init__', 'key') []
('/mtgjson5/compiled_classes/mtgjson_tcgplayer_skus.py', '__init__', 'sku') []
('/mtgjson5/compiled_classes/mtgjson_tcgplayer_skus.py', 'to_json', 'self') [MtgjsonTcgplayerSkusObject]
('/mtgjson5/compiled_classes/mtgjson_tcgplayer_skus.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/compiled_classes/mtgjson_deck_list.py', '__init__', 'self') [MtgjsonDeckListObject]
('/mtgjson5/compiled_classes/mtgjson_deck_list.py', '__init__', 'deck_headers') [list]
('/mtgjson5/compiled_classes/mtgjson_deck_list.py', 'to_json', 'self') [MtgjsonDeckListObject]
('/mtgjson5/compiled_classes/mtgjson_deck_list.py', 'to_json', 'to_json_ret') []
('/mtgjson5/classes/mtgjson_prices.py', 'to_json', 'self') [MtgjsonPricesObject]
('/mtgjson5/classes/mtgjson_prices.py', 'to_json', 'buy_sell_option') [dict]
('/mtgjson5/classes/mtgjson_prices.py', 'to_json', 'return_object') [dict]
('/mtgjson5/classes/mtgjson_prices.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/classes/mtgjson_deck_header.py', '__init__', 'self') [MtgjsonDeckHeaderObject]
('/mtgjson5/classes/mtgjson_deck_header.py', '__init__', 'output_deck') []
('/mtgjson5/classes/mtgjson_deck_header.py', 'to_json', 'self') [MtgjsonDeckHeaderObject]
('/mtgjson5/classes/mtgjson_deck_header.py', 'to_json', 'key') []
('/mtgjson5/classes/mtgjson_deck_header.py', 'to_json', 'value') []
('/mtgjson5/classes/mtgjson_deck_header.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/classes/mtgjson_game_formats.py', 'to_json', 'self') [MtgjsonGameFormatsObject]
('/mtgjson5/classes/mtgjson_game_formats.py', 'to_json', 'key') []
('/mtgjson5/classes/mtgjson_game_formats.py', 'to_json', 'value') []
('/mtgjson5/classes/mtgjson_game_formats.py', 'to_json', 'to_json_ret') [list]
('/mtgjson5/output_generator.py', 'write_set_file', 'mtgjson_set_object') [MtgjsonSetObject]
('/mtgjson5/output_generator.py', 'write_set_file', 'pretty_print') [bool]
('/mtgjson5/output_generator.py', 'write_set_file', 'file_name') [str]
('/mtgjson5/output_generator.py', 'generate_compiled_prices_output', 'price_data') [dict]
('/mtgjson5/output_generator.py', 'generate_compiled_prices_output', 'pretty_print') [bool]
('/mtgjson5/output_generator.py', 'build_format_specific_files', 'all_printings') [MtgjsonAllPrintingsObject]
('/mtgjson5/output_generator.py', 'build_format_specific_files', 'pretty_print') [bool]
('/mtgjson5/output_generator.py', 'build_format_specific_files', 'format_map') [dict]
('/mtgjson5/output_generator.py', 'build_atomic_specific_files', 'pretty_print') [bool]
('/mtgjson5/output_generator.py', 'build_atomic_specific_files', 'card_format_map') []
('/mtgjson5/output_generator.py', 'build_price_specific_files', 'pretty_print') [bool]
('/mtgjson5/output_generator.py', 'build_price_specific_files', 'price_data_cache') [dict]
('/mtgjson5/output_generator.py', 'build_all_printings_files', 'pretty_print') [bool]
('/mtgjson5/output_generator.py', 'build_all_printings_files', 'all_printings') [MtgjsonAllPrintingsObject]
('/mtgjson5/output_generator.py', 'generate_compiled_output_files', 'pretty_print') [bool]
('/mtgjson5/output_generator.py', 'generate_compiled_output_files', 'deck_names') [list]
('/mtgjson5/output_generator.py', 'generate_compiled_output_files', 'mtgjson_deck_obj') []
('/mtgjson5/output_generator.py', 'generate_compiled_output_files', 'mtgjson_deck_header_obj') [MtgjsonDeckHeaderObject]
('/mtgjson5/output_generator.py', 'create_compiled_output', 'compiled_name') [str]
('/mtgjson5/output_generator.py', 'create_compiled_output', 'compiled_object') [MtgjsonAllIdentifiersObject,,, MtgjsonAtomicCardsObject,,, MtgjsonCardTypesObject,,, MtgjsonCompiledListObject,,, MtgjsonDeckListObject,,, MtgjsonEnumValuesObject,,, MtgjsonKeywordsObject,,, MtgjsonMetaObject,,, MtgjsonSetListObject,,, MtgjsonTcgplayerSkusObject,,, dict]
('/mtgjson5/output_generator.py', 'create_compiled_output', 'pretty_print') [bool]
('/mtgjson5/output_generator.py', 'write_compiled_output_to_file', 'file_name') [str]
('/mtgjson5/output_generator.py', 'write_compiled_output_to_file', 'file_contents') [MtgjsonAllIdentifiersObject,,, MtgjsonAtomicCardsObject,,, MtgjsonCardTypesObject,,, MtgjsonCompiledListObject,,, MtgjsonDeckListObject,,, MtgjsonEnumValuesObject,,, MtgjsonKeywordsObject,,, MtgjsonMetaObject,,, MtgjsonSetListObject,,, MtgjsonTcgplayerSkusObject,,, dict]
('/mtgjson5/output_generator.py', 'write_compiled_output_to_file', 'pretty_print') [bool]
('/mtgjson5/output_generator.py', 'write_compiled_output_to_file', 'write_file') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/.json,,, /Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/testname]
('/mtgjson5/output_generator.py', 'construct_format_map', 'normal_sets_only') [bool]
('/mtgjson5/output_generator.py', 'construct_format_map', 'all_printings_path') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/.json,,, /Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis/pt_engine/mtgjson_build_'5.X.X'/msg,,, /testpath]
('/mtgjson5/output_generator.py', 'construct_format_map', 'magic_format') []
('/mtgjson5/output_generator.py', 'construct_format_map', 'format_map') [dict]
('/mtgjson5/output_generator.py', 'construct_format_map', 'construct_format_map_ret') [dict]
('/mtgjson5/output_generator.py', 'construct_format_map', 'content') []
('/mtgjson5/output_generator.py', 'construct_format_map', 'set_code_key') []
('/mtgjson5/output_generator.py', 'construct_format_map', 'set_code_content') []
('/mtgjson5/output_generator.py', 'construct_format_map', 'formats_set_legal_in') [set]
('/mtgjson5/output_generator.py', 'construct_format_map', 'card') []
('/mtgjson5/output_generator.py', 'construct_format_map', 'card_legalities') []
('/mtgjson5/output_generator.py', 'generate_output_file_hashes', 'directory') [/testpath]
('/mtgjson5/output_generator.py', 'generate_output_file_hashes', 'file') []
('/mtgjson5/output_generator.py', 'generate_output_file_hashes', 'generated_hash') [str]
('/mtgjson5/output_generator.py', 'generate_output_file_hashes', 'hash_file_name') [str]
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', 'get_set_contents', 'sets') [None,,, list]
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', 'get_set_contents', 'self') [MtgjsonAllPrintingsObject]
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', 'get_set_contents', 'key') [set]
('/mtgjson5/compiled_classes/mtgjson_all_printings.py', 'get_set_contents', 'get_set_contents_ret') [dict]
('/mtgjson5/compiled_classes/mtgjson_compiled_list.py', '__init__', 'self') [MtgjsonCompiledListObject]
('/mtgjson5/compiled_classes/mtgjson_card_types.py', '__init__', 'self') [MtgjsonCardTypesObject]
('/mtgjson5/compiled_classes/mtgjson_card_types.py', '__init__', 'comp_rules') [str]
('/mtgjson5/compiled_classes/mtgjson_card_types.py', '__init__', 'inner_sets') []
('/mtgjson5/compiled_classes/mtgjson_card_types.py', '__init__', 'super_regex') [re.compile('.*The supertypes are (.*)\\.')]
('/mtgjson5/compiled_classes/mtgjson_card_types.py', '__init__', 'super_types') [list]
('/mtgjson5/compiled_classes/mtgjson_card_types.py', '__init__', 'key') []
('/mtgjson5/compiled_classes/mtgjson_card_types.py', '__init__', 'value') []
('/mtgjson5/providers/wizards.py', 'get_magic_rules', 'self') [WizardsProvider]
('/mtgjson5/providers/wizards.py', 'get_magic_rules', 'get_magic_rules_ret') [str]
('/mtgjson5/providers/wizards.py', 'get_magic_rules', 'response') []
('/mtgjson5/compiled_classes/mtgjson_card_types.py', 'regex_str_to_list', 'regex_match') [None,,, typing.Match]
('/mtgjson5/compiled_classes/mtgjson_card_types.py', 'regex_str_to_list', 'regex_str_to_list_ret') [list]
('/mtgjson5/compiled_classes/mtgjson_card_types.py', 'regex_str_to_list', 'card_types') []
('/mtgjson5/compiled_classes/mtgjson_card_types.py', 'regex_str_to_list', 'card_types_split') []
('/mtgjson5/compiled_classes/mtgjson_card_types.py', 'regex_str_to_list', 'index') []
('/mtgjson5/compiled_classes/mtgjson_card_types.py', 'regex_str_to_list', 'value') []
('/mtgjson5/classes/mtgjson_legalities.py', 'to_json', 'self') [MtgjsonLegalitiesObject]
('/mtgjson5/classes/mtgjson_legalities.py', 'to_json', 'key') []
('/mtgjson5/classes/mtgjson_legalities.py', 'to_json', 'value') []
('/mtgjson5/classes/mtgjson_legalities.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/classes/mtgjson_deck.py', 'to_json', 'self') [MtgjsonDeckObject]
('/mtgjson5/classes/mtgjson_deck.py', 'to_json', 'skip_keys') [set]
('/mtgjson5/classes/mtgjson_deck.py', 'to_json', 'key') []
('/mtgjson5/classes/mtgjson_deck.py', 'to_json', 'value') []
('/mtgjson5/classes/mtgjson_deck.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/compiled_classes/mtgjson_card_types.py', 'to_json', 'self') [MtgjsonCardTypesObject]
('/mtgjson5/compiled_classes/mtgjson_card_types.py', 'to_json', 'key') []
('/mtgjson5/compiled_classes/mtgjson_card_types.py', 'to_json', 'value') []
('/mtgjson5/compiled_classes/mtgjson_card_types.py', 'to_json', 'to_json_ret') [dict]
('/mtgjson5/compiled_classes/mtgjson_compiled_list.py', 'to_json', 'self') [MtgjsonCompiledListObject]
('/mtgjson5/compiled_classes/mtgjson_compiled_list.py', 'to_json', 'to_json_ret') []