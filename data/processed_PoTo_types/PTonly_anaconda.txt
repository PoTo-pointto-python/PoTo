('/anaconda_lib/aenum.py', 'module_initializer', '__all__') [list]
('/anaconda_lib/aenum.py', 'module_initializer', 'version') [tuple]
('/anaconda_lib/aenum.py', 'module_initializer', 'pyver') [float]
('/anaconda_lib/aenum.py', 'module_initializer', 'OrderedDict') [None]
('/anaconda_lib/aenum.py', 'module_initializer', 'basestring') [str]
('/anaconda_lib/aenum.py', 'module_initializer', 'unicode') [str]
('/anaconda_lib/aenum.py', 'module_initializer', 'Enum') [EnumMeta,,, None]
('/anaconda_lib/aenum.py', 'module_initializer', 'temp_enum_dict') [dict]
('/anaconda_lib/callback.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (DEBUG)>,,, <Logger pt_engine.utils.base (WARNING)>]
('/anaconda_lib/callback.py', 'CallbackStatus_class_initializer', 'unfired') [str]
('/anaconda_lib/callback.py', 'CallbackStatus_class_initializer', 'succeeded') [str]
('/anaconda_lib/callback.py', 'CallbackStatus_class_initializer', 'failed') [str]
('/anaconda_lib/callback.py', 'CallbackStatus_class_initializer', 'timed_out') [str]
('/anaconda_lib/tooltips.py', 'Tooltip_class_initializer', 'themes') [dict]
('/anaconda_lib/tooltips.py', 'Tooltip_class_initializer', 'tooltips') [dict]
('/anaconda_lib/tooltips.py', 'Tooltip_class_initializer', 'loaded') [bool]
('/anaconda_lib/tooltips.py', 'Tooltip_class_initializer', 'basesize') [int]
('/anaconda_lib/_typing.py', 'module_initializer', '__all__') [list]
('/anaconda_lib/_typing.py', 'module_initializer', 'T') [TypeVar,,, ~T]
('/anaconda_lib/_typing.py', 'module_initializer', 'KT') [TypeVar,,, ~KT]
('/anaconda_lib/_typing.py', 'module_initializer', 'VT') [TypeVar,,, ~VT]
('/anaconda_lib/_typing.py', 'module_initializer', 'T_co') [+T_co,,, TypeVar]
('/anaconda_lib/_typing.py', 'module_initializer', 'V_co') [+V_co,,, TypeVar]
('/anaconda_lib/_typing.py', 'module_initializer', 'VT_co') [+VT_co,,, TypeVar]
('/anaconda_lib/_typing.py', 'module_initializer', 'T_contra') [-T_contra,,, TypeVar]
('/anaconda_lib/_typing.py', 'module_initializer', 'AnyStr') [TypeVar,,, ~AnyStr]
('/anaconda_lib/_typing.py', 'module_initializer', 'Hashable') []
('/anaconda_lib/_typing.py', 'module_initializer', 'Sized') []
('/anaconda_lib/_typing.py', 'module_initializer', '_G_base') [generator]
('/anaconda_lib/_typing.py', 'module_initializer', 'Pattern') [_TypeAlias]
('/anaconda_lib/_typing.py', 'module_initializer', 'Match') [_TypeAlias]
('/anaconda_lib/_typing.py', 'TypingMeta_class_initializer', '_is_protocol') [bool]
('/anaconda_lib/_typing.py', 'Final_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', '_TypeAlias_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'Any_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'Union_class_initializer', '__union_params__') [None]
('/anaconda_lib/_typing.py', 'Union_class_initializer', '__union_set_params__') [None]
('/anaconda_lib/_typing.py', 'Optional_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'Tuple_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'Callable_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'GenericMeta_class_initializer', '__extra__') [None]
('/anaconda_lib/_typing.py', 'Generic_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', '_Protocol_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', '_Protocol_class_initializer', '_is_protocol') [bool]
('/anaconda_lib/_typing.py', 'Iterable_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'Iterator_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'SupportsInt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'SupportsFloat_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'SupportsComplex_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'SupportsBytes_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'SupportsAbs_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'SupportsRound_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'Reversible_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'Container_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'FrozenSet_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'Generator_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'IO_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'BinaryIO_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'TextIO_class_initializer', '__slots__') [tuple]
('/anaconda_lib/_typing.py', 'io_class_initializer', '__all__') [list]
('/anaconda_lib/_typing.py', 'io_class_initializer', 'IO') [IO]
('/anaconda_lib/_typing.py', 'io_class_initializer', 'TextIO') [TextIO]
('/anaconda_lib/_typing.py', 'io_class_initializer', 'BinaryIO') [BinaryIO]
('/anaconda_lib/_typing.py', 're_class_initializer', '__all__') [list]
('/anaconda_lib/_typing.py', 're_class_initializer', 'Pattern') [_TypeAlias]
('/anaconda_lib/_typing.py', 're_class_initializer', 'Match') [_TypeAlias]
('/anaconda_lib/unix_socket.py', 'UnixSocketPath_class_initializer', 'socketpath') [dict]
('/anaconda_lib/vagrant.py', 'module_initializer', 'PIPE') [int]
('/anaconda_lib/jsonclient.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (DEBUG)>,,, <Logger pt_engine.utils.base (WARNING)>]
('/anaconda_lib/ioloop.py', 'module_initializer', 'NOT_TERMINATE') [bool]
('/anaconda_lib/ioloop.py', 'IOHandlers_class_initializer', '_shared_state') [dict]
('/anaconda_lib/persistent_list.py', 'PersistentList_class_initializer', '_file_path') [str]
('/anaconda_lib/six.py', 'module_initializer', '__author__') [str]
('/anaconda_lib/six.py', 'module_initializer', '__version__') [str]
('/anaconda_lib/six.py', 'module_initializer', 'PY2') [bool]
('/anaconda_lib/six.py', 'module_initializer', 'PY3') [bool]
('/anaconda_lib/six.py', 'module_initializer', 'PY34') [bool]
('/anaconda_lib/six.py', 'module_initializer', 'string_types') [tuple]
('/anaconda_lib/six.py', 'module_initializer', 'integer_types') [tuple]
('/anaconda_lib/six.py', 'module_initializer', 'class_types') [tuple]
('/anaconda_lib/six.py', 'module_initializer', 'text_type') [str]
('/anaconda_lib/six.py', 'module_initializer', 'binary_type') [bytes,,, str]
('/anaconda_lib/six.py', 'module_initializer', 'MAXSIZE') [int]
('/anaconda_lib/six.py', 'module_initializer', '_importer') [_SixMetaPathImporter]
('/anaconda_lib/six.py', 'module_initializer', '_moved_attributes') [list]
('/anaconda_lib/six.py', 'module_initializer', 'attr') [MovedAttribute,,, MovedModule]
('/anaconda_lib/six.py', 'module_initializer', 'moves') [_MovedItems]
('/anaconda_lib/six.py', 'module_initializer', '_urllib_parse_moved_attributes') [list]
('/anaconda_lib/six.py', 'module_initializer', '_urllib_error_moved_attributes') [list]
('/anaconda_lib/six.py', 'module_initializer', '_urllib_request_moved_attributes') [list]
('/anaconda_lib/six.py', 'module_initializer', '_urllib_response_moved_attributes') [list]
('/anaconda_lib/six.py', 'module_initializer', '_urllib_robotparser_moved_attributes') [list]
('/anaconda_lib/six.py', 'module_initializer', '_meth_func') [str]
('/anaconda_lib/six.py', 'module_initializer', '_meth_self') [str]
('/anaconda_lib/six.py', 'module_initializer', '_func_closure') [str]
('/anaconda_lib/six.py', 'module_initializer', '_func_code') [str]
('/anaconda_lib/six.py', 'module_initializer', '_func_defaults') [str]
('/anaconda_lib/six.py', 'module_initializer', '_func_globals') [str]
('/anaconda_lib/six.py', 'module_initializer', 'advance_iterator') [<built-in function next>]
('/anaconda_lib/six.py', 'module_initializer', 'next') [<built-in function next>]
('/anaconda_lib/six.py', 'module_initializer', 'callable') [meta_func]
('/anaconda_lib/six.py', 'module_initializer', 'create_bound_method') [method]
('/anaconda_lib/six.py', 'module_initializer', 'Iterator') [object]
('/anaconda_lib/six.py', 'module_initializer', 'get_method_function') [operator.attrgetter("'im_func'"),,, operator.attrgetter('__func__'),,, operator.attrgetter('im_func')]
('/anaconda_lib/six.py', 'module_initializer', 'get_method_self') [operator.attrgetter("'im_self'"),,, operator.attrgetter('__self__'),,, operator.attrgetter('im_self')]
('/anaconda_lib/six.py', 'module_initializer', 'get_function_closure') [operator.attrgetter("'msg'"),,, operator.attrgetter('msg')]
('/anaconda_lib/six.py', 'module_initializer', 'get_function_code') [operator.attrgetter("'func_code'"),,, operator.attrgetter('__code__'),,, operator.attrgetter('func_code')]
('/anaconda_lib/six.py', 'module_initializer', 'get_function_defaults') [operator.attrgetter("'msg'"),,, operator.attrgetter('msg')]
('/anaconda_lib/six.py', 'module_initializer', 'get_function_globals') [operator.attrgetter("'msg'"),,, operator.attrgetter('msg')]
('/anaconda_lib/six.py', 'module_initializer', 'viewkeys') [operator.methodcaller('keys'),,, operator.methodcaller('viewkeys')]
('/anaconda_lib/six.py', 'module_initializer', 'viewvalues') [operator.methodcaller('values'),,, operator.methodcaller('viewvalues')]
('/anaconda_lib/six.py', 'module_initializer', 'viewitems') [operator.methodcaller('items'),,, operator.methodcaller('viewitems')]
('/anaconda_lib/six.py', 'module_initializer', 'unichr') [<built-in function chr>]
('/anaconda_lib/six.py', 'module_initializer', 'int2byte') [<built-in function chr>,,, <built-in method pack of _struct.Struct object at 0x109a4c400>,,, <built-in method pack of _struct.Struct object at 0x10a398d10>,,, <built-in method pack of _struct.Struct object at 0x10a3be7a0>,,, <built-in method pack of _struct.Struct object at 0x10c0e0630>,,, <built-in method pack of _struct.Struct object at 0x10c0e16c0>,,, <built-in method pack of _struct.Struct object at 0x10c397fb0>,,, <built-in method pack of _struct.Struct object at 0x10c474590>,,, <built-in method pack of _struct.Struct object at 0x10c6b8450>,,, <built-in method pack of _struct.Struct object at 0x10c73ca40>,,, <built-in method pack of _struct.Struct object at 0x10ca0fd80>,,, <built-in method pack of _struct.Struct object at 0x10d7a27f0>,,, <built-in method pack of _struct.Struct object at 0x10db220c0>,,, <built-in method pack of _struct.Struct object at 0x10e783ec0>,,, <built-in method pack of _struct.Struct object at 0x10e8019e0>,,, <built-in method pack of _struct.Struct object at 0x10e802b60>,,, <built-in method pack of _struct.Struct object at 0x10e82bf10>,,, <built-in method pack of _struct.Struct object at 0x10f3e8720>,,, <built-in method pack of _struct.Struct object at 0x110ab1350>,,, <built-in method pack of _struct.Struct object at 0x11120f8d0>]
('/anaconda_lib/six.py', 'module_initializer', 'byte2int') [operator.itemgetter(0)]
('/anaconda_lib/six.py', 'module_initializer', 'indexbytes') [<built-in function getitem>]
('/anaconda_lib/six.py', 'module_initializer', 'iterbytes') [<built-in function iter>]
('/anaconda_lib/six.py', 'module_initializer', 'StringIO') [_io.StringIO]
('/anaconda_lib/six.py', 'module_initializer', 'BytesIO') [_io.BytesIO]
('/anaconda_lib/six.py', 'module_initializer', '_assertCountEqual') [str]
('/anaconda_lib/six.py', 'module_initializer', '_assertRaisesRegex') [str]
('/anaconda_lib/six.py', 'module_initializer', '_assertRegex') [str]
('/anaconda_lib/six.py', 'module_initializer', 'exec_') []
('/anaconda_lib/six.py', 'module_initializer', 'print_') []
('/anaconda_lib/six.py', 'module_initializer', '_print') []
('/anaconda_lib/six.py', 'module_initializer', 'wraps') [<function wraps at 0x104672830>,,, <function wraps at 0x109a3e830>,,, <function wraps at 0x10fac2830>]
('/anaconda_lib/six.py', 'module_initializer', '__path__') [list]
('/anaconda_lib/six.py', 'module_initializer', '__package__') [str]
('/anaconda_lib/six.py', 'module_initializer', 'i') [int]
('/anaconda_lib/six.py', 'module_initializer', 'importer') [<_distutils_hack.DistutilsMetaFinder object at 0x1045ca470>,,, <_distutils_hack.DistutilsMetaFinder object at 0x10fa1a4a0>,,, _frozen_importlib.BuiltinImporter]
('/anaconda_lib/six.py', '_LazyModule_class_initializer', '_moved_attributes') [list]
('/anaconda_lib/six.py', '_MovedItems_class_initializer', '__path__') [list]
('/anaconda_lib/six.py', 'Module_six_moves_urllib_class_initializer', '__path__') [list]
('/anaconda_lib/six.py', 'Module_six_moves_urllib_class_initializer', 'parse') []
('/anaconda_lib/six.py', 'Module_six_moves_urllib_class_initializer', 'error') []
('/anaconda_lib/six.py', 'Module_six_moves_urllib_class_initializer', 'request') []
('/anaconda_lib/six.py', 'Module_six_moves_urllib_class_initializer', 'response') []
('/anaconda_lib/six.py', 'Module_six_moves_urllib_class_initializer', 'robotparser') []
('/anaconda_lib/phantoms.py', 'Phantom_class_initializer', 'themes') [dict]
('/anaconda_lib/phantoms.py', 'Phantom_class_initializer', 'templates') [dict]
('/anaconda_lib/phantoms.py', 'Phantom_class_initializer', 'loaded') [bool]
('/anaconda_lib/phantoms.py', 'Phantom_class_initializer', 'phantomsets') [dict]
('/anaconda_lib/linting/mccabe.py', 'module_initializer', '__version__') [str]
('/anaconda_lib/linting/mccabe.py', 'McCabeChecker_class_initializer', 'name') [str]
('/anaconda_lib/linting/mccabe.py', 'McCabeChecker_class_initializer', 'version') [str]
('/anaconda_lib/linting/mccabe.py', 'McCabeChecker_class_initializer', '_code') [str]
('/anaconda_lib/linting/mccabe.py', 'McCabeChecker_class_initializer', '_error_tmpl') [str]
('/anaconda_lib/linting/mccabe.py', 'McCabeChecker_class_initializer', 'max_complexity') [int]
('/anaconda_lib/linting/anaconda_mccabe.py', 'AnacondaMcCabe_class_initializer', 'checker') [McCabeChecker]
('/anaconda_lib/linting/anaconda_mypy.py', 'MyPy_class_initializer', 'VERSION') [None,,, tuple]
('/anaconda_lib/linting/anaconda_pylint.py', 'module_initializer', 'PIPE') [int]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', '__version__') [str]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'DEFAULT_EXCLUDE') [str]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'DEFAULT_IGNORE') [str]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'USER_CONFIG') [None,,, str]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'PROJECT_CONFIG') [tuple]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'TESTSUITE_PATH') [str]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'MAX_LINE_LENGTH') [int]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'BLANK_LINES_CONFIG') [dict]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'MAX_DOC_LENGTH') [int]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'REPORT_FORMAT') [dict]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'PyCF_ONLY_AST') [int]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'SINGLETONS') [frozenset({'False', 'None', 'True'}),,, frozenset({'False', 'True', 'None'}),,, frozenset({'None', 'True', 'False'})]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'KEYWORDS') [frozenset({'and', 'async', 'elif', 'for', 'with', 'continue', 'try', 'as', 'yield', 'pass', 'while', 'finally', 'class', 'from', 'await', 'import', 'if', 'global', 'except', 'nonlocal', 'return', 'else', 'is', 'lambda', 'raise', 'break', 'print', 'or', 'not', 'def', 'del', 'in', 'assert'}),,, frozenset({'assert', 'global', 'import', 'finally', 'await', 'continue', 'try', 'del', 'except', 'as', 'for', 'print', 'elif', 'in', 'is', 'while', 'yield', 'pass', 'return', 'class', 'def', 'raise', 'with', 'and', 'async', 'break', 'else', 'from', 'nonlocal', 'or', 'if', 'not', 'lambda'}),,, frozenset({'assert', 'or', 'async', 'else', 'with', 'is', 'print', 'class', 'def', 'yield', 'await', 'finally', 'del', 'elif', 'nonlocal', 'if', 'in', 'import', 'while', 'pass', 'return', 'try', 'raise', 'for', 'lambda', 'global', 'and', 'continue', 'except', 'as', 'not', 'from', 'break'})]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'UNARY_OPERATORS') [frozenset({'**', '+', '-', '>>', '*'}),,, frozenset({'**', '-', '>>', '*', '+'}),,, frozenset({'>>', '*', '-', '**', '+'})]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'ARITHMETIC_OP') [frozenset({'**', '-', '*', '//', '/', '+', '@'}),,, frozenset({'//', '**', '@', '+', '/', '-', '*'}),,, frozenset({'@', '-', '*', '//', '/', '**', '+'})]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'WS_OPTIONAL_OPERATORS') [frozenset({'&', '//', '/', '<<', '|', '**', '-', '^', '*', '>>', '+', '%', '@'}),,, frozenset({'//', '<<', '-', '>>', '*', '**', '@', '|', '%', '+', '/', '^', '&'}),,, frozenset({'|', '>>', '%', '^', '//', '<<', '-', '&', '**', '+', '*', '/', '@'})]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'FUNCTION_RETURN_ANNOTATION_OP') [list]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'ASSIGNMENT_EXPRESSION_OP') [list]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'WS_NEEDED_OPERATORS') [frozenset({'&=', 'and', '**=', '//=', '>>=', '<', '=', '|=', '>=', '^=', ':=', '-=', '<>', '==', '->', '>', '%=', 'is', '*=', '<=', '<<=', '+=', '!=', 'or', '/=', 'in'}),,, frozenset({'-=', '<=', '*=', '&=', '->', '=', '<<=', '>>=', '<', '!=', '%=', 'in', 'is', '/=', '==', '^=', 'and', '<>', ':=', '>=', '//=', '**=', '+=', 'or', '|=', '>'}),,, frozenset({'|=', '<<=', '==', 'or', ':=', '*=', 'is', '->', '=', '+=', '//=', '>>=', 'in', '>=', '/=', 'and', '-=', '%=', '^=', '<=', '**=', '<>', '>', '&=', '<', '!='})]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'WHITESPACE') [frozenset({' ', '\t'}),,, frozenset({'\t', ' '})]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'NEWLINE') [frozenset({4, 62})]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'SKIP_TOKENS') [frozenset({4, 5, 62, 6})]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'SKIP_COMMENTS') [frozenset({4, 5, 6, 60, 61, 62})]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'BENCHMARK_KEYS') [list]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'INDENT_REGEX') [re.compile('([ \\t]*)')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'RAISE_COMMA_REGEX') [re.compile('raise\\s+\\w+\\s*,')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'RERAISE_COMMA_REGEX') [re.compile('raise\\s+\\w+\\s*,.*,\\s*\\w+\\s*$')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'ERRORCODE_REGEX') [re.compile('\\b[A-Z]\\d{3}\\b')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'DOCSTRING_REGEX') [re.compile('u?r?["\\\']')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'EXTRANEOUS_WHITESPACE_REGEX') [re.compile('[\\[({],,, [\\]}),;]| :(?!=)')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'WHITESPACE_AFTER_COMMA_REGEX') [re.compile('[,;:]\\s*(?:  |\\t)')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'COMPARE_SINGLETON_REGEX') [re.compile('(\\bNone|\\bFalse|\\bTrue)?\\s*([=!]=)\\s*(?(1)|(None|False|True))\\b')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'COMPARE_NEGATIVE_REGEX') [re.compile('\\b(not)\\s+[^][)(}{ ]+\\s+(in|is)\\s')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'COMPARE_TYPE_REGEX') [re.compile('(?:[=!]=|is(?:\\s+not)?)\\s+type(?:s.\\w+Type|\\s*\\(\\s*([^)]*[^ )])\\s*\\))')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'KEYWORD_REGEX') [re.compile('(\\s*)\\b(?:and|async|elif|for|with|continue|try|as|yield|pass|while|finally|class|from|await|import|if|global|except|nonlocal|return|else|is|lambda|raise|break|print|or|not|def|del|in|assert)\\b(\\s),,, re.compile('(\\s*)\\b(?:assert|global|import|finally|await|continue|try|del|except|as|for|print|elif|in|is|while|yield|pass|return|class|def|raise|with|and|async|break|else|from|nonlocal|or|if|not|lambda)\\b(\\s),,, re.compile('(\\s*)\\b(?:assert|or|async|else|with|is|print|class|def|yield|await|finally|del|elif|nonlocal|if|in|import|while|pass|return|try|raise|for|lambda|global|and|continue|except|as|not|from|break)\\b(\\s),,, re.compile('msg')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'OPERATOR_REGEX') [re.compile('(?:[^,\\s])(\\s*)(?:[-+*/|!<=>%&^]+)(\\s*)')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'LAMBDA_REGEX') [re.compile('\\blambda\\b')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'HUNK_REGEX') [re.compile('^@@ -\\d+(?:,\\d+)? \\+(\\d+)(?:,(\\d+))? @@.*$')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'STARTSWITH_DEF_REGEX') [re.compile('^(async\\s+def|def)\\b')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'STARTSWITH_TOP_LEVEL_REGEX') [re.compile('^(async\\s+def\\s+|def\\s+|class\\s+|@)')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'STARTSWITH_INDENT_STATEMENT_REGEX') [re.compile('^\\s*(def|async\\s+def|for|async\\s+for|if|elif|else|try|except|finally|with|async\\s+with|class|while)\\b')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'DUNDER_REGEX') [re.compile('^__([^\\s]+)__ = ')]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', '_checks') [dict]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', '_SYMBOLIC_OPS') [frozenset({'(', '{', '~', '%', ',', ']', '}', '.', ':', '=', ';', '[', '...', '@', ')'}),,, frozenset({',', ']', '}', '~', '.', ')', '=', '{', ';', '[', '(', '%', '@', ':', '...'}),,, frozenset({'.', ',', ']', '@', '%', '=', '}', ')', '[', '{', '~', '...', ';', ':', '('})]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'isidentifier') [<built-in method match of re.Pattern object at 0x10a2e0f20>,,, <built-in method match of re.Pattern object at 0x10edea020>,,, <built-in method match of re.Pattern object at 0x115718f20>,,, <method 'isidentifier' of 'str' objects>]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'stdin_get_value') [<built-in method read of _io.TextIOWrapper object at 0x1044dcd40>,,, <built-in method read of _io.TextIOWrapper object at 0x10f928d40>]
('/anaconda_lib/linting/pycodestyle.py', 'module_initializer', 'noqa') [<functools._lru_cache_wrapper object at 0x109a22350>,,, <functools._lru_cache_wrapper object at 0x109a22610>,,, <functools._lru_cache_wrapper object at 0x10a475d20>,,, <functools._lru_cache_wrapper object at 0x10c1514e0>,,, <functools._lru_cache_wrapper object at 0x10c152980>,,, <functools._lru_cache_wrapper object at 0x10c1f80f0>,,, <functools._lru_cache_wrapper object at 0x10c1f87d0>,,, <functools._lru_cache_wrapper object at 0x10c4f6c40>,,, <functools._lru_cache_wrapper object at 0x10e78c460>,,, <functools._lru_cache_wrapper object at 0x10e8c8a90>,,, <functools._lru_cache_wrapper object at 0x10e91eda0>,,, <functools._lru_cache_wrapper object at 0x10e9247d0>,,, <functools._lru_cache_wrapper object at 0x10e9264b0>,,, <functools._lru_cache_wrapper object at 0x10ee05170>,,, <functools._lru_cache_wrapper object at 0x10f00fb60>,,, <functools._lru_cache_wrapper object at 0x10f07f690>,,, <functools._lru_cache_wrapper object at 0x10f34eb90>,,, <functools._lru_cache_wrapper object at 0x10fc54a90>,,, <functools._lru_cache_wrapper object at 0x11589db10>]
('/anaconda_lib/linting/pycodestyle.py', 'BaseReport_class_initializer', 'print_filename') [bool]
('/anaconda_lib/linting/pycodestyle.py', 'FileReport_class_initializer', 'print_filename') [bool]
('/anaconda_lib/linting/pydocstyle/config.py', 'module_initializer', 'CheckConfiguration') [pt_engine.utils.base.CheckConfiguration]
('/anaconda_lib/linting/pydocstyle/config.py', 'module_initializer', 'RunConfiguration') [pt_engine.utils.base.RunConfiguration]
('/anaconda_lib/linting/pydocstyle/config.py', 'ConfigurationParser_class_initializer', 'CONFIG_FILE_OPTIONS') [tuple]
('/anaconda_lib/linting/pydocstyle/config.py', 'ConfigurationParser_class_initializer', 'BASE_ERROR_SELECTION_OPTIONS') [tuple]
('/anaconda_lib/linting/pydocstyle/config.py', 'ConfigurationParser_class_initializer', 'DEFAULT_MATCH_RE') [str]
('/anaconda_lib/linting/pydocstyle/config.py', 'ConfigurationParser_class_initializer', 'DEFAULT_MATCH_DIR_RE') [str]
('/anaconda_lib/linting/pydocstyle/config.py', 'ConfigurationParser_class_initializer', 'DEFAULT_IGNORE_DECORATORS_RE') [str]
('/anaconda_lib/linting/pydocstyle/config.py', 'ConfigurationParser_class_initializer', 'DEFAULT_CONVENTION') []
('/anaconda_lib/linting/pydocstyle/config.py', 'ConfigurationParser_class_initializer', 'PROJECT_CONFIG_FILES') [tuple]
('/anaconda_lib/linting/pydocstyle/config.py', 'ConfigurationParser_class_initializer', 'POSSIBLE_SECTION_NAMES') [tuple]
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', '__all__') [tuple]
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'ErrorParams') [pt_engine.utils.base.ErrorParams]
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D1xx') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D100') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D101') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D102') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D103') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D104') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D105') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D106') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D2xx') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D200') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D201') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D202') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D203') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D204') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D205') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D206') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D207') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D208') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D209') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D210') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D211') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D212') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D213') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D214') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D215') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D3xx') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D300') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D301') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D302') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D4xx') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D400') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D401') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D401b') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D402') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D403') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D404') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D405') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D406') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D407') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D408') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D409') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D410') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D411') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D412') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D413') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'D414') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'all_errors') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'module_initializer', 'conventions') [AttrDict]
('/anaconda_lib/linting/pydocstyle/violations.py', 'Error_class_initializer', 'explain') [bool]
('/anaconda_lib/linting/pydocstyle/violations.py', 'Error_class_initializer', 'source') [bool]
('/anaconda_lib/linting/pydocstyle/violations.py', 'Error_class_initializer', 'filename') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'Error_class_initializer', 'line') []
('/anaconda_lib/linting/pydocstyle/violations.py', 'ErrorRegistry_class_initializer', 'groups') [list]
('/anaconda_lib/linting/pydocstyle/parser.py', 'module_initializer', 'nothing') [<object object at 0x10a44ce00>,,, <object object at 0x10ada8100>,,, <object object at 0x10b664110>,,, <object object at 0x10b8301b0>,,, <object object at 0x10bcb0290>,,, <object object at 0x10c0cd040>,,, <object object at 0x10c364e80>,,, <object object at 0x10cc83bd0>,,, <object object at 0x10cd80080>,,, <object object at 0x10cdd0190>,,, <object object at 0x10d930280>,,, <object object at 0x10ddc3f60>,,, <object object at 0x10e2e0090>,,, <object object at 0x10e76fed0>,,, <object object at 0x10e7e3d90>,,, <object object at 0x10ec7f3f0>,,, <object object at 0x10ff84060>,,, <object object at 0x110a80190>,,, <object object at 0x1158b0b70>]
('/anaconda_lib/linting/pydocstyle/parser.py', 'module_initializer', '__all__') [tuple]
('/anaconda_lib/linting/pydocstyle/parser.py', 'module_initializer', 'VARIADIC_MAGIC_METHODS') [tuple]
('/anaconda_lib/linting/pydocstyle/parser.py', 'Definition_class_initializer', '_fields') [tuple]
('/anaconda_lib/linting/pydocstyle/parser.py', 'Definition_class_initializer', '_human') [<property object at 0x10a3d8fe0>,,, <property object at 0x10ade67a0>,,, <property object at 0x10bd332e0>,,, <property object at 0x10c084810>,,, <property object at 0x10c0b00e0>,,, <property object at 0x10c356480>,,, <property object at 0x10c467e70>,,, <property object at 0x10c6e7fb0>,,, <property object at 0x10c9ddc60>,,, <property object at 0x10d8804a0>,,, <property object at 0x10d883f10>,,, <property object at 0x10db21940>,,, <property object at 0x10de14360>,,, <property object at 0x10e801e90>,,, <property object at 0x10ef38860>,,, <property object at 0x10fdd5c60>,,, <property object at 0x1102cf740>,,, <property object at 0x110b8be70>,,, <property object at 0x1158ceb10>]
('/anaconda_lib/linting/pydocstyle/parser.py', 'Definition_class_initializer', 'kind') []
('/anaconda_lib/linting/pydocstyle/parser.py', 'Definition_class_initializer', 'module') []
('/anaconda_lib/linting/pydocstyle/parser.py', 'Definition_class_initializer', 'all') []
('/anaconda_lib/linting/pydocstyle/parser.py', 'Definition_class_initializer', '_slice') []
('/anaconda_lib/linting/pydocstyle/parser.py', 'Definition_class_initializer', 'is_class') [bool]
('/anaconda_lib/linting/pydocstyle/parser.py', 'Module_class_initializer', '_fields') [tuple]
('/anaconda_lib/linting/pydocstyle/parser.py', 'Module_class_initializer', '_nest') [<staticmethod(<function <lambda> at 0x109bf3130>)>,,, <staticmethod(<function <lambda> at 0x10a4d16c0>)>,,, <staticmethod(<function <lambda> at 0x10f01fa30>)>,,, <staticmethod(<function <lambda> at 0x10fd327a0>)>,,, <staticmethod(<function <lambda> at 0x10fd32830>)>,,, <staticmethod(<function <lambda> at 0x10fd32950>)>,,, <staticmethod(<function <lambda> at 0x10fd32b90>)>,,, <staticmethod(<function <lambda> at 0x10fd32c20>)>,,, <staticmethod(<function <lambda> at 0x10fd32d40>)>,,, <staticmethod(<function <lambda> at 0x10fd32e60>)>,,, <staticmethod(<function <lambda> at 0x10fd332e0>)>,,, <staticmethod(<function <lambda> at 0x10fd33370>)>,,, <staticmethod(<function <lambda> at 0x10fd339a0>)>,,, <staticmethod(<function <lambda> at 0x10fd33b50>)>,,, <staticmethod(<function <lambda> at 0x10fd33be0>)>,,, <staticmethod(<function <lambda> at 0x10fd33d00>)>,,, <staticmethod(<function <lambda> at 0x10fd33f40>)>,,, <staticmethod(<function <lambda> at 0x1158a3b50>)>]
('/anaconda_lib/linting/pydocstyle/parser.py', 'Module_class_initializer', 'module') [<property object at 0x10a49ad90>,,, <property object at 0x10ade6840>,,, <property object at 0x10bc60360>,,, <property object at 0x10c0588b0>,,, <property object at 0x10c0b08b0>,,, <property object at 0x10c3572e0>,,, <property object at 0x10c4d1da0>,,, <property object at 0x10dd9c590>,,, <property object at 0x10ddacd10>,,, <property object at 0x10de306d0>,,, <property object at 0x10de8ba60>,,, <property object at 0x10e2e7ba0>,,, <property object at 0x10e80a250>,,, <property object at 0x10e81fdd0>,,, <property object at 0x10ea15ee0>,,, <property object at 0x10ef38fe0>,,, <property object at 0x110ace5c0>,,, <property object at 0x110b107c0>,,, <property object at 0x1158cf4c0>]
('/anaconda_lib/linting/pydocstyle/parser.py', 'Module_class_initializer', 'all') []
('/anaconda_lib/linting/pydocstyle/parser.py', 'Function_class_initializer', '_nest') [<staticmethod(<function <lambda> at 0x109bf2ef0>)>,,, <staticmethod(<function <lambda> at 0x10a4d17e0>)>,,, <staticmethod(<function <lambda> at 0x10f01fb50>)>,,, <staticmethod(<function <lambda> at 0x10fd30ee0>)>,,, <staticmethod(<function <lambda> at 0x10fd31000>)>,,, <staticmethod(<function <lambda> at 0x10fd32560>)>,,, <staticmethod(<function <lambda> at 0x10fd32680>)>,,, <staticmethod(<function <lambda> at 0x10fd32a70>)>,,, <staticmethod(<function <lambda> at 0x10fd32b90>)>,,, <staticmethod(<function <lambda> at 0x10fd33520>)>,,, <staticmethod(<function <lambda> at 0x10fd335b0>)>,,, <staticmethod(<function <lambda> at 0x10fd336d0>)>,,, <staticmethod(<function <lambda> at 0x10fd33a30>)>,,, <staticmethod(<function <lambda> at 0x10fd33b50>)>,,, <staticmethod(<function <lambda> at 0x10fd33d00>)>,,, <staticmethod(<function <lambda> at 0x10fd33eb0>)>,,, <staticmethod(<function <lambda> at 0x115905750>)>]
('/anaconda_lib/linting/pydocstyle/parser.py', 'NestedFunction_class_initializer', 'is_public') [bool]
('/anaconda_lib/linting/pydocstyle/parser.py', 'Class_class_initializer', '_nest') [<staticmethod(<function <lambda> at 0x109bf2830>)>,,, <staticmethod(<function <lambda> at 0x10a4d1870>)>,,, <staticmethod(<function <lambda> at 0x10f01fbe0>)>,,, <staticmethod(<function <lambda> at 0x10fd31090>)>,,, <staticmethod(<function <lambda> at 0x10fd32440>)>,,, <staticmethod(<function <lambda> at 0x10fd324d0>)>,,, <staticmethod(<function <lambda> at 0x10fd325f0>)>,,, <staticmethod(<function <lambda> at 0x10fd327a0>)>,,, <staticmethod(<function <lambda> at 0x10fd32cb0>)>,,, <staticmethod(<function <lambda> at 0x10fd32f80>)>,,, <staticmethod(<function <lambda> at 0x10fd331c0>)>,,, <staticmethod(<function <lambda> at 0x10fd33520>)>,,, <staticmethod(<function <lambda> at 0x10fd33910>)>,,, <staticmethod(<function <lambda> at 0x10fd339a0>)>,,, <staticmethod(<function <lambda> at 0x1159057e0>)>]
('/anaconda_lib/linting/pydocstyle/parser.py', 'Class_class_initializer', 'is_public') []
('/anaconda_lib/linting/pydocstyle/parser.py', 'Class_class_initializer', 'is_class') [bool]
('/anaconda_lib/linting/pydocstyle/parser.py', 'Decorator_class_initializer', '_fields') [list]
('/anaconda_lib/linting/pydocstyle/parser.py', 'TokenStream_class_initializer', 'LOGICAL_NEWLINES') [set]
('/anaconda_lib/linting/pydocstyle/parser.py', 'Token_class_initializer', '_fields') [list]
('/anaconda_lib/linting/pydocstyle/parser.py', 'Parser_class_initializer', 'current') []
('/anaconda_lib/linting/pydocstyle/parser.py', 'Parser_class_initializer', 'line') []
('/anaconda_lib/linting/pydocstyle/cli.py', 'module_initializer', '__all__') [tuple]
('/anaconda_lib/linting/pydocstyle/cli.py', 'ReturnCode_class_initializer', 'no_violations_found') [int]
('/anaconda_lib/linting/pydocstyle/cli.py', 'ReturnCode_class_initializer', 'violations_found') [int]
('/anaconda_lib/linting/pydocstyle/cli.py', 'ReturnCode_class_initializer', 'invalid_options') [int]
('/anaconda_lib/linting/pydocstyle/checker.py', 'module_initializer', '__all__') [tuple]
('/anaconda_lib/linting/pydocstyle/checker.py', 'module_initializer', 'tokenize_open') [<built-in function open>,,, <function open at 0x10990bf40>,,, <function open at 0x10ecf5360>,,, <function open at 0x11358b400>]
('/anaconda_lib/linting/pydocstyle/checker.py', 'module_initializer', 'parse') [Parser]
('/anaconda_lib/jedi/parser_utils.py', 'module_initializer', '_EXECUTE_NODES') [set]
('/anaconda_lib/jedi/parser_utils.py', 'module_initializer', '_FLOW_KEYWORDS') [tuple]
('/anaconda_lib/jedi/parser_utils.py', 'module_initializer', 'get_cached_parent_scope') [meta_func]
('/anaconda_lib/jedi/parser_utils.py', 'module_initializer', 'function_is_staticmethod') [meta_func]
('/anaconda_lib/jedi/parser_utils.py', 'module_initializer', 'function_is_classmethod') [meta_func]
('/anaconda_lib/jedi/parser/tree.py', 'NodeOrLeaf_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/tree.py', 'Leaf_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/tree.py', 'BaseNode_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/tree.py', 'BaseNode_class_initializer', 'type') [None]
('/anaconda_lib/jedi/parser/tree.py', 'Node_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/tree.py', 'ErrorNode_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/tree.py', 'ErrorNode_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/tree.py', 'ErrorLeaf_class_initializer', '__slots__') [str]
('/anaconda_lib/jedi/parser/tree.py', 'ErrorLeaf_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/token.py', 'module_initializer', 'COMMENT') [int]
('/anaconda_lib/jedi/parser/token.py', 'module_initializer', 'N_TOKENS') [int]
('/anaconda_lib/jedi/parser/token.py', 'module_initializer', 'NL') [int]
('/anaconda_lib/jedi/parser/token.py', 'module_initializer', 'BACKQUOTE') [int]
('/anaconda_lib/jedi/parser/token.py', 'module_initializer', 'RARROW') [int]
('/anaconda_lib/jedi/parser/token.py', 'module_initializer', 'ELLIPSIS') [int]
('/anaconda_lib/jedi/parser/token.py', 'module_initializer', 'ATEQUAL') [int]
('/anaconda_lib/jedi/parser/token.py', 'module_initializer', 'opmap_raw') [str]
('/anaconda_lib/jedi/parser/token.py', 'module_initializer', 'opmap') [dict]
('/anaconda_lib/jedi/parser/token.py', 'module_initializer', 'line') [str]
('/anaconda_lib/jedi/parser/token.py', 'module_initializer', 'op') []
('/anaconda_lib/jedi/parser/token.py', 'module_initializer', 'name') []
('/anaconda_lib/jedi/parser/cache.py', 'module_initializer', '_PICKLE_VERSION') [int]
('/anaconda_lib/jedi/parser/cache.py', 'module_initializer', '_VERSION_TAG') [str,,, tuple]
('/anaconda_lib/jedi/parser/cache.py', 'module_initializer', 'parser_cache') [dict]
('/anaconda_lib/jedi/parser/parser.py', 'BaseParser_class_initializer', 'node_map') [dict]
('/anaconda_lib/jedi/parser/parser.py', 'BaseParser_class_initializer', 'default_node') []
('/anaconda_lib/jedi/parser/parser.py', 'BaseParser_class_initializer', 'leaf_map') [dict]
('/anaconda_lib/jedi/parser/parser.py', 'BaseParser_class_initializer', 'default_leaf') []
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'cookie_re') [re.compile('coding[:=]\\s*([-\\w.]+)')]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'is_identifier') [<function <lambda> at 0x109bf2b90>,,, <function <lambda> at 0x10a4d1990>,,, <function <lambda> at 0x10f01fe20>,,, <function <lambda> at 0x10fd31000>,,, <function <lambda> at 0x10fd31090>,,, <function <lambda> at 0x10fd32710>,,, <function <lambda> at 0x10fd32950>,,, <function <lambda> at 0x10fd32b00>,,, <function <lambda> at 0x10fd32f80>,,, <function <lambda> at 0x10fd33130>,,, <function <lambda> at 0x10fd33250>,,, <function <lambda> at 0x10fd332e0>,,, <function <lambda> at 0x10fd33400>,,, <function <lambda> at 0x10fd33640>,,, <function <lambda> at 0x10fd33880>,,, <function <lambda> at 0x10fd33ac0>,,, <function <lambda> at 0x10fd33d90>,,, <function <lambda> at 0x115905900>,,, <method 'isidentifier' of 'str' objects>]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'namechars') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'COMMENT') [int]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Whitespace') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Comment') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Name') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Hexnumber') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Binnumber') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Octnumber') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Decnumber') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Intnumber') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Exponent') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Pointfloat') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Expfloat') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Floatnumber') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Imagnumber') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Number') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'StringPrefix') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Single') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Double') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Single3') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Double3') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Triple') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Operator') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Bracket') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Special') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'Funny') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'PlainToken') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'ContStr') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'PseudoExtras') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'PseudoToken') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'endpats') [dict]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', '_prefix') []
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'single_quoted') [set]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'triple_quoted') [set]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 't') []
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'p') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'ALWAYS_BREAK_TOKENS') [tuple]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'pseudo_token_compiled') [re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE)]
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'path') []
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'code') []
('/anaconda_lib/jedi/parser/tokenize.py', 'module_initializer', 'token') []
('/anaconda_lib/jedi/parser/python/tree.py', 'DocstringMixin_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'PythonMixin_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'PythonLeaf_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', '_LeafWithoutNewlines_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'PythonBaseNode_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'PythonNode_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'PythonErrorNode_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'PythonErrorLeaf_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'EndMarker_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'EndMarker_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'Newline_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'Newline_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'Name_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'Name_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'Literal_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'Number_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'Number_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'String_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'String_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'Operator_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'Operator_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'Keyword_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'Keyword_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'Scope_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'Module_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'Module_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'Decorator_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'Decorator_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'ClassOrFunc_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'Class_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'Class_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'Function_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'Lambda_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'Lambda_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'Flow_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'IfStmt_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'IfStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'WhileStmt_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'WhileStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'ForStmt_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'ForStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'TryStmt_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'TryStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'WithStmt_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'WithStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'Import_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'ImportFrom_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'ImportFrom_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'ImportName_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'ImportName_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'KeywordStatement_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'AssertStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'GlobalStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'ReturnStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'YieldExpr_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'YieldExpr_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'ExprStmt_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'ExprStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/tree.py', 'Param_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'CompFor_class_initializer', 'type') [str]
('/anaconda_lib/jedi/parser/python/tree.py', 'CompFor_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/parser/python/__init__.py', 'module_initializer', '_loaded_grammars') [dict]
('/anaconda_lib/jedi/parser/python/parser.py', 'Parser_class_initializer', 'node_map') [dict]
('/anaconda_lib/jedi/parser/python/parser.py', 'Parser_class_initializer', 'default_node') []
('/anaconda_lib/jedi/parser/python/diff.py', '_NodesStackNode_class_initializer', 'ChildrenGroup') [pt_engine.utils.base.ChildrenGroup]
('/anaconda_lib/jedi/parser/python/diff.py', '_NodesStack_class_initializer', 'endmarker_type') [str]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'DFAState_class_initializer', '__hash__') [None]
('/anaconda_lib/parso/parser.py', 'BaseParser_class_initializer', 'node_map') [dict]
('/anaconda_lib/parso/parser.py', 'BaseParser_class_initializer', 'default_node') []
('/anaconda_lib/parso/parser.py', 'BaseParser_class_initializer', 'leaf_map') [dict]
('/anaconda_lib/parso/parser.py', 'BaseParser_class_initializer', 'default_leaf') []
('/anaconda_lib/parso/python/parser.py', 'module_initializer', 'NAME') []
('/anaconda_lib/parso/python/parser.py', 'module_initializer', 'INDENT') []
('/anaconda_lib/parso/python/parser.py', 'module_initializer', 'DEDENT') []
('/anaconda_lib/parso/python/parser.py', 'Parser_class_initializer', 'node_map') [dict]
('/anaconda_lib/parso/python/parser.py', 'Parser_class_initializer', 'default_node') []
('/anaconda_lib/parso/python/parser.py', 'Parser_class_initializer', '_leaf_map') [dict]
('/anaconda_lib/linting/pydocstyle/checker.py', 'ConventionChecker_class_initializer', 'SECTION_NAMES') [list]
('/anaconda_lib/linting/pyflakes/messages.py', 'Message_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'Message_class_initializer', 'message_args') [tuple]
('/anaconda_lib/linting/pyflakes/messages.py', 'UnusedImport_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'RedefinedWhileUnused_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'RedefinedInListComp_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'ImportShadowedByLoopVar_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'ImportStarNotPermitted_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'ImportStarUsed_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'ImportStarUsage_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'UndefinedName_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'DoctestSyntaxError_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'UndefinedExport_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'UndefinedLocal_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'UndefinedLocal_class_initializer', 'default') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'UndefinedLocal_class_initializer', 'builtin') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'DuplicateArgument_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'MultiValueRepeatedKeyLiteral_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'MultiValueRepeatedKeyVariable_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'LateFutureImport_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'FutureFeatureNotDefined_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'UnusedVariable_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'ReturnWithArgsInsideGenerator_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'ReturnOutsideFunction_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'YieldOutsideFunction_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'ContinueOutsideLoop_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'BreakOutsideLoop_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'ContinueInFinally_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'DefaultExceptNotLast_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'TwoStarredExpressions_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'TooManyExpressionsInStarredAssignment_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'IfTuple_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'AssertTuple_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'ForwardAnnotationSyntaxError_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'CommentAnnotationSyntaxError_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'RaiseNotImplemented_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'InvalidPrintSyntax_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'IsLiteral_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'FStringMissingPlaceholders_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'StringDotFormatExtraPositionalArguments_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'StringDotFormatExtraNamedArguments_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'StringDotFormatMissingArgument_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'StringDotFormatMixingAutomatic_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'StringDotFormatInvalidFormat_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'PercentFormatInvalidFormat_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'PercentFormatMixedPositionalAndNamed_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'PercentFormatUnsupportedFormatCharacter_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'PercentFormatPositionalCountMismatch_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'PercentFormatExtraNamedArguments_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'PercentFormatMissingArgument_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'PercentFormatExpectedMapping_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'PercentFormatExpectedSequence_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/messages.py', 'PercentFormatStarRequiresSequence_class_initializer', 'message') [str]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'PY2') [bool]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'PY35_PLUS') [bool]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'PY36_PLUS') [bool]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'PY38_PLUS') [bool]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'PYPY') [bool]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'builtin_vars') [list]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'parse_format_string') [<bound method Formatter.parse of <string.Formatter object at 0x10a1ebb20>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10a67f310>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10ac93d60>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10af7eaa0>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10b5b6aa0>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10b98a380>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10ba1b580>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10c953850>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10cb09060>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10d4e9150>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10dc06200>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10e9f75b0>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10f21f8b0>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10f667f70>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10f6e3490>>,,, <bound method Formatter.parse of <string.Formatter object at 0x10ff552a0>>,,, <bound method Formatter.parse of <string.Formatter object at 0x1102d4c40>>,,, <bound method Formatter.parse of <string.Formatter object at 0x110d037f0>>,,, <bound method Formatter.parse of <string.Formatter object at 0x11593d120>>]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'tokenize_tokenize') [<function generate_tokens at 0x109938160>,,, <function generate_tokens at 0x10ecf5510>,,, <function generate_tokens at 0x11358b5b0>,,, <function tokenize at 0x109938040>,,, <function tokenize at 0x10ecf53f0>,,, <function tokenize at 0x11358b490>]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'unicode') [str]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'FOR_TYPES') [tuple]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'LOOP_TYPES') [tuple]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'FUNCTION_TYPES') [tuple]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', '_const_tps') [tuple]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'TYPE_COMMENT_RE') [re.compile('^#\\s*type:\\s*')]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'ASCII_NON_ALNUM') [str]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'TYPE_IGNORE_RE') [re.compile("^#\\s*type:\\s*ignore(['msg']|$)"),,, re.compile('msg'),,, re.compile('msgmsg')]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'TYPE_FUNC_RE') [re.compile('^(\\(.*?\\))\\s*->\\s*(.*)$')]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'MAPPING_KEY_RE') [re.compile('\\(([^()]*)\\)')]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'CONVERSION_FLAG_RE') [re.compile('[#0+ -]*')]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'WIDTH_RE') [re.compile('(?:\\*|\\d*)')]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'PRECISION_RE') [re.compile('(?:\\.(?:\\*|\\d*))?')]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'LENGTH_RE') [re.compile('[hlL]?')]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'VALID_CONVERSIONS') [frozenset({'a', 'X', '%', 'u', 'o', 'x', 'c', 'g', 'E', 'F', 'r', 'e', 'd', 'f', 'G', 's', 'i'}),,, frozenset({'g', 'i', 'u', 'X', 'F', 'e', 'c', 's', 'G', 'o', 'a', '%', 'E', 'd', 'x', 'r', 'f'}),,, frozenset({'r', 'i', 'E', 'X', 'F', 'f', 'o', 'e', 'x', 'c', 'a', 'G', 'd', 'g', 'u', '%', 's'})]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', '_MAGIC_GLOBALS') [list]
('/anaconda_lib/linting/pyflakes/checker.py', 'module_initializer', 'TYPING_MODULES') [frozenset({'typing', 'typing_extensions'}),,, frozenset({'typing_extensions', 'typing'})]
('/anaconda_lib/linting/pyflakes/checker.py', 'Scope_class_initializer', 'importStarred') [bool]
('/anaconda_lib/linting/pyflakes/checker.py', 'FunctionScope_class_initializer', 'usesLocals') [bool]
('/anaconda_lib/linting/pyflakes/checker.py', 'FunctionScope_class_initializer', 'alwaysUsed') [set]
('/anaconda_lib/linting/pyflakes/checker.py', 'ModuleScope_class_initializer', '_futures_allowed') [bool]
('/anaconda_lib/linting/pyflakes/checker.py', 'ModuleScope_class_initializer', '_annotations_future_enabled') [bool]
('/anaconda_lib/linting/pyflakes/checker.py', 'Checker_class_initializer', '_ast_node_scope') [dict]
('/anaconda_lib/linting/pyflakes/checker.py', 'Checker_class_initializer', 'nodeDepth') [int]
('/anaconda_lib/linting/pyflakes/checker.py', 'Checker_class_initializer', 'offset') [None]
('/anaconda_lib/linting/pyflakes/checker.py', 'Checker_class_initializer', 'traceTree') [bool]
('/anaconda_lib/linting/pyflakes/checker.py', 'Checker_class_initializer', '_in_annotation') [bool]
('/anaconda_lib/linting/pyflakes/checker.py', 'Checker_class_initializer', '_in_typing_literal') [bool]
('/anaconda_lib/linting/pyflakes/checker.py', 'Checker_class_initializer', '_in_deferred') [bool]
('/anaconda_lib/linting/pyflakes/checker.py', 'Checker_class_initializer', 'builtIns') [set]
('/anaconda_lib/linting/pyflakes/checker.py', 'Checker_class_initializer', '_customBuiltIns') [None]
('/anaconda_lib/linting/pyflakes/checker.py', 'Checker_class_initializer', '_getDoctestExamples') [<bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10a1b04c0>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10a75f790>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10ac56fb0>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10b038430>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10b579030>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10b9acbe0>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10ba1ee30>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10ca346d0>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10cad4d30>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10d4b0e50>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10dba8520>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10e918820>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10f26c760>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10f650610>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10f6788e0>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x10ff1d3f0>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x1101eca60>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x110d0db10>>,,, <bound method DocTestParser.get_examples of <doctest.DocTestParser object at 0x115b84400>>]
('/anaconda_lib/linting/pyflakes/checker.py', 'Checker_class_initializer', '_in_fstring') [bool]
('/anaconda_lib/linting/pyflakes/checker.py', 'Checker_class_initializer', 'LISTCOMP') [bool]
('/anaconda_lib/jedi/debug.py', 'module_initializer', '_inited') [bool]
('/anaconda_lib/jedi/debug.py', 'module_initializer', 'NOTICE') [<object object at 0x109e45ca0>,,, <object object at 0x10a44eee0>,,, <object object at 0x10ada9ea0>,,, <object object at 0x10b665eb0>,,, <object object at 0x10b831f50>,,, <object object at 0x10bcb2030>,,, <object object at 0x10c0cede0>,,, <object object at 0x10c366c20>,,, <object object at 0x10c4d9d30>,,, <object object at 0x10cd81e00>,,, <object object at 0x10cdd1f30>,,, <object object at 0x10d932020>,,, <object object at 0x10e2e1e30>,,, <object object at 0x10e9ad9a0>,,, <object object at 0x10f1154a0>,,, <object object at 0x10ff85e00>,,, <object object at 0x10ff95b60>,,, <object object at 0x110a81f30>,,, <object object at 0x1158b2c50>]
('/anaconda_lib/jedi/debug.py', 'module_initializer', 'WARNING') [<object object at 0x109e45cc0>,,, <object object at 0x10a44ef00>,,, <object object at 0x10ada9ec0>,,, <object object at 0x10b665ed0>,,, <object object at 0x10b831f70>,,, <object object at 0x10bcb2050>,,, <object object at 0x10c0cee00>,,, <object object at 0x10c366c40>,,, <object object at 0x10c4d9d50>,,, <object object at 0x10cd81e20>,,, <object object at 0x10cdd1f50>,,, <object object at 0x10d932040>,,, <object object at 0x10e2e1e50>,,, <object object at 0x10e9ad9c0>,,, <object object at 0x10f1154c0>,,, <object object at 0x10ff85e20>,,, <object object at 0x10ff95b80>,,, <object object at 0x110a81f50>,,, <object object at 0x1158b2c70>]
('/anaconda_lib/jedi/debug.py', 'module_initializer', 'SPEED') [<object object at 0x109e45cf0>,,, <object object at 0x10a44ef30>,,, <object object at 0x10ada9ef0>,,, <object object at 0x10b665f00>,,, <object object at 0x10b831fa0>,,, <object object at 0x10bcb2080>,,, <object object at 0x10c0cee30>,,, <object object at 0x10c366c70>,,, <object object at 0x10c4d9d80>,,, <object object at 0x10cd81e50>,,, <object object at 0x10cdd1f80>,,, <object object at 0x10d932070>,,, <object object at 0x10e2e1e80>,,, <object object at 0x10e9ad9f0>,,, <object object at 0x10f1154f0>,,, <object object at 0x10ff85e50>,,, <object object at 0x10ff95bb0>,,, <object object at 0x110a81f80>,,, <object object at 0x1158b2ca0>]
('/anaconda_lib/jedi/debug.py', 'module_initializer', 'enable_speed') [bool]
('/anaconda_lib/jedi/debug.py', 'module_initializer', 'enable_warning') [bool]
('/anaconda_lib/jedi/debug.py', 'module_initializer', 'enable_notice') [bool]
('/anaconda_lib/jedi/debug.py', 'module_initializer', 'debug_function') [None]
('/anaconda_lib/jedi/debug.py', 'module_initializer', '_debug_indent') [int]
('/anaconda_lib/jedi/debug.py', 'module_initializer', '_start_time') [float]
('/anaconda_lib/jedi/debug.py', 'Fore_class_initializer', 'RED') [str]
('/anaconda_lib/jedi/debug.py', 'Fore_class_initializer', 'GREEN') [str]
('/anaconda_lib/jedi/debug.py', 'Fore_class_initializer', 'YELLOW') [str]
('/anaconda_lib/jedi/debug.py', 'Fore_class_initializer', 'MAGENTA') [str]
('/anaconda_lib/jedi/debug.py', 'Fore_class_initializer', 'RESET') [str]
('/anaconda_lib/jedi/debug.py', 'Fore_class_initializer', 'BLUE') [str]
('/anaconda_lib/jedi/_compatibility.py', 'module_initializer', 'is_py3') [bool]
('/anaconda_lib/jedi/_compatibility.py', 'module_initializer', 'is_py35') [bool]
('/anaconda_lib/jedi/_compatibility.py', 'module_initializer', 'py_version') [int]
('/anaconda_lib/jedi/_compatibility.py', 'module_initializer', 'find_module') [bool,,, meta_func]
('/anaconda_lib/jedi/_compatibility.py', 'module_initializer', 'all_suffixes') [<function all_suffixes at 0x104689cf0>,,, <function all_suffixes at 0x109a55cf0>,,, <function all_suffixes at 0x10fad9cf0>]
('/anaconda_lib/jedi/_compatibility.py', 'module_initializer', 'unicode') [str]
('/anaconda_lib/jedi/_compatibility.py', 'module_initializer', 'encoding') [str]
('/anaconda_lib/jedi/_compatibility.py', 'module_initializer', 'FileNotFoundError') [FileNotFoundError,,, OSError]
('/anaconda_lib/jedi/_compatibility.py', 'module_initializer', 'IsADirectoryError') [IsADirectoryError,,, OSError]
('/anaconda_lib/jedi/_compatibility.py', 'module_initializer', 'PermissionError') [OSError,,, PermissionError]
('/anaconda_lib/jedi/_compatibility.py', 'module_initializer', 'NotADirectoryError') [NotADirectoryError]
('/anaconda_lib/jedi/_compatibility.py', 'Parameter_class_initializer', 'POSITIONAL_ONLY') [<object object at 0x109e45fe0>,,, <object object at 0x10a44f370>,,, <object object at 0x10adaa1e0>,,, <object object at 0x10b6661f0>,,, <object object at 0x10b832290>,,, <object object at 0x10bcb2370>,,, <object object at 0x10c0cf120>,,, <object object at 0x10c366f60>,,, <object object at 0x10c4da070>,,, <object object at 0x10cd82140>,,, <object object at 0x10cdd2270>,,, <object object at 0x10d932360>,,, <object object at 0x10e2e2170>,,, <object object at 0x10e9adce0>,,, <object object at 0x10f1157f0>,,, <object object at 0x10ff86140>,,, <object object at 0x10ff95ea0>,,, <object object at 0x110a82270>,,, <object object at 0x1158b30e0>]
('/anaconda_lib/jedi/_compatibility.py', 'Parameter_class_initializer', 'POSITIONAL_OR_KEYWORD') [<object object at 0x109e46000>,,, <object object at 0x10a44f390>,,, <object object at 0x10adaa200>,,, <object object at 0x10b666210>,,, <object object at 0x10b8322b0>,,, <object object at 0x10bcb2390>,,, <object object at 0x10c0cf140>,,, <object object at 0x10c366f80>,,, <object object at 0x10c4da090>,,, <object object at 0x10cd82160>,,, <object object at 0x10cdd2290>,,, <object object at 0x10d932380>,,, <object object at 0x10e2e2190>,,, <object object at 0x10e9add00>,,, <object object at 0x10f115810>,,, <object object at 0x10ff86160>,,, <object object at 0x10ff95ec0>,,, <object object at 0x110a82290>,,, <object object at 0x1158b3100>]
('/anaconda_lib/jedi/_compatibility.py', 'Parameter_class_initializer', 'VAR_POSITIONAL') [<object object at 0x109e46030>,,, <object object at 0x10a44f3c0>,,, <object object at 0x10adaa230>,,, <object object at 0x10b666240>,,, <object object at 0x10b8322e0>,,, <object object at 0x10bcb23c0>,,, <object object at 0x10c0cf170>,,, <object object at 0x10c366fb0>,,, <object object at 0x10c4da0c0>,,, <object object at 0x10cd82190>,,, <object object at 0x10cdd22c0>,,, <object object at 0x10d9323b0>,,, <object object at 0x10e2e21c0>,,, <object object at 0x10e9add30>,,, <object object at 0x10f115840>,,, <object object at 0x10ff86190>,,, <object object at 0x10ff95ef0>,,, <object object at 0x110a822c0>,,, <object object at 0x1158b3130>]
('/anaconda_lib/jedi/_compatibility.py', 'Parameter_class_initializer', 'KEYWORD_ONLY') [<object object at 0x109e46060>,,, <object object at 0x10a44f3f0>,,, <object object at 0x10adaa260>,,, <object object at 0x10b666270>,,, <object object at 0x10b832310>,,, <object object at 0x10bcb23f0>,,, <object object at 0x10c0cf1a0>,,, <object object at 0x10c366fe0>,,, <object object at 0x10c4da0f0>,,, <object object at 0x10cd821c0>,,, <object object at 0x10cdd22f0>,,, <object object at 0x10d9323e0>,,, <object object at 0x10e2e21f0>,,, <object object at 0x10e9add60>,,, <object object at 0x10f115870>,,, <object object at 0x10ff861c0>,,, <object object at 0x10ff95f20>,,, <object object at 0x110a822f0>,,, <object object at 0x1158b3160>]
('/anaconda_lib/jedi/_compatibility.py', 'Parameter_class_initializer', 'VAR_KEYWORD') [<object object at 0x109e46090>,,, <object object at 0x10a44f420>,,, <object object at 0x10adaa290>,,, <object object at 0x10b6662a0>,,, <object object at 0x10b832340>,,, <object object at 0x10bcb2420>,,, <object object at 0x10c0cf1d0>,,, <object object at 0x10c367010>,,, <object object at 0x10c4da120>,,, <object object at 0x10cd821f0>,,, <object object at 0x10cdd2320>,,, <object object at 0x10d932410>,,, <object object at 0x10e2e2220>,,, <object object at 0x10e9add90>,,, <object object at 0x10f1158a0>,,, <object object at 0x10ff861f0>,,, <object object at 0x10ff95f50>,,, <object object at 0x110a82320>,,, <object object at 0x1158b3190>]
('/anaconda_lib/jedi/_compatibility.py', 'finalize_class_initializer', '__slots__') [tuple]
('/anaconda_lib/jedi/_compatibility.py', 'finalize_class_initializer', '_registry') [dict]
('/anaconda_lib/jedi/plugins/django.py', 'module_initializer', 'mapping') [dict]
('/anaconda_lib/jedi/plugins/__init__.py', 'module_initializer', 'plugin_manager') [_PluginManager]
('/anaconda_lib/jedi/plugins/pytest.py', 'module_initializer', '_PYTEST_FIXTURE_MODULES') [list]
('/anaconda_lib/jedi/plugins/stdlib.py', 'module_initializer', '_NAMEDTUPLE_CLASS_TEMPLATE') [str]
('/anaconda_lib/jedi/plugins/stdlib.py', 'module_initializer', '_NAMEDTUPLE_FIELD_TEMPLATE') [str]
('/anaconda_lib/jedi/plugins/stdlib.py', 'module_initializer', '_implemented') [dict]
('/anaconda_lib/jedi/evaluate/instance.py', 'AbstractInstanceContext_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/evaluate/instance.py', 'CompiledInstanceClassFilter_class_initializer', 'name_class') [CompiledInstanceName]
('/anaconda_lib/jedi/evaluate/instance.py', 'InstanceClassFilter_class_initializer', 'name_class') [LazyInstanceClassName]
('/anaconda_lib/jedi/evaluate/instance.py', 'SelfNameFilter_class_initializer', 'name_class') [LazyInstanceName]
('/anaconda_lib/jedi/evaluate/instance.py', 'AnonymousInstanceFunctionExecution_class_initializer', 'function_execution_filter') []
('/anaconda_lib/jedi/evaluate/iterable.py', 'AbstractSequence_class_initializer', 'builtin_methods') [dict]
('/anaconda_lib/jedi/evaluate/iterable.py', 'AbstractSequence_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/evaluate/iterable.py', 'GeneratorMixin_class_initializer', 'array_type') [None]
('/anaconda_lib/jedi/evaluate/iterable.py', 'ListComprehension_class_initializer', 'array_type') [str]
('/anaconda_lib/jedi/evaluate/iterable.py', 'SetComprehension_class_initializer', 'array_type') [str]
('/anaconda_lib/jedi/evaluate/iterable.py', 'DictComprehension_class_initializer', 'array_type') [str]
('/anaconda_lib/jedi/evaluate/iterable.py', 'SequenceLiteralContext_class_initializer', 'mapping') [dict]
('/anaconda_lib/jedi/evaluate/iterable.py', 'DictLiteralContext_class_initializer', 'array_type') [str]
('/anaconda_lib/jedi/evaluate/analysis.py', 'module_initializer', 'CODES') [dict]
('/anaconda_lib/jedi/evaluate/flow_analysis.py', 'module_initializer', 'REACHABLE') [Status]
('/anaconda_lib/jedi/evaluate/flow_analysis.py', 'module_initializer', 'UNREACHABLE') [Status]
('/anaconda_lib/jedi/evaluate/flow_analysis.py', 'module_initializer', 'UNSURE') [Status]
('/anaconda_lib/jedi/evaluate/flow_analysis.py', 'Status_class_initializer', 'lookup_table') [dict]
('/anaconda_lib/jedi/evaluate/cache.py', 'module_initializer', 'NO_DEFAULT') [<object object at 0x109e468b0>,,, <object object at 0x10a44fc90>,,, <object object at 0x10adaaab0>,,, <object object at 0x10b666ac0>,,, <object object at 0x10b832b60>,,, <object object at 0x10bcb2c40>,,, <object object at 0x10c0cf9f0>,,, <object object at 0x10c367830>,,, <object object at 0x10c4da940>,,, <object object at 0x10cd82a10>,,, <object object at 0x10cdd2b40>,,, <object object at 0x10d932c30>,,, <object object at 0x10e2e2a40>,,, <object object at 0x10e9ae5b0>,,, <object object at 0x10f1160c0>,,, <object object at 0x10ff86a10>,,, <object object at 0x10ff96770>,,, <object object at 0x110a82b40>,,, <object object at 0x1158b3a00>]
('/anaconda_lib/jedi/evaluate/param.py', 'AbstractArguments_class_initializer', 'context') [None]
('/anaconda_lib/jedi/evaluate/imports.py', 'ImportName_class_initializer', 'start_pos') [tuple]
('/anaconda_lib/jedi/evaluate/dynamic.py', 'module_initializer', 'MAX_PARAM_SEARCHES') [int]
('/anaconda_lib/jedi/evaluate/context.py', 'Context_class_initializer', 'api_type') [None]
('/anaconda_lib/jedi/evaluate/context.py', 'Context_class_initializer', 'predefined_names') [dict]
('/anaconda_lib/jedi/evaluate/context.py', 'Context_class_initializer', 'tree_node') [None]
('/anaconda_lib/jedi/evaluate/stdlib.py', 'module_initializer', '_implemented') [dict]
('/anaconda_lib/jedi/evaluate/representation.py', 'ClassFilter_class_initializer', 'name_class') [ClassName]
('/anaconda_lib/jedi/evaluate/representation.py', 'ClassContext_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/evaluate/representation.py', 'LambdaName_class_initializer', 'string_name') [str]
('/anaconda_lib/jedi/evaluate/representation.py', 'FunctionContext_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/evaluate/representation.py', 'ModuleAttributeName_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/evaluate/representation.py', 'ModuleName_class_initializer', 'start_pos') [tuple]
('/anaconda_lib/jedi/evaluate/representation.py', 'ModuleContext_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/evaluate/representation.py', 'ModuleContext_class_initializer', 'parent_context') [None]
('/anaconda_lib/jedi/evaluate/representation.py', 'ImplicitNamespaceContext_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/evaluate/representation.py', 'ImplicitNamespaceContext_class_initializer', 'parent_context') [None]
('/anaconda_lib/jedi/evaluate/filters.py', 'AbstractNameDefinition_class_initializer', 'start_pos') [None]
('/anaconda_lib/jedi/evaluate/filters.py', 'AbstractNameDefinition_class_initializer', 'string_name') [None]
('/anaconda_lib/jedi/evaluate/filters.py', 'AbstractNameDefinition_class_initializer', 'parent_context') [None]
('/anaconda_lib/jedi/evaluate/filters.py', 'AbstractNameDefinition_class_initializer', 'tree_name') [None]
('/anaconda_lib/jedi/evaluate/filters.py', 'ParamName_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/evaluate/filters.py', 'AbstractFilter_class_initializer', '_until_position') [None]
('/anaconda_lib/jedi/evaluate/filters.py', 'AbstractUsedNamesFilter_class_initializer', 'name_class') [TreeNameDefinition]
('/anaconda_lib/jedi/evaluate/filters.py', 'FunctionExecutionFilter_class_initializer', 'param_name') [ParamName]
('/anaconda_lib/jedi/evaluate/filters.py', 'AnonymousInstanceFunctionExecutionFilter_class_initializer', 'param_name') [AnonymousInstanceParamName]
('/anaconda_lib/jedi/evaluate/compiled/fake.py', 'module_initializer', 'modules') [dict]
('/anaconda_lib/jedi/evaluate/compiled/fake.py', 'module_initializer', 'MethodDescriptorType') [method_descriptor]
('/anaconda_lib/jedi/evaluate/compiled/fake.py', 'module_initializer', 'NOT_CLASS_TYPES') [tuple]
('/anaconda_lib/jedi/evaluate/compiled/__init__.py', 'module_initializer', '_sep') [None,,, str]
('/anaconda_lib/jedi/evaluate/compiled/__init__.py', 'module_initializer', '_path_re') [re.compile("(?:\\.[^'/']+|['/']__init__\\.py)$"),,, re.compile('msg')]
('/anaconda_lib/jedi/evaluate/compiled/__init__.py', 'module_initializer', 'MethodDescriptorType') [method_descriptor]
('/anaconda_lib/jedi/evaluate/compiled/__init__.py', 'module_initializer', 'WrapperDescriptorType') [wrapper_descriptor]
('/anaconda_lib/jedi/evaluate/compiled/__init__.py', 'module_initializer', 'object_class_dict') [dict]
('/anaconda_lib/jedi/evaluate/compiled/__init__.py', 'module_initializer', 'ClassMethodDescriptorType') [classmethod_descriptor]
('/anaconda_lib/jedi/evaluate/compiled/__init__.py', 'module_initializer', 'ALLOWED_DESCRIPTOR_ACCESS') [tuple]
('/anaconda_lib/jedi/evaluate/compiled/__init__.py', 'module_initializer', 'docstr_defaults') [dict]
('/anaconda_lib/jedi/evaluate/compiled/__init__.py', 'module_initializer', '_SPECIAL_OBJECTS') [dict]
('/anaconda_lib/jedi/evaluate/compiled/__init__.py', 'CompiledObject_class_initializer', 'path') [None]
('/anaconda_lib/jedi/evaluate/compiled/__init__.py', 'CompiledObject_class_initializer', 'used_names') [<function <lambda> at 0x109bf1e10>,,, <function <lambda> at 0x10a7555a0>,,, <function <lambda> at 0x10f332320>,,, <function <lambda> at 0x10fd316c0>,,, <function <lambda> at 0x10fd325f0>,,, <function <lambda> at 0x10fd32680>,,, <function <lambda> at 0x10fd328c0>,,, <function <lambda> at 0x10fd32a70>,,, <function <lambda> at 0x10fd32d40>,,, <function <lambda> at 0x10fd32dd0>,,, <function <lambda> at 0x10fd33130>,,, <function <lambda> at 0x10fd33250>,,, <function <lambda> at 0x10fd33490>,,, <function <lambda> at 0x10fd33640>,,, <function <lambda> at 0x10fd336d0>,,, <function <lambda> at 0x10fd33760>,,, <function <lambda> at 0x10fd33e20>,,, <function <lambda> at 0x115ac5510>]
('/anaconda_lib/jedi/evaluate/compiled/__init__.py', 'UnresolvableParamName_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/evaluate/compiled/__init__.py', 'CompiledObjectFilter_class_initializer', 'name_class') [CompiledName]
('/anaconda_lib/jedi/evaluate/compiled/mixed.py', 'MixedObjectFilter_class_initializer', 'name_class') [MixedName]
('/anaconda_lib/jedi/api/completion.py', 'module_initializer', '_string_start') [re.compile('^\\w*(\\\'{3}|"{3}|\\\'|")')]
('/anaconda_lib/jedi/api/keywords.py', 'module_initializer', 'pydoc_topics') [None]
('/anaconda_lib/jedi/api/keywords.py', 'KeywordName_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/api/__init__.py', 'Interpreter_class_initializer', '_allow_descriptor_getattr_default') [bool]
('/anaconda_lib/jedi/api/environment.py', 'module_initializer', '_VersionInfo') [pt_engine.utils.base.VersionInfo]
('/anaconda_lib/jedi/api/environment.py', 'module_initializer', '_SUPPORTED_PYTHONS') [list]
('/anaconda_lib/jedi/api/environment.py', 'module_initializer', '_SAFE_PATHS') [list]
('/anaconda_lib/jedi/api/environment.py', 'module_initializer', '_CONDA_VAR') [str]
('/anaconda_lib/jedi/api/environment.py', 'module_initializer', '_CURRENT_VERSION') [str]
('/anaconda_lib/jedi/api/environment.py', 'Environment_class_initializer', '_subprocess') [None]
('/anaconda_lib/jedi/api/classes.py', 'BaseName_class_initializer', '_mapping') [dict]
('/anaconda_lib/jedi/api/classes.py', 'BaseName_class_initializer', '_tuple_mapping') [dict]
('/anaconda_lib/jedi/api/helpers.py', 'module_initializer', 'CompletionParts') [pt_engine.utils.base.CompletionParts]
('/anaconda_lib/jedi/api/strings.py', 'module_initializer', '_sentinel') [<object object at 0x109e473b0>,,, <object object at 0x10a7b4940>,,, <object object at 0x10adab5b0>,,, <object object at 0x10af18520>,,, <object object at 0x10b6675c0>,,, <object object at 0x10b833660>,,, <object object at 0x10bcb3740>,,, <object object at 0x10c4db440>,,, <object object at 0x10c658360>,,, <object object at 0x10cd83510>,,, <object object at 0x10cdd3640>,,, <object object at 0x10d933730>,,, <object object at 0x10e2e3540>,,, <object object at 0x10e9af0b0>,,, <object object at 0x10f116c30>,,, <object object at 0x10ff87510>,,, <object object at 0x10ff97270>,,, <object object at 0x110a83640>,,, <object object at 0x115be06a0>]
('/anaconda_lib/jedi/api/strings.py', 'StringName_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/api/strings.py', 'StringName_class_initializer', 'is_value_name') [bool]
('/anaconda_lib/jedi/api/project.py', 'module_initializer', '_CONFIG_FOLDER') [str]
('/anaconda_lib/jedi/api/project.py', 'module_initializer', '_CONTAINS_POTENTIAL_PROJECT') [tuple]
('/anaconda_lib/jedi/api/project.py', 'module_initializer', '_SERIALIZER_VERSION') [int]
('/anaconda_lib/jedi/api/project.py', 'Project_class_initializer', '_environment') [None]
('/anaconda_lib/jedi/api/file_name.py', 'PathName_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/api/refactoring/__init__.py', 'module_initializer', 'EXPRESSION_PARTS') [list]
('/anaconda_lib/jedi/inference/analysis.py', 'module_initializer', 'CODES') [dict]
('/anaconda_lib/jedi/inference/base_value.py', 'module_initializer', 'sentinel') [<object object at 0x109e474d0>,,, <object object at 0x10a44d560>,,, <object object at 0x10adab6d0>,,, <object object at 0x10af18640>,,, <object object at 0x10b6676e0>,,, <object object at 0x10b833780>,,, <object object at 0x10bcb3860>,,, <object object at 0x10c4db560>,,, <object object at 0x10c658480>,,, <object object at 0x10cd83640>,,, <object object at 0x10cdd3760>,,, <object object at 0x10d933850>,,, <object object at 0x10e2e3660>,,, <object object at 0x10e9af1d0>,,, <object object at 0x10f116d50>,,, <object object at 0x10ff87630>,,, <object object at 0x10ff97390>,,, <object object at 0x110a83760>,,, <object object at 0x1158b12d0>]
('/anaconda_lib/jedi/inference/base_value.py', 'module_initializer', 'NO_VALUES') [ValueSet]
('/anaconda_lib/jedi/inference/base_value.py', 'Value_class_initializer', 'tree_node') [None]
('/anaconda_lib/jedi/inference/base_value.py', 'Value_class_initializer', 'array_type') [None]
('/anaconda_lib/jedi/inference/arguments.py', 'AbstractArguments_class_initializer', 'context') [None]
('/anaconda_lib/jedi/inference/arguments.py', 'AbstractArguments_class_initializer', 'argument_node') [None]
('/anaconda_lib/jedi/inference/arguments.py', 'AbstractArguments_class_initializer', 'trailer') [None]
('/anaconda_lib/jedi/inference/flow_analysis.py', 'module_initializer', 'REACHABLE') [Status]
('/anaconda_lib/jedi/inference/flow_analysis.py', 'module_initializer', 'UNREACHABLE') [Status]
('/anaconda_lib/jedi/inference/flow_analysis.py', 'module_initializer', 'UNSURE') [Status]
('/anaconda_lib/jedi/inference/flow_analysis.py', 'Status_class_initializer', 'lookup_table') [dict]
('/anaconda_lib/jedi/inference/cache.py', 'module_initializer', '_NO_DEFAULT') [<object object at 0x109e47570>,,, <object object at 0x10a7b4c30>,,, <object object at 0x10adab770>,,, <object object at 0x10af186e0>,,, <object object at 0x10b667780>,,, <object object at 0x10b833820>,,, <object object at 0x10bcb3900>,,, <object object at 0x10c4db600>,,, <object object at 0x10c658520>,,, <object object at 0x10cd836e0>,,, <object object at 0x10cdd3800>,,, <object object at 0x10d9338f0>,,, <object object at 0x10e2e3700>,,, <object object at 0x10e9af270>,,, <object object at 0x10f116df0>,,, <object object at 0x10ff876d0>,,, <object object at 0x10ff97430>,,, <object object at 0x110a83800>,,, <object object at 0x115be09a0>]
('/anaconda_lib/jedi/inference/cache.py', 'module_initializer', '_RECURSION_SENTINEL') [<object object at 0x109e475e0>,,, <object object at 0x10a7b4c60>,,, <object object at 0x10adab7e0>,,, <object object at 0x10af18750>,,, <object object at 0x10b6677f0>,,, <object object at 0x10b833890>,,, <object object at 0x10bcb3970>,,, <object object at 0x10c4db670>,,, <object object at 0x10c658590>,,, <object object at 0x10cd83750>,,, <object object at 0x10cdd3870>,,, <object object at 0x10d933960>,,, <object object at 0x10e2e3770>,,, <object object at 0x10e9af2e0>,,, <object object at 0x10f116e60>,,, <object object at 0x10ff87740>,,, <object object at 0x10ff974a0>,,, <object object at 0x110a83870>,,, <object object at 0x115be09d0>]
('/anaconda_lib/jedi/inference/names.py', 'AbstractNameDefinition_class_initializer', 'start_pos') [None]
('/anaconda_lib/jedi/inference/names.py', 'AbstractNameDefinition_class_initializer', 'string_name') [None]
('/anaconda_lib/jedi/inference/names.py', 'AbstractNameDefinition_class_initializer', 'parent_context') [None]
('/anaconda_lib/jedi/inference/names.py', 'AbstractNameDefinition_class_initializer', 'tree_name') [None]
('/anaconda_lib/jedi/inference/names.py', 'AbstractNameDefinition_class_initializer', 'is_value_name') [bool]
('/anaconda_lib/jedi/inference/names.py', 'AbstractArbitraryName_class_initializer', 'is_value_name') [bool]
('/anaconda_lib/jedi/inference/names.py', 'TreeNameDefinition_class_initializer', '_API_TYPES') [dict]
('/anaconda_lib/jedi/inference/names.py', 'ParamNameInterface_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/inference/names.py', 'BaseTreeParamName_class_initializer', 'annotation_node') [None]
('/anaconda_lib/jedi/inference/names.py', 'BaseTreeParamName_class_initializer', 'default_node') [None]
('/anaconda_lib/jedi/inference/names.py', 'ImportName_class_initializer', 'start_pos') [tuple]
('/anaconda_lib/jedi/inference/names.py', 'ImportName_class_initializer', '_level') [int]
('/anaconda_lib/jedi/inference/names.py', 'SubModuleName_class_initializer', '_level') [int]
('/anaconda_lib/jedi/inference/names.py', 'ModuleName_class_initializer', 'start_pos') [tuple]
('/anaconda_lib/jedi/inference/context.py', 'CompiledModuleContext_class_initializer', 'code_lines') [None]
('/anaconda_lib/jedi/inference/utils.py', 'module_initializer', '_sep') [None,,, str]
('/anaconda_lib/jedi/inference/utils.py', 'module_initializer', '_path_re') [re.compile("(?:\\.[^'/']+|['/']__init__\\.py)$"),,, re.compile('msg')]
('/anaconda_lib/jedi/inference/recursion.py', 'module_initializer', 'recursion_limit') [int]
('/anaconda_lib/jedi/inference/recursion.py', 'module_initializer', 'total_function_execution_limit') [int]
('/anaconda_lib/jedi/inference/recursion.py', 'module_initializer', 'per_function_execution_limit') [int]
('/anaconda_lib/jedi/inference/recursion.py', 'module_initializer', 'per_function_recursion_limit') [int]
('/anaconda_lib/jedi/inference/filters.py', 'module_initializer', '_definition_name_cache') [<WeakKeyDictionary at 0x10a433550>,,, <WeakKeyDictionary at 0x10a821c30>,,, <WeakKeyDictionary at 0x10ad37820>,,, <WeakKeyDictionary at 0x10aee4820>,,, <WeakKeyDictionary at 0x10af05360>,,, <WeakKeyDictionary at 0x10b986a10>,,, <WeakKeyDictionary at 0x10c5675e0>,,, <WeakKeyDictionary at 0x10c739810>,,, <WeakKeyDictionary at 0x10ca3ace0>,,, <WeakKeyDictionary at 0x10d22a260>,,, <WeakKeyDictionary at 0x10d4e7c70>,,, <WeakKeyDictionary at 0x10e8f0130>,,, <WeakKeyDictionary at 0x10f385210>,,, <WeakKeyDictionary at 0x10f663430>,,, <WeakKeyDictionary at 0x10f68b9a0>,,, <WeakKeyDictionary at 0x1102d28c0>,,, <WeakKeyDictionary at 0x110ad7280>,,, <WeakKeyDictionary at 0x110d3d6c0>,,, <WeakKeyDictionary at 0x115c43a00>]
('/anaconda_lib/jedi/inference/filters.py', 'AbstractFilter_class_initializer', '_until_position') [None]
('/anaconda_lib/jedi/inference/filters.py', 'FilterWrapper_class_initializer', 'name_wrapper_class') [None]
('/anaconda_lib/jedi/inference/filters.py', '_BuiltinMappedMethod_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/inference/gradual/typing.py', 'module_initializer', '_PROXY_CLASS_TYPES') [list]
('/anaconda_lib/jedi/inference/gradual/typing.py', 'module_initializer', '_TYPE_ALIAS_TYPES') [dict]
('/anaconda_lib/jedi/inference/gradual/typing.py', 'module_initializer', '_PROXY_TYPES') [list]
('/anaconda_lib/jedi/inference/gradual/typing.py', 'TypingModuleFilterWrapper_class_initializer', 'name_wrapper_class') [TypingModuleName]
('/anaconda_lib/jedi/inference/gradual/typing.py', 'ProxyTypingValue_class_initializer', 'index_class') [TypingClassWithIndex]
('/anaconda_lib/jedi/inference/gradual/typing.py', 'ProxyTypingClassValue_class_initializer', 'index_class') [TypingClassValueWithIndex]
('/anaconda_lib/jedi/inference/gradual/base.py', '_PseudoTreeNameClass_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/inference/value/instance.py', 'AbstractInstanceValue_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/inference/value/instance.py', 'AnonymousInstance_class_initializer', '_arguments') [None]
('/anaconda_lib/jedi/inference/value/iterable.py', 'GeneratorBase_class_initializer', 'array_type') [None]
('/anaconda_lib/jedi/inference/value/iterable.py', 'Sequence_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/inference/value/iterable.py', 'ListComprehension_class_initializer', 'array_type') [str]
('/anaconda_lib/jedi/inference/value/iterable.py', 'SetComprehension_class_initializer', 'array_type') [str]
('/anaconda_lib/jedi/inference/value/iterable.py', 'DictComprehension_class_initializer', 'array_type') [str]
('/anaconda_lib/jedi/inference/value/iterable.py', 'SequenceLiteralValue_class_initializer', '_TUPLE_LIKE') [tuple]
('/anaconda_lib/jedi/inference/value/iterable.py', 'SequenceLiteralValue_class_initializer', 'mapping') [dict]
('/anaconda_lib/jedi/inference/value/iterable.py', 'DictLiteralValue_class_initializer', 'array_type') [str]
('/anaconda_lib/jedi/inference/value/iterable.py', 'FakeTuple_class_initializer', 'array_type') [str]
('/anaconda_lib/jedi/inference/value/iterable.py', 'FakeList_class_initializer', 'array_type') [str]
('/anaconda_lib/jedi/inference/value/iterable.py', 'FakeDict_class_initializer', 'array_type') [str]
('/anaconda_lib/jedi/inference/value/dynamic_arrays.py', 'module_initializer', '_sentinel') [<object object at 0x109e479d0>,,, <object object at 0x10a7b51c0>,,, <object object at 0x10adabbd0>,,, <object object at 0x10af18b40>,,, <object object at 0x10b667be0>,,, <object object at 0x10b833c80>,,, <object object at 0x10bcb3d60>,,, <object object at 0x10c4dba60>,,, <object object at 0x10c658980>,,, <object object at 0x10cd83b40>,,, <object object at 0x10cdd3c60>,,, <object object at 0x10d933d50>,,, <object object at 0x10e2e3b60>,,, <object object at 0x10e9af6d0>,,, <object object at 0x10f117250>,,, <object object at 0x10ff87b30>,,, <object object at 0x10ff97890>,,, <object object at 0x110a83c60>,,, <object object at 0x115be0f30>]
('/anaconda_lib/jedi/inference/value/klass.py', 'ClassValue_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/inference/value/module.py', '_ModuleAttributeName_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/inference/value/module.py', 'ModuleValue_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/inference/value/namespace.py', 'ImplicitNamespaceValue_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/inference/value/namespace.py', 'ImplicitNamespaceValue_class_initializer', 'parent_context') [None]
('/anaconda_lib/jedi/inference/value/function.py', 'LambdaName_class_initializer', 'string_name') [str]
('/anaconda_lib/jedi/inference/value/function.py', 'LambdaName_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/inference/value/function.py', 'FunctionMixin_class_initializer', 'api_type') [str]
('/anaconda_lib/jedi/inference/compiled/access.py', 'module_initializer', 'ALLOWED_GETITEM_TYPES') [tuple]
('/anaconda_lib/jedi/inference/compiled/access.py', 'module_initializer', 'MethodDescriptorType') [method_descriptor]
('/anaconda_lib/jedi/inference/compiled/access.py', 'module_initializer', 'NOT_CLASS_TYPES') [tuple]
('/anaconda_lib/jedi/inference/compiled/access.py', 'module_initializer', 'WrapperDescriptorType') [wrapper_descriptor]
('/anaconda_lib/jedi/inference/compiled/access.py', 'module_initializer', 'object_class_dict') [dict]
('/anaconda_lib/jedi/inference/compiled/access.py', 'module_initializer', 'ClassMethodDescriptorType') [classmethod_descriptor]
('/anaconda_lib/jedi/inference/compiled/access.py', 'module_initializer', '_sentinel') [<object object at 0x109e47c80>,,, <object object at 0x10a7b5420>,,, <object object at 0x10adabe80>,,, <object object at 0x10af18df0>,,, <object object at 0x10af2c050>,,, <object object at 0x10b667e90>,,, <object object at 0x10b833f30>,,, <object object at 0x10c4dbd10>,,, <object object at 0x10c658c30>,,, <object object at 0x10cd83df0>,,, <object object at 0x10cdd3f10>,,, <object object at 0x10e2e3e10>,,, <object object at 0x10e9af980>,,, <object object at 0x10f117510>,,, <object object at 0x10ff87de0>,,, <object object at 0x10ff97b40>,,, <object object at 0x1109f4030>,,, <object object at 0x110a83f10>,,, <object object at 0x115be1190>]
('/anaconda_lib/jedi/inference/compiled/access.py', 'module_initializer', 'COMPARISON_OPERATORS') [dict]
('/anaconda_lib/jedi/inference/compiled/access.py', 'module_initializer', '_OPERATORS') [dict]
('/anaconda_lib/jedi/inference/compiled/access.py', 'module_initializer', 'ALLOWED_DESCRIPTOR_ACCESS') [tuple]
('/anaconda_lib/jedi/inference/compiled/access.py', 'module_initializer', 'SignatureParam') [pt_engine.utils.base.SignatureParam]
('/anaconda_lib/jedi/inference/compiled/mixed.py', 'module_initializer', '_sentinel') [<object object at 0x109e47d40>,,, <object object at 0x10a3a0040>,,, <object object at 0x10a7b54e0>,,, <object object at 0x10adabf40>,,, <object object at 0x10af18eb0>,,, <object object at 0x10af2c100>,,, <object object at 0x10b667f50>,,, <object object at 0x10bdd0030>,,, <object object at 0x10c4dbdd0>,,, <object object at 0x10c5d4030>,,, <object object at 0x10c658cf0>,,, <object object at 0x10cd83eb0>,,, <object object at 0x10e2e3ed0>,,, <object object at 0x10e9afa40>,,, <object object at 0x10f1175d0>,,, <object object at 0x10ff87ea0>,,, <object object at 0x10ff97c00>,,, <object object at 0x1109f40f0>,,, <object object at 0x115be1250>]
('/anaconda_lib/jedi/inference/compiled/value.py', 'module_initializer', 'docstr_defaults') [dict]
('/anaconda_lib/jedi/inference/compiled/value.py', 'CompiledModule_class_initializer', 'file_io') [None]
('/anaconda_lib/jedi/inference/compiled/subprocess/__init__.py', 'module_initializer', '_MAIN_PATH') [str]
('/anaconda_lib/jedi/inference/compiled/subprocess/__init__.py', 'CompiledSubprocess_class_initializer', 'is_crashed') [bool]
('/anaconda_lib/jedi/inference/compiled/subprocess/__init__.py', 'CompiledSubprocess_class_initializer', '_pickle_protocol') [int]
('/anaconda_lib/jedi/inference/compiled/subprocess/__main__.py', 'module_initializer', 'x') []
('/anaconda_lib/jedi/inference/compiled/subprocess/__main__.py', 'module_initializer', 'host_sys_version') [list]
('/anaconda_lib/jedi/inference/compiled/subprocess/__main__.py', 'module_initializer', 'pickle_protocol') []
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'unicode') [str]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', '__version__') [str]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'CR') [str]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'LF') [str]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'CRLF') [str]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'PYTHON_SHEBANG_REGEX') [re.compile('^#!.*\\bpython[23]?\\b\\s*$')]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'LAMBDA_REGEX') [re.compile('([\\w.]+)\\s=\\slambda\\s*([\\(\\)\\w,\\s.]*):')]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'COMPARE_NEGATIVE_REGEX') [re.compile('\\b(not)\\s+([^][)(}{]+)\\s+(in|is)\\s')]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'COMPARE_NEGATIVE_REGEX_THROUGH') [re.compile('\\b(not\\s+in)\\s')]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'BARE_EXCEPT_REGEX') [re.compile('except\\s*:')]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'STARTSWITH_DEF_REGEX') [re.compile('^(async\\s+def|def)\\s.*\\):')]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'SHORTEN_OPERATOR_GROUPS') [frozenset({frozenset({','}), frozenset({'%', '-', '*', '//', '/', '+'}), frozenset({'(', '{', '%', ',', '*', '//', '/', '-', '[', '+'}), frozenset({'(', ',', '[', '{'}), frozenset({'%'}), frozenset({'(', '{', '[', '%'})}),,, frozenset({frozenset({'-', '*', '//', '/', '+', '%'}), frozenset({','}), frozenset({'%'}), frozenset({',', '{', '[', '('}), frozenset({'{', '[', '(', '%'}), frozenset({',', '-', '*', '//', '/', '{', '[', '(', '%', '+'})}),,, frozenset({frozenset({'//', ',', '%', '+', '/', '{', '[', '-', '*', '('}), frozenset({'%'}), frozenset({'//', '%', '+', '/', '-', '*'}), frozenset({'%', '{', '(', '['}), frozenset({','}), frozenset({',', '{', '(', '['})})]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'DEFAULT_IGNORE') [str]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'DEFAULT_INDENT_SIZE') [int]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'CODE_TO_2TO3') [dict]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'DEFAULT_CONFIG') [str]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'PROJECT_CONFIG') [tuple]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'MAX_PYTHON_FILE_DETECTION_BYTES') [int]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'Token') [pt_engine.utils.base.Token]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', '_cached_tokenizer') [CachedTokenizer]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', 'module_initializer', 'generate_tokens') [meta_func]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/refactor.py', 'module_initializer', '__author__') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/refactor.py', 'module_initializer', '_open_with_encoding') [<built-in function open>,,, <function open at 0x104579630>,,, <function open at 0x109945630>,,, <function open at 0x10f9c9630>]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/refactor.py', 'module_initializer', '_from_system_newlines') [meta_func]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/refactor.py', 'module_initializer', '_to_system_newlines') [meta_func]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/refactor.py', 'RefactoringTool_class_initializer', '_default_options') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/refactor.py', 'RefactoringTool_class_initializer', 'CLASS_PREFIX') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/refactor.py', 'RefactoringTool_class_initializer', 'FILE_PREFIX') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/refactor.py', 'RefactoringTool_class_initializer', 'PS1') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/refactor.py', 'RefactoringTool_class_initializer', 'PS2') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', 'PATTERN') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', 'pattern') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', 'pattern_tree') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', 'options') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', 'filename') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', 'logger') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', 'numbers') [count(1)]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', 'used_names') [set]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', 'order') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', 'explicit') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', 'run_order') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', '_accept_type') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', 'keep_line_order') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'BaseFix_class_initializer', 'syms') [Symbols]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pygram.py', 'module_initializer', '_GRAMMAR_FILE') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pygram.py', 'module_initializer', '_PATTERN_GRAMMAR_FILE') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pygram.py', 'module_initializer', 'python_grammar') [Grammar,,, PgenGrammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pygram.py', 'module_initializer', 'python_symbols') [Symbols]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pygram.py', 'module_initializer', 'python_grammar_no_print_statement') [Grammar,,, PgenGrammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pygram.py', 'module_initializer', 'pattern_grammar') [Grammar,,, PgenGrammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pygram.py', 'module_initializer', 'pattern_symbols') [Symbols]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'module_initializer', '__author__') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'module_initializer', '__all__') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_base.py', 'ConditionalFix_class_initializer', 'skip_on') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/btm_utils.py', 'module_initializer', 'syms') [Symbols]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/btm_utils.py', 'module_initializer', 'pysyms') [Symbols]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/btm_utils.py', 'module_initializer', 'tokens') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/btm_utils.py', 'module_initializer', 'token_labels') [<module 'token' from '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/token.py'>]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/btm_utils.py', 'module_initializer', 'TYPE_ANY') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/btm_utils.py', 'module_initializer', 'TYPE_ALTERNATIVES') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/btm_utils.py', 'module_initializer', 'TYPE_GROUP') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'module_initializer', 'opmap_raw') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'module_initializer', 'opmap') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'module_initializer', 'line') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'module_initializer', 'op') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'module_initializer', 'name') []
('/anaconda_lib/parso/grammar.py', 'module_initializer', '_loaded_grammars') [dict]
('/anaconda_lib/parso/grammar.py', 'Grammar_class_initializer', '_error_normalizer_config') [None]
('/anaconda_lib/parso/grammar.py', 'Grammar_class_initializer', '_token_namespace') [None]
('/anaconda_lib/parso/grammar.py', 'Grammar_class_initializer', '_default_normalizer_config') []
('/anaconda_lib/parso/grammar.py', 'PythonGrammar_class_initializer', '_error_normalizer_config') []
('/anaconda_lib/parso/grammar.py', 'PythonGrammar_class_initializer', '_start_nonterminal') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'ENDMARKER') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'NAME') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'NUMBER') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'STRING') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'NEWLINE') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'INDENT') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'DEDENT') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'LPAR') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'RPAR') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'LSQB') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'RSQB') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'COLON') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'COMMA') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'SEMI') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'PLUS') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'MINUS') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'STAR') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'SLASH') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'VBAR') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'AMPER') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'LESS') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'GREATER') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'EQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'DOT') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'PERCENT') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'BACKQUOTE') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'LBRACE') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'RBRACE') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'EQEQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'NOTEQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'LESSEQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'GREATEREQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'TILDE') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'CIRCUMFLEX') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'LEFTSHIFT') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'RIGHTSHIFT') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'DOUBLESTAR') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'PLUSEQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'MINEQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'STAREQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'SLASHEQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'PERCENTEQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'AMPEREQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'VBAREQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'CIRCUMFLEXEQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'LEFTSHIFTEQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'RIGHTSHIFTEQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'DOUBLESTAREQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'DOUBLESLASH') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'DOUBLESLASHEQUAL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'AT') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'OP') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'COMMENT') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'NL') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'RARROW') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'ERRORTOKEN') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'N_TOKENS') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'NT_OFFSET') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', 'tok_name') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', '_name') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/token.py', 'module_initializer', '_value') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'DFAState_class_initializer', '__hash__') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/literals.py', 'module_initializer', 'simple_escapes') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', '__author__') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', '__credits__') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', '__all__') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'bytes') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Whitespace') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Comment') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Ignore') [bool,,, str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Name') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Binnumber') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Hexnumber') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Octnumber') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Decnumber') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Intnumber') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Exponent') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Pointfloat') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Expfloat') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Floatnumber') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Imagnumber') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Number') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Single') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Double') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Single3') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Double3') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Triple') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'String') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Operator') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Bracket') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Special') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Funny') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'PlainToken') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'Token') [bool,,, str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'ContStr') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'PseudoExtras') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'PseudoToken') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'tokenprog') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'pseudoprog') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'single3prog') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'double3prog') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'endprogs') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'triple_quoted') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 't') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'single_quoted') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'tabsize') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'module_initializer', 'cookie_re') [re.compile('coding[:=]\\s*([-\\w.]+)')]
('/anaconda_lib/parso/pgen2/generator.py', 'DFAState_class_initializer', '__hash__') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'module_initializer', '__author__') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'module_initializer', '_PATTERN_GRAMMAR_FILE') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'module_initializer', 'TOKEN_MAP') [dict]
('/anaconda_lib/jedi/api/refactoring/extract.py', 'module_initializer', '_EXTRACT_USE_PARENT') []
('/anaconda_lib/jedi/api/refactoring/extract.py', 'module_initializer', '_DEFINITION_SCOPES') [tuple]
('/anaconda_lib/jedi/api/refactoring/extract.py', 'module_initializer', '_VARIABLE_EXCTRACTABLE') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/btm_matcher.py', 'module_initializer', '__author__') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/btm_matcher.py', 'module_initializer', '_type_reprs') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/btm_matcher.py', 'BMNode_class_initializer', 'count') [count(0)]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'module_initializer', '__author__') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'module_initializer', 'HUGE') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'module_initializer', '_type_reprs') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'Base_class_initializer', 'type') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'Base_class_initializer', 'parent') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'Base_class_initializer', 'children') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'Base_class_initializer', 'was_changed') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'Base_class_initializer', 'was_checked') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'Base_class_initializer', '__hash__') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'Node_class_initializer', 'prefix') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'Leaf_class_initializer', '_prefix') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'Leaf_class_initializer', 'lineno') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'Leaf_class_initializer', 'column') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'Leaf_class_initializer', 'prefix') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'BasePattern_class_initializer', 'type') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'BasePattern_class_initializer', 'content') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'BasePattern_class_initializer', 'name') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'NodePattern_class_initializer', 'wildcards') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_imports2.py', 'module_initializer', 'MAPPING') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_imports2.py', 'FixImports2_class_initializer', 'run_order') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_imports2.py', 'FixImports2_class_initializer', 'mapping') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_imports.py', 'module_initializer', 'MAPPING') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_imports.py', 'FixImports_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_imports.py', 'FixImports_class_initializer', 'keep_line_order') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_imports.py', 'FixImports_class_initializer', 'mapping') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_imports.py', 'FixImports_class_initializer', 'run_order') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_urllib.py', 'module_initializer', 'MAPPING') [dict]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'a_3') [list]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'a_4') [list]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'a_5') [list]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'a_6') [list]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'a_7') [list]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'a_8') [list]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'a_9') [list]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'a_10') [list]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'g_v') [list]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'g_v_WXY') [list]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'g_valid_LI') [list]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'B_Y_found') [bool]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'I_p2') [int]
('/anaconda_lib/snowballstemmer/english_stemmer.py', 'EnglishStemmer_class_initializer', 'I_p1') [int]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'a_3') [list]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'a_4') [list]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'a_5') [list]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'a_6') [list]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'a_7') [list]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'a_8') [list]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'a_9') [list]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'g_AEI') [list]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'g_V1') [list]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'g_V2') [list]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'g_particle_end') [list]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'B_ending_removed') [bool]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'S_x') [str]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'I_p2') [int]
('/anaconda_lib/snowballstemmer/finnish_stemmer.py', 'FinnishStemmer_class_initializer', 'I_p1') [int]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'a_3') [list]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'a_4') [list]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'a_5') [list]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'a_6') [list]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'a_7') [list]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'a_8') [list]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'a_9') [list]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'a_10') [list]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'a_11') [list]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'g_v') [list]
('/anaconda_lib/snowballstemmer/hungarian_stemmer.py', 'HungarianStemmer_class_initializer', 'I_p1') [int]
('/anaconda_lib/snowballstemmer/norwegian_stemmer.py', 'NorwegianStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/norwegian_stemmer.py', 'NorwegianStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/norwegian_stemmer.py', 'NorwegianStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/norwegian_stemmer.py', 'NorwegianStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/norwegian_stemmer.py', 'NorwegianStemmer_class_initializer', 'g_v') [list]
('/anaconda_lib/snowballstemmer/norwegian_stemmer.py', 'NorwegianStemmer_class_initializer', 'g_s_ending') [list]
('/anaconda_lib/snowballstemmer/norwegian_stemmer.py', 'NorwegianStemmer_class_initializer', 'I_x') [int]
('/anaconda_lib/snowballstemmer/norwegian_stemmer.py', 'NorwegianStemmer_class_initializer', 'I_p1') [int]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'a_3') [list]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'a_4') [list]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'a_5') [list]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'a_6') [list]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'a_7') [list]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'a_8') [list]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'g_v') [list]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'g_keep_with_s') [list]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'I_p2') [int]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'I_p1') [int]
('/anaconda_lib/snowballstemmer/french_stemmer.py', 'FrenchStemmer_class_initializer', 'I_pV') [int]
('/anaconda_lib/snowballstemmer/romanian_stemmer.py', 'RomanianStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/romanian_stemmer.py', 'RomanianStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/romanian_stemmer.py', 'RomanianStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/romanian_stemmer.py', 'RomanianStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/romanian_stemmer.py', 'RomanianStemmer_class_initializer', 'a_3') [list]
('/anaconda_lib/snowballstemmer/romanian_stemmer.py', 'RomanianStemmer_class_initializer', 'a_4') [list]
('/anaconda_lib/snowballstemmer/romanian_stemmer.py', 'RomanianStemmer_class_initializer', 'a_5') [list]
('/anaconda_lib/snowballstemmer/romanian_stemmer.py', 'RomanianStemmer_class_initializer', 'g_v') [list]
('/anaconda_lib/snowballstemmer/romanian_stemmer.py', 'RomanianStemmer_class_initializer', 'B_standard_suffix_removed') [bool]
('/anaconda_lib/snowballstemmer/romanian_stemmer.py', 'RomanianStemmer_class_initializer', 'I_p2') [int]
('/anaconda_lib/snowballstemmer/romanian_stemmer.py', 'RomanianStemmer_class_initializer', 'I_p1') [int]
('/anaconda_lib/snowballstemmer/romanian_stemmer.py', 'RomanianStemmer_class_initializer', 'I_pV') [int]
('/anaconda_lib/snowballstemmer/portuguese_stemmer.py', 'PortugueseStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/portuguese_stemmer.py', 'PortugueseStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/portuguese_stemmer.py', 'PortugueseStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/portuguese_stemmer.py', 'PortugueseStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/portuguese_stemmer.py', 'PortugueseStemmer_class_initializer', 'a_3') [list]
('/anaconda_lib/snowballstemmer/portuguese_stemmer.py', 'PortugueseStemmer_class_initializer', 'a_4') [list]
('/anaconda_lib/snowballstemmer/portuguese_stemmer.py', 'PortugueseStemmer_class_initializer', 'a_5') [list]
('/anaconda_lib/snowballstemmer/portuguese_stemmer.py', 'PortugueseStemmer_class_initializer', 'a_6') [list]
('/anaconda_lib/snowballstemmer/portuguese_stemmer.py', 'PortugueseStemmer_class_initializer', 'a_7') [list]
('/anaconda_lib/snowballstemmer/portuguese_stemmer.py', 'PortugueseStemmer_class_initializer', 'a_8') [list]
('/anaconda_lib/snowballstemmer/portuguese_stemmer.py', 'PortugueseStemmer_class_initializer', 'g_v') [list]
('/anaconda_lib/snowballstemmer/portuguese_stemmer.py', 'PortugueseStemmer_class_initializer', 'I_p2') [int]
('/anaconda_lib/snowballstemmer/portuguese_stemmer.py', 'PortugueseStemmer_class_initializer', 'I_p1') [int]
('/anaconda_lib/snowballstemmer/portuguese_stemmer.py', 'PortugueseStemmer_class_initializer', 'I_pV') [int]
('/anaconda_lib/snowballstemmer/russian_stemmer.py', 'RussianStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/russian_stemmer.py', 'RussianStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/russian_stemmer.py', 'RussianStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/russian_stemmer.py', 'RussianStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/russian_stemmer.py', 'RussianStemmer_class_initializer', 'a_3') [list]
('/anaconda_lib/snowballstemmer/russian_stemmer.py', 'RussianStemmer_class_initializer', 'a_4') [list]
('/anaconda_lib/snowballstemmer/russian_stemmer.py', 'RussianStemmer_class_initializer', 'a_5') [list]
('/anaconda_lib/snowballstemmer/russian_stemmer.py', 'RussianStemmer_class_initializer', 'a_6') [list]
('/anaconda_lib/snowballstemmer/russian_stemmer.py', 'RussianStemmer_class_initializer', 'a_7') [list]
('/anaconda_lib/snowballstemmer/russian_stemmer.py', 'RussianStemmer_class_initializer', 'g_v') [list]
('/anaconda_lib/snowballstemmer/russian_stemmer.py', 'RussianStemmer_class_initializer', 'I_p2') [int]
('/anaconda_lib/snowballstemmer/russian_stemmer.py', 'RussianStemmer_class_initializer', 'I_pV') [int]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'a_3') [list]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'a_4') [list]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'a_5') [list]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'a_6') [list]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'a_7') [list]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'g_v') [list]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'g_AEIO') [list]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'g_CG') [list]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'I_p2') [int]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'I_p1') [int]
('/anaconda_lib/snowballstemmer/italian_stemmer.py', 'ItalianStemmer_class_initializer', 'I_pV') [int]
('/anaconda_lib/snowballstemmer/danish_stemmer.py', 'DanishStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/danish_stemmer.py', 'DanishStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/danish_stemmer.py', 'DanishStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/danish_stemmer.py', 'DanishStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/danish_stemmer.py', 'DanishStemmer_class_initializer', 'g_v') [list]
('/anaconda_lib/snowballstemmer/danish_stemmer.py', 'DanishStemmer_class_initializer', 'g_s_ending') [list]
('/anaconda_lib/snowballstemmer/danish_stemmer.py', 'DanishStemmer_class_initializer', 'I_x') [int]
('/anaconda_lib/snowballstemmer/danish_stemmer.py', 'DanishStemmer_class_initializer', 'I_p1') [int]
('/anaconda_lib/snowballstemmer/danish_stemmer.py', 'DanishStemmer_class_initializer', 'S_ch') [str]
('/anaconda_lib/snowballstemmer/german_stemmer.py', 'GermanStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/german_stemmer.py', 'GermanStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/german_stemmer.py', 'GermanStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/german_stemmer.py', 'GermanStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/german_stemmer.py', 'GermanStemmer_class_initializer', 'a_3') [list]
('/anaconda_lib/snowballstemmer/german_stemmer.py', 'GermanStemmer_class_initializer', 'a_4') [list]
('/anaconda_lib/snowballstemmer/german_stemmer.py', 'GermanStemmer_class_initializer', 'g_v') [list]
('/anaconda_lib/snowballstemmer/german_stemmer.py', 'GermanStemmer_class_initializer', 'g_s_ending') [list]
('/anaconda_lib/snowballstemmer/german_stemmer.py', 'GermanStemmer_class_initializer', 'g_st_ending') [list]
('/anaconda_lib/snowballstemmer/german_stemmer.py', 'GermanStemmer_class_initializer', 'I_x') [int]
('/anaconda_lib/snowballstemmer/german_stemmer.py', 'GermanStemmer_class_initializer', 'I_p2') [int]
('/anaconda_lib/snowballstemmer/german_stemmer.py', 'GermanStemmer_class_initializer', 'I_p1') [int]
('/anaconda_lib/snowballstemmer/dutch_stemmer.py', 'DutchStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/dutch_stemmer.py', 'DutchStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/dutch_stemmer.py', 'DutchStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/dutch_stemmer.py', 'DutchStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/dutch_stemmer.py', 'DutchStemmer_class_initializer', 'a_3') [list]
('/anaconda_lib/snowballstemmer/dutch_stemmer.py', 'DutchStemmer_class_initializer', 'a_4') [list]
('/anaconda_lib/snowballstemmer/dutch_stemmer.py', 'DutchStemmer_class_initializer', 'a_5') [list]
('/anaconda_lib/snowballstemmer/dutch_stemmer.py', 'DutchStemmer_class_initializer', 'g_v') [list]
('/anaconda_lib/snowballstemmer/dutch_stemmer.py', 'DutchStemmer_class_initializer', 'g_v_I') [list]
('/anaconda_lib/snowballstemmer/dutch_stemmer.py', 'DutchStemmer_class_initializer', 'g_v_j') [list]
('/anaconda_lib/snowballstemmer/dutch_stemmer.py', 'DutchStemmer_class_initializer', 'I_p2') [int]
('/anaconda_lib/snowballstemmer/dutch_stemmer.py', 'DutchStemmer_class_initializer', 'I_p1') [int]
('/anaconda_lib/snowballstemmer/dutch_stemmer.py', 'DutchStemmer_class_initializer', 'B_e_found') [bool]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'a_3') [list]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'a_4') [list]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'a_5') [list]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'a_6') [list]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'a_7') [list]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'a_8') [list]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'a_9') [list]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'g_v') [list]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'I_p2') [int]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'I_p1') [int]
('/anaconda_lib/snowballstemmer/spanish_stemmer.py', 'SpanishStemmer_class_initializer', 'I_pV') [int]
('/anaconda_lib/snowballstemmer/porter_stemmer.py', 'PorterStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/porter_stemmer.py', 'PorterStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/porter_stemmer.py', 'PorterStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/porter_stemmer.py', 'PorterStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/porter_stemmer.py', 'PorterStemmer_class_initializer', 'a_3') [list]
('/anaconda_lib/snowballstemmer/porter_stemmer.py', 'PorterStemmer_class_initializer', 'a_4') [list]
('/anaconda_lib/snowballstemmer/porter_stemmer.py', 'PorterStemmer_class_initializer', 'a_5') [list]
('/anaconda_lib/snowballstemmer/porter_stemmer.py', 'PorterStemmer_class_initializer', 'g_v') [list]
('/anaconda_lib/snowballstemmer/porter_stemmer.py', 'PorterStemmer_class_initializer', 'g_v_WXY') [list]
('/anaconda_lib/snowballstemmer/porter_stemmer.py', 'PorterStemmer_class_initializer', 'B_Y_found') [bool]
('/anaconda_lib/snowballstemmer/porter_stemmer.py', 'PorterStemmer_class_initializer', 'I_p2') [int]
('/anaconda_lib/snowballstemmer/porter_stemmer.py', 'PorterStemmer_class_initializer', 'I_p1') [int]
('/anaconda_lib/snowballstemmer/swedish_stemmer.py', 'SwedishStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/swedish_stemmer.py', 'SwedishStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/swedish_stemmer.py', 'SwedishStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/swedish_stemmer.py', 'SwedishStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/swedish_stemmer.py', 'SwedishStemmer_class_initializer', 'g_v') [list]
('/anaconda_lib/snowballstemmer/swedish_stemmer.py', 'SwedishStemmer_class_initializer', 'g_s_ending') [list]
('/anaconda_lib/snowballstemmer/swedish_stemmer.py', 'SwedishStemmer_class_initializer', 'I_x') [int]
('/anaconda_lib/snowballstemmer/swedish_stemmer.py', 'SwedishStemmer_class_initializer', 'I_p1') [int]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'serialVersionUID') [int]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_0') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_1') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_2') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_3') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_4') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_5') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_6') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_7') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_8') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_9') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_10') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_11') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_12') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_13') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_14') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_15') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_16') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_17') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_18') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_19') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_20') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_21') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_22') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'a_23') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'g_vowel') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'g_U') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'g_vowel1') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'g_vowel2') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'g_vowel3') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'g_vowel4') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'g_vowel5') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'g_vowel6') [list]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'B_continue_stemming_noun_suffixes') [bool]
('/anaconda_lib/snowballstemmer/turkish_stemmer.py', 'TurkishStemmer_class_initializer', 'I_strlen') [int]
('/anaconda_lib/workers/market.py', 'Market_class_initializer', '_worker_pool') [dict]
('/anaconda_lib/workers/market.py', 'Market_class_initializer', '_lock') []
('/anaconda_lib/workers/market.py', 'Market_class_initializer', '_workers_type') [dict]
('/anaconda_lib/worker.py', 'module_initializer', '__all__') [list]
('/anaconda_lib/workers/process.py', 'WorkerProcess_class_initializer', '_processers') [dict]
('/anaconda_lib/parso/tree.py', 'NodeOrLeaf_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/tree.py', 'NodeOrLeaf_class_initializer', 'type') [None]
('/anaconda_lib/parso/tree.py', 'Leaf_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/tree.py', 'TypedLeaf_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/tree.py', 'BaseNode_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/tree.py', 'BaseNode_class_initializer', 'type') [None]
('/anaconda_lib/parso/tree.py', 'Node_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/tree.py', 'ErrorNode_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/tree.py', 'ErrorNode_class_initializer', 'type') [str]
('/anaconda_lib/parso/tree.py', 'ErrorLeaf_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/tree.py', 'ErrorLeaf_class_initializer', 'type') [str]
('/anaconda_lib/parso/cache.py', 'module_initializer', 'LOG') [<Logger pt_engine.utils.base (DEBUG)>,,, <Logger pt_engine.utils.base (WARNING)>]
('/anaconda_lib/parso/cache.py', 'module_initializer', '_CACHED_FILE_MINIMUM_SURVIVAL') [int]
('/anaconda_lib/parso/cache.py', 'module_initializer', '_CACHED_SIZE_TRIGGER') [int]
('/anaconda_lib/parso/cache.py', 'module_initializer', '_PICKLE_VERSION') [int]
('/anaconda_lib/parso/cache.py', 'module_initializer', '_VERSION_TAG') [str,,, tuple]
('/anaconda_lib/parso/cache.py', 'module_initializer', '_default_cache_path') [str]
('/anaconda_lib/parso/cache.py', 'module_initializer', 'parser_cache') [dict]
('/anaconda_lib/parso/normalizer.py', 'Normalizer_class_initializer', '_rule_type_instances') [dict]
('/anaconda_lib/parso/normalizer.py', 'Normalizer_class_initializer', '_rule_value_instances') [dict]
('/anaconda_lib/parso/normalizer.py', 'NormalizerConfig_class_initializer', 'normalizer_class') [Normalizer]
('/anaconda_lib/parso/normalizer.py', 'Rule_class_initializer', 'code') [None]
('/anaconda_lib/parso/normalizer.py', 'Rule_class_initializer', 'message') [None]
('/anaconda_lib/parso/python/prefix.py', 'module_initializer', 'unicode_bom') [str]
('/anaconda_lib/parso/python/prefix.py', 'module_initializer', '_comment') [str]
('/anaconda_lib/parso/python/prefix.py', 'module_initializer', '_backslash') [str]
('/anaconda_lib/parso/python/prefix.py', 'module_initializer', '_newline') [str]
('/anaconda_lib/parso/python/prefix.py', 'module_initializer', '_form_feed') [str]
('/anaconda_lib/parso/python/prefix.py', 'module_initializer', '_only_spacing') [str]
('/anaconda_lib/parso/python/prefix.py', 'module_initializer', '_spacing') [str]
('/anaconda_lib/parso/python/prefix.py', 'module_initializer', '_bom') [str]
('/anaconda_lib/parso/python/prefix.py', 'module_initializer', '_regex') []
('/anaconda_lib/parso/python/prefix.py', 'module_initializer', '_types') [dict]
('/anaconda_lib/parso/python/tree.py', 'module_initializer', '_FLOW_CONTAINERS') [set]
('/anaconda_lib/parso/python/tree.py', 'module_initializer', '_RETURN_STMT_CONTAINERS') [set]
('/anaconda_lib/parso/python/tree.py', 'module_initializer', '_FUNC_CONTAINERS') [set]
('/anaconda_lib/parso/python/tree.py', 'module_initializer', '_GET_DEFINITION_TYPES') [set]
('/anaconda_lib/parso/python/tree.py', 'module_initializer', '_IMPORTS') [set]
('/anaconda_lib/parso/python/tree.py', 'module_initializer', 'CompFor') [SyncCompFor]
('/anaconda_lib/parso/python/tree.py', 'DocstringMixin_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'PythonMixin_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'PythonLeaf_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', '_LeafWithoutNewlines_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'PythonBaseNode_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'PythonNode_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'PythonErrorNode_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'PythonErrorLeaf_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'EndMarker_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'EndMarker_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'Newline_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'Newline_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'Name_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'Name_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'Literal_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'Number_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'Number_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'String_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'String_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'FStringString_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'FStringString_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'FStringStart_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'FStringStart_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'FStringEnd_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'FStringEnd_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'Operator_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'Operator_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'Keyword_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'Keyword_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'Scope_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'Module_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'Module_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'Decorator_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'Decorator_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'ClassOrFunc_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'Class_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'Class_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'Function_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'Lambda_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'Lambda_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'Flow_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'IfStmt_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'IfStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'WhileStmt_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'WhileStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'ForStmt_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'ForStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'TryStmt_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'TryStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'WithStmt_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'WithStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'Import_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'ImportFrom_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'ImportFrom_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'ImportName_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'ImportName_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'KeywordStatement_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'AssertStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'GlobalStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'ReturnStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'YieldExpr_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'YieldExpr_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'ExprStmt_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'ExprStmt_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/tree.py', 'Param_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'SyncCompFor_class_initializer', 'type') [str]
('/anaconda_lib/parso/python/tree.py', 'SyncCompFor_class_initializer', '__slots__') [tuple]
('/anaconda_lib/parso/python/token.py', 'module_initializer', 'PythonTokenTypes') [TokenTypes]
('/anaconda_lib/parso/python/pep8.py', 'module_initializer', '_IMPORT_TYPES') [tuple]
('/anaconda_lib/parso/python/pep8.py', 'module_initializer', '_SUITE_INTRODUCERS') [tuple]
('/anaconda_lib/parso/python/pep8.py', 'module_initializer', '_NON_STAR_TYPES') [tuple]
('/anaconda_lib/parso/python/pep8.py', 'module_initializer', '_OPENING_BRACKETS') [tuple]
('/anaconda_lib/parso/python/pep8.py', 'module_initializer', '_CLOSING_BRACKETS') [tuple]
('/anaconda_lib/parso/python/pep8.py', 'module_initializer', '_FACTOR') [tuple]
('/anaconda_lib/parso/python/pep8.py', 'module_initializer', '_ALLOW_SPACE') [tuple]
('/anaconda_lib/parso/python/pep8.py', 'module_initializer', '_BITWISE_OPERATOR') [tuple]
('/anaconda_lib/parso/python/pep8.py', 'module_initializer', '_NEEDS_SPACE') [tuple]
('/anaconda_lib/parso/python/pep8.py', 'module_initializer', '_IMPLICIT_INDENTATION_TYPES') [tuple]
('/anaconda_lib/parso/python/pep8.py', 'module_initializer', '_POSSIBLE_SLICE_PARENTS') [tuple]
('/anaconda_lib/parso/python/pep8.py', 'IndentationTypes_class_initializer', 'VERTICAL_BRACKET') [<object object at 0x10a3bdfc0>,,, <object object at 0x10a40ddf0>,,, <object object at 0x10acba250>,,, <object object at 0x10af31f30>,,, <object object at 0x10b09c5a0>,,, <object object at 0x10bfd62c0>,,, <object object at 0x10ce7a090>,,, <object object at 0x10d6ea0c0>,,, <object object at 0x10d843070>,,, <object object at 0x10dac60a0>,,, <object object at 0x10f59a1c0>,,, <object object at 0x10fbe98a0>,,, <object object at 0x110111c40>,,, <object object at 0x110416130>,,, <object object at 0x1104ca1c0>,,, <object object at 0x110a361e0>,,, <object object at 0x110a62eb0>,,, <object object at 0x110d0a140>,,, <object object at 0x1164d8310>]
('/anaconda_lib/parso/python/pep8.py', 'IndentationTypes_class_initializer', 'HANGING_BRACKET') [<object object at 0x10a3be000>,,, <object object at 0x10a40de30>,,, <object object at 0x10acba280>,,, <object object at 0x10af31f70>,,, <object object at 0x10b09c5e0>,,, <object object at 0x10bfd6300>,,, <object object at 0x10ce7a0d0>,,, <object object at 0x10d6ea100>,,, <object object at 0x10d8430b0>,,, <object object at 0x10dac60e0>,,, <object object at 0x10f59a200>,,, <object object at 0x10fbe98e0>,,, <object object at 0x110111c80>,,, <object object at 0x110416170>,,, <object object at 0x1104ca200>,,, <object object at 0x110a36220>,,, <object object at 0x110a62ef0>,,, <object object at 0x110d0a180>,,, <object object at 0x1164d8350>]
('/anaconda_lib/parso/python/pep8.py', 'IndentationTypes_class_initializer', 'BACKSLASH') [<object object at 0x10a3be020>,,, <object object at 0x10a40de50>,,, <object object at 0x10acba200>,,, <object object at 0x10af31f90>,,, <object object at 0x10b09c600>,,, <object object at 0x10bfd6320>,,, <object object at 0x10ce7a0f0>,,, <object object at 0x10d6ea120>,,, <object object at 0x10d8430d0>,,, <object object at 0x10dac6100>,,, <object object at 0x10f59a220>,,, <object object at 0x10fbe9900>,,, <object object at 0x110111ca0>,,, <object object at 0x110416190>,,, <object object at 0x1104ca220>,,, <object object at 0x110a36240>,,, <object object at 0x110a62f10>,,, <object object at 0x110d0a1a0>,,, <object object at 0x1164d8370>]
('/anaconda_lib/parso/python/pep8.py', 'IndentationTypes_class_initializer', 'SUITE') [<object object at 0x10a3be050>,,, <object object at 0x10a40de80>,,, <object object at 0x10acba3f0>,,, <object object at 0x10af31fc0>,,, <object object at 0x10b09c630>,,, <object object at 0x10bfd6350>,,, <object object at 0x10ce7a120>,,, <object object at 0x10d6ea150>,,, <object object at 0x10d843100>,,, <object object at 0x10dac6130>,,, <object object at 0x10f59a250>,,, <object object at 0x10fbe9930>,,, <object object at 0x110111cd0>,,, <object object at 0x1104161c0>,,, <object object at 0x1104ca250>,,, <object object at 0x110a36270>,,, <object object at 0x110a62f40>,,, <object object at 0x110d0a1d0>,,, <object object at 0x1164d83a0>]
('/anaconda_lib/parso/python/pep8.py', 'IndentationTypes_class_initializer', 'IMPLICIT') [<object object at 0x10a3be080>,,, <object object at 0x10a40deb0>,,, <object object at 0x10acba400>,,, <object object at 0x10af31ff0>,,, <object object at 0x10b09c660>,,, <object object at 0x10bfd6380>,,, <object object at 0x10ce7a150>,,, <object object at 0x10d6ea180>,,, <object object at 0x10d843130>,,, <object object at 0x10dac6160>,,, <object object at 0x10f59a280>,,, <object object at 0x10fbe9960>,,, <object object at 0x110111d00>,,, <object object at 0x1104161f0>,,, <object object at 0x1104ca280>,,, <object object at 0x110a362a0>,,, <object object at 0x110a62f70>,,, <object object at 0x110d0a200>,,, <object object at 0x1164d83d0>]
('/anaconda_lib/parso/python/pep8.py', 'IndentationNode_class_initializer', 'type') []
('/anaconda_lib/parso/python/pep8.py', 'BackslashNode_class_initializer', 'type') []
('/anaconda_lib/parso/python/pep8.py', 'PEP8NormalizerConfig_class_initializer', 'normalizer_class') [PEP8Normalizer]
('/anaconda_lib/parso/python/pep8.py', 'BlankLineAtEnd_class_initializer', 'code') [int]
('/anaconda_lib/parso/python/pep8.py', 'BlankLineAtEnd_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/diff.py', 'module_initializer', 'LOG') [<Logger pt_engine.utils.base (DEBUG)>,,, <Logger pt_engine.utils.base (WARNING)>]
('/anaconda_lib/parso/python/diff.py', 'module_initializer', 'DEBUG_DIFF_PARSER') [bool]
('/anaconda_lib/parso/python/diff.py', 'module_initializer', '_INDENTATION_TOKENS') [tuple]
('/anaconda_lib/parso/python/diff.py', 'module_initializer', 'NEWLINE') []
('/anaconda_lib/parso/python/diff.py', 'module_initializer', 'DEDENT') []
('/anaconda_lib/parso/python/diff.py', 'module_initializer', 'NAME') []
('/anaconda_lib/parso/python/diff.py', 'module_initializer', 'ERROR_DEDENT') []
('/anaconda_lib/parso/python/diff.py', 'module_initializer', 'ENDMARKER') []
('/anaconda_lib/parso/python/diff.py', '_NodesTreeNode_class_initializer', '_ChildrenGroup') [pt_engine.utils.base._ChildrenGroup]
('/anaconda_lib/parso/python/errors.py', 'module_initializer', '_BLOCK_STMTS') [tuple]
('/anaconda_lib/parso/python/errors.py', 'module_initializer', '_STAR_EXPR_PARENTS') [tuple]
('/anaconda_lib/parso/python/errors.py', 'module_initializer', '_MAX_BLOCK_SIZE') [int]
('/anaconda_lib/parso/python/errors.py', 'module_initializer', '_MAX_INDENT_COUNT') [int]
('/anaconda_lib/parso/python/errors.py', 'module_initializer', 'ALLOWED_FUTURES') [tuple]
('/anaconda_lib/parso/python/errors.py', 'module_initializer', '_COMP_FOR_TYPES') [tuple]
('/anaconda_lib/parso/python/errors.py', 'IndentationRule_class_initializer', 'code') [int]
('/anaconda_lib/parso/python/errors.py', '_ExpectIndentedBlock_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', 'ErrorFinderConfig_class_initializer', 'normalizer_class') [ErrorFinder]
('/anaconda_lib/parso/python/errors.py', 'SyntaxRule_class_initializer', 'code') [int]
('/anaconda_lib/parso/python/errors.py', '_InvalidSyntaxRule_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_AwaitOutsideAsync_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_BreakOutsideLoop_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_ContinueChecks_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_ContinueChecks_class_initializer', 'message_in_finally') [str]
('/anaconda_lib/parso/python/errors.py', '_YieldFromCheck_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_NameChecks_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_NameChecks_class_initializer', 'message_none') [str]
('/anaconda_lib/parso/python/errors.py', '_StringChecks_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_StarCheck_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_StarStarCheck_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_ReturnAndYieldChecks_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_ReturnAndYieldChecks_class_initializer', 'message_async_yield') [str]
('/anaconda_lib/parso/python/errors.py', '_BytesAndStringMix_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_TrailingImportComma_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_ImportStarInFunction_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_FutureImportRule_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_StarExprRule_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_StarExprRule_class_initializer', 'message_iterable_unpacking') [str]
('/anaconda_lib/parso/python/errors.py', '_StarExprRule_class_initializer', 'message_assignment') [str]
('/anaconda_lib/parso/python/errors.py', '_AnnotatorRule_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_NonlocalModuleLevelRule_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_ParameterRule_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_TryStmtRule_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_FStringRule_class_initializer', '_fstring_grammar') [None]
('/anaconda_lib/parso/python/errors.py', '_FStringRule_class_initializer', 'message_expr') [str]
('/anaconda_lib/parso/python/errors.py', '_FStringRule_class_initializer', 'message_nested') [str]
('/anaconda_lib/parso/python/errors.py', '_FStringRule_class_initializer', 'message_conversion') [str]
('/anaconda_lib/parso/python/errors.py', '_CompForRule_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/errors.py', '_ExprStmtRule_class_initializer', 'message') [str]
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'MAX_UNICODE') [str]
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'STRING') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'NAME') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'NUMBER') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'OP') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'NEWLINE') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'INDENT') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'DEDENT') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'ENDMARKER') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'ERRORTOKEN') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'ERROR_DEDENT') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'FSTRING_START') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'FSTRING_STRING') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'FSTRING_END') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'TokenCollection') [pt_engine.utils.base.TokenCollection]
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'BOM_UTF8_STRING') [str]
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', '_token_collection_cache') [dict]
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'is_identifier') [<method 'isidentifier' of 'str' objects>]
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'fstring_string_single_line') [re.compile('[^{}]+', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE)]
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'fstring_string_multi_line') [re.compile('[^{}]+', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE)]
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'fstring_format_spec_single_line') [re.compile('[^{}]+', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE)]
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'fstring_format_spec_multi_line') [re.compile('[^{}]+', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE)]
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'path') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'code') []
('/anaconda_lib/parso/python/tokenize.py', 'module_initializer', 'token') []
('/anaconda_lib/parso/_compatibility.py', 'module_initializer', 'unicode') [str]
('/anaconda_lib/parso/_compatibility.py', 'module_initializer', 'is_pypy') [bool]
('/anaconda_lib/parso/_compatibility.py', 'module_initializer', 'encoding') [str]
('/anaconda_lib/parso/_compatibility.py', 'module_initializer', 'FileNotFoundError') [FileNotFoundError,,, OSError]
('/anaconda_server/lib/compat/python2.py', 'AnacondaHandlerProvider_class_initializer', '__metaclass__') [AnacondaHandlerMeta]
('/anaconda_server/lib/compat/__init__.py', 'module_initializer', '__all__') [list]
('/anaconda_server/lib/registry.py', 'HandlerRegistry_class_initializer', 'initialized') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_basestring.py', 'FixBasestring_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_basestring.py', 'FixBasestring_class_initializer', 'PATTERN') [str]
('/anaconda_server/commands/autocomplete.py', 'module_initializer', 'DEBUG_MODE') [bool]
('/anaconda_server/handlers/python_lint_handler.py', 'module_initializer', 'PYLINT_AVAILABLE') [bool]
('/anaconda_server/handlers/jedi_handler.py', 'module_initializer', 'logger') [<RootLogger root (DEBUG)>,,, <RootLogger root (WARNING)>]
('/commands/goto.py', 'AnacondaGoto_class_initializer', 'JEDI_COMMAND') [str]
('/commands/goto.py', 'AnacondaGotoAssignment_class_initializer', 'JEDI_COMMAND') [str]
('/commands/vagrant.py', 'AnacondaVagrantBase_class_initializer', 'data') [None]
('/commands/vagrant.py', 'AnacondaVagrantStatus_class_initializer', 'data') [None]
('/commands/test_runner.py', 'module_initializer', 'DEFAULT_TEST_COMMAND') [str]
('/commands/test_runner.py', 'module_initializer', 'TEST_INCLUDE_FULL_PATH') [bool]
('/commands/test_runner.py', 'module_initializer', 'TEST_DELIMETER') [str]
('/commands/test_runner.py', 'module_initializer', 'TB_FILE') [str]
('/commands/test_runner.py', 'module_initializer', 'COMMAND_SEPARATOR') [str]
('/commands/test_runner.py', 'module_initializer', 'TEST_PARAMS') [dict]
('/anaconda.py', 'module_initializer', 'DISABLED_PLUGINS') [list]
('/anaconda.py', 'module_initializer', 'LOOP_RUNNING') [bool]
('/anaconda.py', 'module_initializer', 'logger') [<Logger pt_engine.utils.base (DEBUG)>]
('/version.py', 'module_initializer', 'messages_json') [str]
('/version.py', 'module_initializer', 'message_data') []
('/version.py', 'module_initializer', 'ver') []
('/version.py', 'module_initializer', 'i') []
('/version.py', 'module_initializer', 'version') [tuple]
('/anaconda_lib/constants.py', 'WorkerStatus_class_initializer', 'incomplete') [int]
('/anaconda_lib/constants.py', 'WorkerStatus_class_initializer', 'healthy') [int]
('/anaconda_lib/constants.py', 'WorkerStatus_class_initializer', 'faulty') [int]
('/anaconda_lib/constants.py', 'WorkerStatus_class_initializer', 'quiting') [int]
('/anaconda_lib/helpers.py', 'module_initializer', 'git_installation') [bool]
('/anaconda_lib/helpers.py', 'module_initializer', 'NONE') [int]
('/anaconda_lib/helpers.py', 'module_initializer', 'ONLY_CODE') [int]
('/anaconda_lib/helpers.py', 'module_initializer', 'NOT_SCRATCH') [int]
('/anaconda_lib/helpers.py', 'module_initializer', 'LINTING_ENABLED') [int]
('/anaconda_lib/helpers.py', 'module_initializer', 'ENVIRON_HOOK_INVALID') [defaultdict(<function <lambda> at 0x10a3731c0>, {}),,, defaultdict(<function <lambda> at 0x115766290>, {})]
('/anaconda_lib/helpers.py', 'module_initializer', 'AUTO_COMPLETION_DOT_VIEWS') [list]
('/anaconda_lib/decorators.py', 'module_initializer', 'CPROFILE_AVAILABLE') [bool]
('/anaconda_lib/linting/sublime.py', 'module_initializer', 'sublime_api') []
('/anaconda_lib/linting/sublime.py', 'module_initializer', 'ANACONDA') [dict]
('/anaconda_lib/linting/sublime.py', 'module_initializer', 'marks') [dict]
('/anaconda_lib/linting/pydocstyle/wordlists.py', 'module_initializer', 'COMMENT_RE') [re.compile('\\s*#.*')]
('/anaconda_lib/linting/pydocstyle/wordlists.py', 'module_initializer', 'stem') []
('/anaconda_lib/linting/pydocstyle/wordlists.py', 'module_initializer', 'v') []
('/anaconda_lib/linting/pydocstyle/wordlists.py', 'module_initializer', 'IMPERATIVE_VERBS') [dict]
('/anaconda_lib/linting/pydocstyle/wordlists.py', 'module_initializer', 'IMPERATIVE_BLACKLIST') []
('/anaconda_lib/linting/pydocstyle/utils.py', 'module_initializer', '__version__') [str]
('/anaconda_lib/linting/pydocstyle/utils.py', 'module_initializer', 'log') [<Logger pt_engine.utils.base (DEBUG)>]
('/anaconda_lib/linting/pydocstyle/__main__.py', 'module_initializer', '__all__') [tuple]
('/anaconda_lib/linting/pyflakes/__init__.py', 'module_initializer', '__version__') [str]
('/anaconda_lib/jedi/cache.py', 'module_initializer', '_time_caches') [dict]
('/anaconda_lib/jedi/__init__.py', 'module_initializer', '__version__') [str]
('/anaconda_lib/jedi/utils.py', 'module_initializer', 'READLINE_DEBUG') [bool]
('/anaconda_lib/jedi/settings.py', 'module_initializer', 'case_insensitive_completion') [bool]
('/anaconda_lib/jedi/settings.py', 'module_initializer', 'add_bracket_after_function') [bool]
('/anaconda_lib/jedi/settings.py', 'module_initializer', '_cache_directory') [str]
('/anaconda_lib/jedi/settings.py', 'module_initializer', 'cache_directory') [str]
('/anaconda_lib/jedi/settings.py', 'module_initializer', 'fast_parser') [bool]
('/anaconda_lib/jedi/settings.py', 'module_initializer', '_cropped_file_size') [float]
('/anaconda_lib/jedi/settings.py', 'module_initializer', 'dynamic_array_additions') [bool]
('/anaconda_lib/jedi/settings.py', 'module_initializer', 'dynamic_params') [bool]
('/anaconda_lib/jedi/settings.py', 'module_initializer', 'dynamic_params_for_other_modules') [bool]
('/anaconda_lib/jedi/settings.py', 'module_initializer', 'dynamic_flow_information') [bool]
('/anaconda_lib/jedi/settings.py', 'module_initializer', 'auto_import_modules') [list]
('/anaconda_lib/jedi/settings.py', 'module_initializer', 'call_signatures_validity') [float]
('/anaconda_lib/jedi/evaluate/docstrings.py', 'module_initializer', 'DOCSTRING_PARAM_PATTERNS') [list]
('/anaconda_lib/jedi/evaluate/docstrings.py', 'module_initializer', 'DOCSTRING_RETURN_PATTERNS') [list]
('/anaconda_lib/jedi/evaluate/docstrings.py', 'module_initializer', 'REST_ROLE_PATTERN') [re.compile(':[^`]+:`([^`]+)`')]
('/anaconda_lib/jedi/evaluate/pep0484.py', 'module_initializer', '_typing_module') [None]
('/anaconda_lib/jedi/evaluate/precedence.py', 'module_initializer', 'COMPARISON_OPERATORS') [dict]
('/anaconda_lib/jedi/evaluate/compiled/getattr_static.py', 'module_initializer', '_sentinel') [<object object at 0x10a7b42e0>,,, <object object at 0x115be0060>]
('/anaconda_lib/jedi/evaluate/compiled/getattr_static.py', 'module_initializer', '_shadowed_dict') [meta_func]
('/anaconda_lib/jedi/evaluate/compiled/getattr_static.py', 'module_initializer', '_get_type') [type]
('/anaconda_lib/jedi/evaluate/compiled/getattr_static.py', 'module_initializer', '_static_getmro') [meta_func]
('/anaconda_lib/jedi/evaluate/compiled/getattr_static.py', 'module_initializer', '_oldstyle_instance_type') []
('/anaconda_lib/jedi/evaluate/compiled/getattr_static.py', 'module_initializer', '_oldstyle_class_type') []
('/anaconda_lib/jedi/api/completion_cache.py', 'module_initializer', '_cache') [dict]
('/anaconda_lib/jedi/api/completion_cache.py', 'module_initializer', 'get_type') [meta_func]
('/anaconda_lib/jedi/api/completion_cache.py', 'module_initializer', 'get_docstring_signature') [meta_func]
('/anaconda_lib/jedi/api/completion_cache.py', 'module_initializer', 'get_docstring') [meta_func]
('/anaconda_lib/jedi/inference/sys_path.py', 'module_initializer', '_BUILDOUT_PATH_INSERTION_LIMIT') [int]
('/anaconda_lib/jedi/inference/references.py', 'module_initializer', '_IGNORE_FOLDERS') [tuple]
('/anaconda_lib/jedi/inference/references.py', 'module_initializer', '_OPENED_FILE_LIMIT') [int]
('/anaconda_lib/jedi/inference/references.py', 'module_initializer', '_PARSED_FILE_LIMIT') [int]
('/anaconda_lib/jedi/inference/docstrings.py', 'module_initializer', 'DOCSTRING_PARAM_PATTERNS') [list]
('/anaconda_lib/jedi/inference/docstrings.py', 'module_initializer', 'DOCSTRING_RETURN_PATTERNS') [list]
('/anaconda_lib/jedi/inference/docstrings.py', 'module_initializer', 'REST_ROLE_PATTERN') [re.compile(':[^`]+:`([^`]+)`')]
('/anaconda_lib/jedi/inference/docstrings.py', 'module_initializer', '_numpy_doc_string_cache') [None]
('/anaconda_lib/jedi/inference/dynamic_params.py', 'module_initializer', 'MAX_PARAM_SEARCHES') [int]
('/anaconda_lib/jedi/inference/gradual/typeshed.py', 'module_initializer', '_jedi_path') [str]
('/anaconda_lib/jedi/inference/gradual/typeshed.py', 'module_initializer', 'TYPESHED_PATH') [str]
('/anaconda_lib/jedi/inference/gradual/typeshed.py', 'module_initializer', 'DJANGO_INIT_PATH') [str]
('/anaconda_lib/jedi/inference/gradual/typeshed.py', 'module_initializer', '_IMPORT_MAP') [dict]
('/anaconda_lib/jedi/inference/gradual/typeshed.py', 'module_initializer', '_version_cache') [dict]
('/anaconda_lib/jedi/inference/compiled/getattr_static.py', 'module_initializer', '_sentinel') [<object object at 0x10a7b5590>,,, <object object at 0x115be1300>]
('/anaconda_lib/jedi/inference/compiled/getattr_static.py', 'module_initializer', '_shadowed_dict') [meta_func]
('/anaconda_lib/jedi/inference/compiled/getattr_static.py', 'module_initializer', '_get_type') [type]
('/anaconda_lib/jedi/inference/compiled/getattr_static.py', 'module_initializer', '_static_getmro') [meta_func]
('/anaconda_lib/jedi/inference/compiled/getattr_static.py', 'module_initializer', '_oldstyle_instance_type') []
('/anaconda_lib/jedi/inference/compiled/getattr_static.py', 'module_initializer', '_oldstyle_class_type') []
('/anaconda_lib/autopep/__init__.py', 'module_initializer', '__all__') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_util.py', 'module_initializer', 'consuming_calls') [set]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_util.py', 'module_initializer', 'p0') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_util.py', 'module_initializer', 'p1') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_util.py', 'module_initializer', 'p2') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_util.py', 'module_initializer', 'pats_built') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_util.py', 'module_initializer', '_def_syms') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixer_util.py', 'module_initializer', '_block_syms') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_throw.py', 'FixThrow_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_throw.py', 'FixThrow_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_print.py', 'module_initializer', 'parend_expr') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_print.py', 'FixPrint_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_print.py', 'FixPrint_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_callable.py', 'FixCallable_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_callable.py', 'FixCallable_class_initializer', 'order') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_callable.py', 'FixCallable_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_input.py', 'module_initializer', 'context') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_input.py', 'FixInput_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_input.py', 'FixInput_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_buffer.py', 'FixBuffer_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_buffer.py', 'FixBuffer_class_initializer', 'explicit') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_buffer.py', 'FixBuffer_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_paren.py', 'FixParen_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_paren.py', 'FixParen_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_exec.py', 'FixExec_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_exec.py', 'FixExec_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_filter.py', 'FixFilter_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_filter.py', 'FixFilter_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_filter.py', 'FixFilter_class_initializer', 'skip_on') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_unicode.py', 'module_initializer', '_mapping') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_unicode.py', 'module_initializer', '_literal_re') [re.compile('[uU][rR]?[\\\'\\"]')]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_unicode.py', 'FixUnicode_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_unicode.py', 'FixUnicode_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_ne.py', 'FixNe_class_initializer', '_accept_type') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_nonzero.py', 'FixNonzero_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_nonzero.py', 'FixNonzero_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_sys_exc.py', 'FixSysExc_class_initializer', 'exc_info') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_sys_exc.py', 'FixSysExc_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_sys_exc.py', 'FixSysExc_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_zip.py', 'FixZip_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_zip.py', 'FixZip_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_zip.py', 'FixZip_class_initializer', 'skip_on') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_map.py', 'FixMap_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_map.py', 'FixMap_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_map.py', 'FixMap_class_initializer', 'skip_on') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_metaclass.py', 'FixMetaclass_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_metaclass.py', 'FixMetaclass_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_except.py', 'FixExcept_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_except.py', 'FixExcept_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_apply.py', 'FixApply_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_apply.py', 'FixApply_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_set_literal.py', 'FixSetLiteral_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_set_literal.py', 'FixSetLiteral_class_initializer', 'explicit') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_set_literal.py', 'FixSetLiteral_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_getcwdu.py', 'FixGetcwdu_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_getcwdu.py', 'FixGetcwdu_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_future.py', 'FixFuture_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_future.py', 'FixFuture_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_future.py', 'FixFuture_class_initializer', 'run_order') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_operator.py', 'FixOperator_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_operator.py', 'FixOperator_class_initializer', 'order') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_operator.py', 'FixOperator_class_initializer', 'methods') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_operator.py', 'FixOperator_class_initializer', 'obj') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_operator.py', 'FixOperator_class_initializer', 'PATTERN') [dict,,, str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_standarderror.py', 'FixStandarderror_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_standarderror.py', 'FixStandarderror_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_renames.py', 'module_initializer', 'MAPPING') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_renames.py', 'module_initializer', 'LOOKUP') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_renames.py', 'FixRenames_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_renames.py', 'FixRenames_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_renames.py', 'FixRenames_class_initializer', 'order') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_tuple_params.py', 'FixTupleParams_class_initializer', 'run_order') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_tuple_params.py', 'FixTupleParams_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_tuple_params.py', 'FixTupleParams_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_idioms.py', 'module_initializer', 'CMP') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_idioms.py', 'module_initializer', 'TYPE') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_idioms.py', 'FixIdioms_class_initializer', 'explicit') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_idioms.py', 'FixIdioms_class_initializer', 'PATTERN') [str,,, tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_raw_input.py', 'FixRawInput_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_raw_input.py', 'FixRawInput_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_methodattrs.py', 'module_initializer', 'MAP') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_methodattrs.py', 'FixMethodattrs_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_methodattrs.py', 'FixMethodattrs_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_itertools_imports.py', 'FixItertoolsImports_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_itertools_imports.py', 'FixItertoolsImports_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_long.py', 'FixLong_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_long.py', 'FixLong_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_raise.py', 'FixRaise_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_raise.py', 'FixRaise_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_dict.py', 'module_initializer', 'iter_exempt') [set]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_dict.py', 'FixDict_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_dict.py', 'FixDict_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_dict.py', 'FixDict_class_initializer', 'P1') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_dict.py', 'FixDict_class_initializer', 'p1') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_dict.py', 'FixDict_class_initializer', 'P2') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_dict.py', 'FixDict_class_initializer', 'p2') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_funcattrs.py', 'FixFuncattrs_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_funcattrs.py', 'FixFuncattrs_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_reduce.py', 'FixReduce_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_reduce.py', 'FixReduce_class_initializer', 'order') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_reduce.py', 'FixReduce_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_intern.py', 'FixIntern_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_intern.py', 'FixIntern_class_initializer', 'order') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_intern.py', 'FixIntern_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_import.py', 'FixImport_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_import.py', 'FixImport_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_next.py', 'module_initializer', 'bind_warning') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_next.py', 'FixNext_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_next.py', 'FixNext_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_next.py', 'FixNext_class_initializer', 'order') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_execfile.py', 'FixExecfile_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_execfile.py', 'FixExecfile_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_has_key.py', 'FixHasKey_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_has_key.py', 'FixHasKey_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_repr.py', 'FixRepr_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_repr.py', 'FixRepr_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_numliterals.py', 'FixNumliterals_class_initializer', '_accept_type') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_isinstance.py', 'FixIsinstance_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_isinstance.py', 'FixIsinstance_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_isinstance.py', 'FixIsinstance_class_initializer', 'run_order') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_types.py', 'module_initializer', '_TYPE_MAPPING') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_types.py', 'module_initializer', 't') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_types.py', 'module_initializer', '_pats') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_types.py', 'FixTypes_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_types.py', 'FixTypes_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_xreadlines.py', 'FixXreadlines_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_xreadlines.py', 'FixXreadlines_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_itertools.py', 'FixItertools_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_itertools.py', 'FixItertools_class_initializer', 'it_funcs') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_itertools.py', 'FixItertools_class_initializer', 'PATTERN') [dict,,, str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_itertools.py', 'FixItertools_class_initializer', 'run_order') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_exitfunc.py', 'FixExitfunc_class_initializer', 'keep_line_order') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_exitfunc.py', 'FixExitfunc_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_exitfunc.py', 'FixExitfunc_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_ws_comma.py', 'FixWsComma_class_initializer', 'explicit') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_ws_comma.py', 'FixWsComma_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_ws_comma.py', 'FixWsComma_class_initializer', 'COMMA') [Leaf]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_ws_comma.py', 'FixWsComma_class_initializer', 'COLON') [Leaf]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_ws_comma.py', 'FixWsComma_class_initializer', 'SEPS') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_xrange.py', 'FixXrange_class_initializer', 'BM_compatible') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_xrange.py', 'FixXrange_class_initializer', 'PATTERN') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_xrange.py', 'FixXrange_class_initializer', 'P1') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_xrange.py', 'FixXrange_class_initializer', 'p1') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_xrange.py', 'FixXrange_class_initializer', 'P2') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_xrange.py', 'FixXrange_class_initializer', 'p2') [tuple]
('/anaconda_lib/snowballstemmer/__init__.py', 'module_initializer', '__all__') [tuple]
('/anaconda_lib/snowballstemmer/__init__.py', 'module_initializer', '_languages') [dict]
('/anaconda_lib/snowballstemmer/__init__.py', 'module_initializer', 'cext_available') [bool]
('/anaconda_lib/parso/__init__.py', 'module_initializer', '__version__') [str]
('/anaconda_lib/parso/utils.py', 'module_initializer', '_NON_LINE_BREAKS') [tuple]
('/anaconda_lib/parso/utils.py', 'module_initializer', 'Version') [pt_engine.utils.base.Version]
('/anaconda_server/jsonserver.py', 'module_initializer', 'PROJECT_ROOT') [str]
('/anaconda_server/jsonserver.py', 'module_initializer', 'DEBUG_MODE') [bool]
('/anaconda_server/jsonserver.py', 'module_initializer', 'logger') [<RootLogger root (DEBUG)>]
('/anaconda_server/jsonserver.py', 'module_initializer', 'PY3') [bool]
('/anaconda_server/jsonserver.py', 'module_initializer', 'WINDOWS') [bool]
('/anaconda_server/jsonserver.py', 'module_initializer', 'LINUX') [bool]
('/anaconda_server/jsonserver.py', 'module_initializer', 'opt_parser') [<optparse.OptionParser object at 0x10b108b20>,,, <optparse.OptionParser object at 0x10b108c10>,,, <optparse.OptionParser object at 0x10b10a680>,,, <optparse.OptionParser object at 0x116509720>,,, <optparse.OptionParser object at 0x116509990>,,, <optparse.OptionParser object at 0x11650b340>,,, bool]
('/anaconda_server/jsonserver.py', 'module_initializer', 'options') [dict]
('/anaconda_server/jsonserver.py', 'module_initializer', 'args') [list]
('/anaconda_server/jsonserver.py', 'module_initializer', 'port') [None]
('/anaconda_server/jsonserver.py', 'module_initializer', 'PID') [None,,, list]
('/anaconda_server/jsonserver.py', 'module_initializer', 'log_directory') []
('/anaconda_server/jsonserver.py', 'module_initializer', 'path') []
('/anaconda_server/jsonserver.py', 'module_initializer', 'server') [JSONServer,,, None]
('/anaconda_server/jsonserver.py', 'module_initializer', 'unix_socket_path') []
('/anaconda_server/jsonserver.py', 'module_initializer', 'checker') [Checker]
('/anaconda_server/jsonserver.py', 'JSONServer_class_initializer', 'allow_reuse_address') [bool]
('/anaconda_server/jsonserver.py', 'JSONServer_class_initializer', 'request_queue_size') [int]
('/anaconda_server/jsonserver.py', 'JSONServer_class_initializer', 'socket_type') [int]
('/anaconda_server/jsonserver.py', 'Checker_class_initializer', 'MAX_INACTIVITY') [int]
('/anaconda_server/minserver.py', 'module_initializer', 'DEBUG_MODE') [bool]
('/anaconda_server/minserver.py', 'module_initializer', 'logger') [<RootLogger root (DEBUG)>]
('/anaconda_server/minserver.py', 'module_initializer', 'PY3') [bool]
('/anaconda_server/minserver.py', 'module_initializer', 'opt_parser') [<optparse.OptionParser object at 0x10b10bb50>,,, <optparse.OptionParser object at 0x116534940>]
('/anaconda_server/minserver.py', 'module_initializer', 'options') [dict]
('/anaconda_server/minserver.py', 'module_initializer', 'args') [list]
('/anaconda_server/minserver.py', 'module_initializer', 'port') []
('/anaconda_server/minserver.py', 'module_initializer', 'log_directory') []
('/anaconda_server/minserver.py', 'module_initializer', 'path') []
('/anaconda_server/minserver.py', 'module_initializer', 'server') [JSONServer]
('/anaconda_server/minserver.py', 'JSONServer_class_initializer', 'allow_reuse_address') [bool]
('/anaconda_server/minserver.py', 'JSONServer_class_initializer', 'request_queue_size') [int]
('/anaconda_server/minserver.py', 'JSONServer_class_initializer', 'address_familty') [int]
('/anaconda_server/minserver.py', 'JSONServer_class_initializer', 'socket_type') [int]
('/anaconda_server/autoreload.py', 'module_initializer', 'command') [str]
('/anaconda_server/autoreload.py', 'module_initializer', 'path') [..]
('/anaconda_server/autoreload.py', 'module_initializer', 'wait') [int]
('/anaconda_server/autoreload.py', 'module_initializer', 'process') [<Popen: returncode: None args: "''">]
('/anaconda_server/autoreload.py', 'module_initializer', 'last_mtime') [float]
('/anaconda_server/autoreload.py', 'module_initializer', 'max_mtime') [float]
('/anaconda_server/lib/path.py', 'module_initializer', 'logpath') [dict]
('/anaconda_server/lib/path.py', 'module_initializer', 'log_directory') [str]
('/anaconda_server/commands/__init__.py', 'module_initializer', '__all__') [list]
('/anaconda_server/handlers/__init__.py', 'module_initializer', 'ANACONDA_HANDLERS') [dict]
('/anaconda_server/handlers/__init__.py', 'module_initializer', '__all__') [list]
('/commands/rename.py', 'AnacondaRename_class_initializer', 'data') [None]
('/commands/__init__.py', 'module_initializer', '__all__') [list]
('/commands/autoformat.py', 'AnacondaAutoFormat_class_initializer', 'data') [None]
('/commands/doc.py', 'AnacondaDoc_class_initializer', 'documentation') [None]
('/listeners/completion.py', 'module_initializer', 'JUST_COMPLETED') [bool]
('/listeners/completion.py', 'AnacondaCompletionEventListener_class_initializer', 'completions') [list]
('/listeners/completion.py', 'AnacondaCompletionEventListener_class_initializer', 'ready_from_defer') [bool]
('/listeners/__init__.py', 'module_initializer', '__all__') [list]
('/listeners/linting.py', 'BackgroundLinter_class_initializer', 'check_auto_lint') [bool]
('/listeners/signatures.py', 'AnacondaSignaturesEventListener_class_initializer', 'doc') [None]
('/listeners/signatures.py', 'AnacondaSignaturesEventListener_class_initializer', 'signature') [None]
('/listeners/signatures.py', 'AnacondaSignaturesEventListener_class_initializer', 'exclude') [tuple]
('/anaconda_lib/_typing.py', '__init__', 'self') [_TypeAlias]
('/anaconda_lib/_typing.py', '__init__', 'name') [str]
('/anaconda_lib/_typing.py', '__init__', 'type_var') [TypeVar]
('/anaconda_lib/_typing.py', '__init__', 'impl_type') [re.Match,,, re.Pattern]
('/anaconda_lib/_typing.py', '__init__', 'type_checker') [<function <lambda> at 0x10a373010>,,, <function <lambda> at 0x10a3730a0>,,, <function <lambda> at 0x1157660e0>,,, <function <lambda> at 0x115766170>]
('/anaconda_lib/six.py', '__init__', 'self') [MovedAttribute,,, MovedModule]
('/anaconda_lib/six.py', '__init__', 'six_module_name') [str]
('/anaconda_lib/six.py', '__init__', 'new_attr') [None,,, str]
('/anaconda_lib/six.py', '__init__', 'old_attr') [None,,, str]
('/anaconda_lib/six.py', '__init__', 'name') [str]
('/anaconda_lib/six.py', '__init__', 'old_mod') [str]
('/anaconda_lib/six.py', '__init__', 'new_mod') [bool,,, str]
('/anaconda_lib/six.py', '__init__', 'new') [None,,, str]
('/anaconda_lib/six.py', '__init__', 'old') [str]
('/anaconda_lib/six.py', '_add_module', 'self') [_SixMetaPathImporter]
('/anaconda_lib/six.py', '_add_module', 'mod') [MovedAttribute,,, MovedModule]
('/anaconda_lib/six.py', '_add_module', 'fullnames') [str]
('/anaconda_lib/six.py', '_add_module', 'fullname') []
('/anaconda_lib/persistent_list.py', '__init__', 'self') [PersistentList]
('/anaconda_lib/linting/pydocstyle/wordlists.py', 'load_wordlist', 'name') [str]
('/anaconda_lib/linting/pydocstyle/wordlists.py', 'load_wordlist', 'text') []
('/anaconda_lib/linting/pydocstyle/wordlists.py', 'load_wordlist', 'line') []
('/anaconda_lib/parso/python/parser.py', '__init__', 'start_nonterminal') [str]
('/anaconda_lib/parso/python/parser.py', '__init__', 'error_recovery') [None,,, bool,,, meta_func]
('/anaconda_lib/parso/python/parser.py', '__init__', 'self') [Parser]
('/anaconda_lib/parso/python/parser.py', '__init__', 'pgen_grammar') [Grammar,,, PgenGrammar]
('/anaconda_lib/jedi/parser/python/parser.py', '__init__', 'start_symbol') [str]
('/anaconda_lib/jedi/parser/python/parser.py', '__init__', 'error_recovery') [None,,, bool,,, meta_func]
('/anaconda_lib/jedi/parser/python/parser.py', '__init__', 'self') [Parser]
('/anaconda_lib/jedi/parser/python/parser.py', '__init__', 'grammar') [Grammar,,, PgenGrammar]
('/anaconda_lib/jedi/parser_utils.py', '_get_parent_scope_cache', 'func') [meta_func]
('/anaconda_lib/jedi/parser_utils.py', '_get_parent_scope_cache', 'cache') [<WeakKeyDictionary at 0x10b27b5e0>,,, <WeakKeyDictionary at 0x1166a93f0>]
('/anaconda_lib/jedi/parser_utils.py', '_get_parent_scope_cache', 'wrapper') [meta_func]
('/anaconda_lib/jedi/parser_utils.py', '_get_parent_scope_cache', '_get_parent_scope_cache_ret') [meta_func]
('/anaconda_lib/jedi/parser_utils.py', '_function_is_x_method', 'method_name') [str]
('/anaconda_lib/jedi/parser_utils.py', '_function_is_x_method', 'wrapper') [meta_func]
('/anaconda_lib/jedi/parser_utils.py', '_function_is_x_method', '_function_is_x_method_ret') [meta_func]
('/anaconda_lib/jedi/plugins/__init__.py', '__init__', 'self') [_PluginManager]
('/anaconda_lib/jedi/plugins/stdlib.py', '_create_string_input_function', 'func') [<function abspath at 0x1045df370>,,, <function abspath at 0x10fa2f370>,,, <function dirname at 0x1045def80>,,, <function dirname at 0x10fa2ef80>,,, <function relpath at 0x1045df520>,,, <function relpath at 0x10fa2f520>]
('/anaconda_lib/jedi/plugins/stdlib.py', '_create_string_input_function', 'wrapper') [meta_func]
('/anaconda_lib/jedi/plugins/stdlib.py', '_create_string_input_function', '_create_string_input_function_ret') [meta_func]
('/anaconda_lib/jedi/parser/tokenize.py', 'group', 'kwargs') [dict]
('/anaconda_lib/jedi/parser/tokenize.py', 'group', 'choices') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'group', 'capture') []
('/anaconda_lib/jedi/parser/tokenize.py', 'group', 'start') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'group', 'group_ret') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'maybe', 'choices') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'maybe', 'maybe_ret') [str]
('/anaconda_lib/jedi/parser/tokenize.py', '_all_string_prefixes', '_valid_string_prefixes') [list]
('/anaconda_lib/jedi/parser/tokenize.py', '_all_string_prefixes', 'result') [set]
('/anaconda_lib/jedi/parser/tokenize.py', '_all_string_prefixes', 'prefix') [str]
('/anaconda_lib/jedi/parser/tokenize.py', '_all_string_prefixes', 't') []
('/anaconda_lib/jedi/parser/tokenize.py', '_all_string_prefixes', 'c') []
('/anaconda_lib/jedi/parser/tokenize.py', '_all_string_prefixes', 'u') []
('/anaconda_lib/jedi/parser/tokenize.py', '_all_string_prefixes', '_all_string_prefixes_ret') [set]
('/anaconda_lib/jedi/parser/tokenize.py', '_compile', 'expr') [str]
('/anaconda_lib/jedi/parser/tokenize.py', '_compile', '_compile_ret') [re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE)]
('/anaconda_lib/jedi/parser/tokenize.py', 'source_tokens', 'use_exact_op_types') [bool]
('/anaconda_lib/jedi/parser/tokenize.py', 'source_tokens', 'source') []
('/anaconda_lib/jedi/parser/tokenize.py', 'source_tokens', 'lines') []
('/anaconda_lib/jedi/parser/tokenize.py', 'source_tokens', 'source_tokens_ret') []
('/anaconda_lib/jedi/evaluate/flow_analysis.py', '__init__', 'self') [Status]
('/anaconda_lib/jedi/evaluate/flow_analysis.py', '__init__', 'value') [None,,, bool]
('/anaconda_lib/jedi/evaluate/flow_analysis.py', '__init__', 'name') [str]
('/anaconda_lib/jedi/api/completion_cache.py', '_create_get_from_cache', 'number') [int]
('/anaconda_lib/jedi/api/completion_cache.py', '_create_get_from_cache', '_get_from_cache') [meta_func]
('/anaconda_lib/jedi/api/completion_cache.py', '_create_get_from_cache', '_create_get_from_cache_ret') [meta_func]
('/anaconda_lib/jedi/inference/base_value.py', '__init__', 'self') [ValueSet]
('/anaconda_lib/jedi/inference/base_value.py', '__init__', 'iterable') [list]
('/anaconda_lib/jedi/inference/base_value.py', '__init__', 'value') [list]
('/anaconda_lib/jedi/inference/flow_analysis.py', '__init__', 'self') [Status]
('/anaconda_lib/jedi/inference/flow_analysis.py', '__init__', 'value') [None,,, bool]
('/anaconda_lib/jedi/inference/flow_analysis.py', '__init__', 'name') [str]
('/anaconda_lib/autopep/autopep8_lib/autopep8.py', '__init__', 'self') [CachedTokenizer]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'load_grammar', 'logger') [<RootLogger root (DEBUG)>,,, None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'load_grammar', 'force') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'load_grammar', 'save') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'load_grammar', 'gp') [None,,, str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'load_grammar', 'gt') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'load_grammar', 'head') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'load_grammar', 'tail') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'load_grammar', 'g') [Grammar,,, PgenGrammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'load_grammar', 'load_grammar_ret') [Grammar,,, PgenGrammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pygram.py', '__init__', 'self') [Symbols]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pygram.py', '__init__', 'grammar') [Grammar,,, PgenGrammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pygram.py', '__init__', 'name') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pygram.py', '__init__', 'symbol') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_pattern', 'pattern') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_pattern', 'compile_pattern_ret') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'any', 'choices') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'any', 'any_ret') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'maybe', 'choices') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'maybe', 'maybe_ret') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'group', 'choices') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/tokenize.py', 'group', 'group_ret') [str]
('/anaconda_lib/parso/cache.py', '_get_default_cache_path', 'dir_') [str]
('/anaconda_lib/parso/cache.py', '_get_default_cache_path', '_get_default_cache_path_ret') [str]
('/anaconda_lib/parso/python/token.py', '__init__', 'self') [TokenType]
('/anaconda_lib/parso/python/token.py', '__init__', 'names') [tuple]
('/anaconda_lib/parso/python/token.py', '__init__', 'contains_syntax') [bool]
('/anaconda_lib/parso/python/token.py', '__init__', 'name') [str]
('/anaconda_lib/parso/python/tokenize.py', '_compile', 'expr') [str]
('/anaconda_lib/parso/python/tokenize.py', '_compile', '_compile_ret') [re.compile('[^{}]+', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE)]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize', 'start_pos') [tuple]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize', 'code') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize', 'version_info') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize', 'lines') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize', 'tokenize_ret') []
('/anaconda_server/jsonserver.py', 'get_logger', 'path') []
('/anaconda_server/jsonserver.py', 'get_logger', 'log') [<RootLogger root (DEBUG)>]
('/anaconda_server/jsonserver.py', 'get_logger', 'hdlr') []
('/anaconda_server/jsonserver.py', 'get_logger', 'formatter') [<logging.Formatter object at 0x10b2da0b0>,,, <logging.Formatter object at 0x1166fa5f0>]
('/anaconda_server/jsonserver.py', 'get_logger', 'get_logger_ret') [<RootLogger root (DEBUG)>]
('/anaconda_server/jsonserver.py', '__init__', 'handler') [JSONHandler]
('/anaconda_server/jsonserver.py', '__init__', 'self') [Checker]
('/anaconda_server/jsonserver.py', '__init__', 'address') [tuple]
('/anaconda_server/jsonserver.py', '__init__', 'delta') [int]
('/anaconda_server/jsonserver.py', '__init__', 'server') [JSONServer,,, None]
('/anaconda_server/jsonserver.py', '__init__', 'pid') [None,,, list]
('/anaconda_server/minserver.py', 'get_logger', 'path') []
('/anaconda_server/minserver.py', 'get_logger', 'log') [<RootLogger root (DEBUG)>]
('/anaconda_server/minserver.py', 'get_logger', 'hdlr') []
('/anaconda_server/minserver.py', 'get_logger', 'formatter') [<logging.Formatter object at 0x10b2dbb80>,,, <logging.Formatter object at 0x11670ddb0>]
('/anaconda_server/minserver.py', 'get_logger', 'get_logger_ret') [<RootLogger root (DEBUG)>]
('/anaconda_server/minserver.py', '__init__', 'handler') [JSONHandler]
('/anaconda_server/minserver.py', '__init__', 'self') [JSONServer]
('/anaconda_server/minserver.py', '__init__', 'address') [tuple]
('/anaconda_server/autoreload.py', 'file_times', 'path') [..]
('/anaconda_server/autoreload.py', 'file_times', 'absolute_path') [/Users/ingkarat/Documents/GitHub/AIML-Proposal/pt_analysis]
('/anaconda_server/autoreload.py', 'file_times', 'file') []
('/anaconda_server/autoreload.py', 'file_times', 'x') []
('/anaconda_lib/six.py', '_get_module', 'self') [_SixMetaPathImporter]
('/anaconda_lib/six.py', '_get_module', 'fullname') [str]
('/anaconda_lib/six.py', '_get_module', '_get_module_ret') []
('/anaconda_lib/linting/anaconda_mypy.py', 'parse_mypy_version', 'version') []
('/anaconda_lib/linting/anaconda_mypy.py', 'parse_mypy_version', 'tuple_version') [tuple]
('/anaconda_lib/linting/anaconda_mypy.py', 'parse_mypy_version', 'parse_mypy_version_ret') [None,,, tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_renames.py', 'build_pattern', 'module') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_renames.py', 'build_pattern', 'replace') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_renames.py', 'build_pattern', 'old_attr') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/fixes/fix_renames.py', 'build_pattern', 'new_attr') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'fixers_applied') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'prefix') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'context') [None,,, tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'self') [Node]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'type') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'value') [None,,, str]
('/anaconda_lib/snowballstemmer/among.py', '__init__', 'method') [None,,, str]
('/anaconda_lib/snowballstemmer/among.py', '__init__', 'self') [Among]
('/anaconda_lib/snowballstemmer/among.py', '__init__', 's') [str]
('/anaconda_lib/snowballstemmer/among.py', '__init__', 'substring_i') [int]
('/anaconda_lib/snowballstemmer/among.py', '__init__', 'result') [int]
('/anaconda_lib/persistent_list.py', 'load', 'self') [PersistentList]
('/anaconda_lib/persistent_list.py', 'load', 'fileobj') []
('/anaconda_lib/persistent_list.py', 'load', 'load_ret') []
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'use_exact_op_types') [bool]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'lines') []
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'paren_level') [int]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'indents') [list]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'max') [int]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'numchars') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'contstr') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'contline') [None]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'new_line') [bool]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'prefix') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'additional_prefix') [str]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'lnum') []
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'line') []
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'pos') [int]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'endmatch') []
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'pseudomatch') []
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'txt') []
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'start') [int]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'spos') [tuple]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'token') []
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'initial') []
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'i') [int]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'endprog') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'contstr_start') [tuple]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'indent') [list]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'exact_type') [int]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'typ') [int]
('/anaconda_lib/jedi/parser/tokenize.py', 'generate_tokens', 'end_pos') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', '_newer', 'a') [None,,, str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', '_newer', 'b') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', '_newer', '_newer_ret') [bool]
('/anaconda_lib/parso/pgen2/generator.py', 'generate_grammar', 'bnf_grammar') [str]
('/anaconda_lib/parso/pgen2/generator.py', 'generate_grammar', 'token_namespace') []
('/anaconda_lib/parso/pgen2/generator.py', 'generate_grammar', 'rule_to_dfas') [dict]
('/anaconda_lib/parso/pgen2/generator.py', 'generate_grammar', 'start_nonterminal') [None]
('/anaconda_lib/parso/pgen2/generator.py', 'generate_grammar', 'nfa_a') []
('/anaconda_lib/parso/pgen2/generator.py', 'generate_grammar', 'nfa_z') []
('/anaconda_lib/parso/pgen2/generator.py', 'generate_grammar', 'dfas') [list]
('/anaconda_lib/parso/pgen2/generator.py', 'generate_grammar', 'reserved_strings') [dict]
('/anaconda_lib/parso/pgen2/generator.py', 'generate_grammar', 'nonterminal') []
('/anaconda_lib/parso/pgen2/generator.py', 'generate_grammar', 'dfa_state') [DFAState]
('/anaconda_lib/parso/pgen2/generator.py', 'generate_grammar', 'terminal_or_nonterminal') []
('/anaconda_lib/parso/pgen2/generator.py', 'generate_grammar', 'next_dfa') []
('/anaconda_lib/parso/pgen2/generator.py', 'generate_grammar', 'transition') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/parso/pgen2/generator.py', 'generate_grammar', 'generate_grammar_ret') [Grammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'generate_grammar', 'filename') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'generate_grammar', 'p') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'generate_grammar', 'generate_grammar_ret') [PgenGrammar]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'generate_grammar', 'bnf_text') [str]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'generate_grammar', 'p') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'generate_grammar', 'generate_grammar_ret') [Grammar]
('/anaconda_lib/parso/grammar.py', '__init__', 'diff_parser') [None]
('/anaconda_lib/parso/grammar.py', '__init__', 'parser') []
('/anaconda_lib/parso/grammar.py', '__init__', 'self') [Grammar]
('/anaconda_lib/parso/grammar.py', '__init__', 'text') [str]
('/anaconda_lib/parso/grammar.py', '__init__', 'tokenizer') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', '__init__', 'self') [Grammar]
('/anaconda_lib/jedi/parser/pgen2/grammar.py', '__init__', 'self') [Grammar,,, PgenGrammar]
('/anaconda_lib/jedi/parser/pgen2/grammar.py', '__init__', 'bnf_text') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'load', 'self') [Grammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'load', 'filename') [None,,, str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'load', 'f') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'load', 'd') []
('/anaconda_lib/jedi/parser/pgen2/grammar.py', 'load', 'self') [Grammar,,, PgenGrammar]
('/anaconda_lib/jedi/parser/pgen2/grammar.py', 'load', 'filename') [None,,, str]
('/anaconda_lib/jedi/parser/pgen2/grammar.py', 'load', 'd') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'copy', 'self') [Grammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'copy', 'new') [Grammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'copy', 'dict_attr') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'copy', 'copy_ret') [Grammar]
('/anaconda_lib/jedi/parser/pgen2/grammar.py', 'copy', 'self') [Grammar,,, PgenGrammar]
('/anaconda_lib/jedi/parser/pgen2/grammar.py', 'copy', 'new') [Grammar,,, PgenGrammar]
('/anaconda_lib/jedi/parser/pgen2/grammar.py', 'copy', 'dict_attr') [str]
('/anaconda_lib/jedi/parser/pgen2/grammar.py', 'copy', 'copy_ret') [Grammar,,, PgenGrammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', '__init__', 'grammar_file') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', '__init__', 'self') [PatternCompiler]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_pattern', 'with_tree') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_pattern', 'debug') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_pattern', 'self') [PatternCompiler]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_pattern', 'input') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_pattern', 'tokens') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_pattern', 'root') [Leaf,,, Node,,, None]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'is_first_token') [bool]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'indents') [None,,, list]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'start_pos') [tuple]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'lines') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'version_info') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'dedent_if_necessary') [meta_func]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'pseudo_token') [DFAState,,, int,,, list]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'single_quoted') [dict,,, int]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'triple_quoted') [int]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'endpats') [int]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'whitespace') [int]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'fstring_pattern_map') [int]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'always_break_tokens') [int]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'paren_level') [int]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'max_') [int]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'numchars') [str]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'contstr') [str]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'contline') [None,,, str]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'new_line') [bool]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'prefix') [str]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'additional_prefix') [str]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'lnum') [int]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'fstring_stack') [list]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'line') [str]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'pos') [int]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'endmatch') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'tos') [list]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'string') [str]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'rest') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'fstring_end_token') [None,,, PythonToken]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'quote_length') [int]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'string_line') [str]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'fstring_stack_node') [list]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'quote') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'end_match') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'end_match_string') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'pseudomatch') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'start') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'spos') [tuple]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'token') [str]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'initial') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'match') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'indent_start') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 't') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'm') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'endprog') []
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'contstr_start') [tuple]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'end_pos') [tuple]
('/anaconda_lib/parso/python/tokenize.py', 'tokenize_lines', 'indent') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'dump', 'self') [Grammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'dump', 'filename') [None,,, str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/grammar.py', 'dump', 'f') [<_io.BufferedWriter name='Grammar.txt'>]
('/anaconda_lib/jedi/parser/pgen2/grammar.py', 'dump', 'self') [Grammar,,, PgenGrammar]
('/anaconda_lib/jedi/parser/pgen2/grammar.py', 'dump', 'filename') [None,,, str]
('/anaconda_lib/parso/pgen2/generator.py', '_make_dfas', 'start') []
('/anaconda_lib/parso/pgen2/generator.py', '_make_dfas', 'finish') []
('/anaconda_lib/parso/pgen2/generator.py', '_make_dfas', 'addclosure') [meta_func]
('/anaconda_lib/parso/pgen2/generator.py', '_make_dfas', 'base_nfa_set') [set]
('/anaconda_lib/parso/pgen2/generator.py', '_make_dfas', 'states') [list]
('/anaconda_lib/parso/pgen2/generator.py', '_make_dfas', 'state') [DFAState]
('/anaconda_lib/parso/pgen2/generator.py', '_make_dfas', 'arcs') [dict]
('/anaconda_lib/parso/pgen2/generator.py', '_make_dfas', 'nfa_state') []
('/anaconda_lib/parso/pgen2/generator.py', '_make_dfas', 'nfa_arc') []
('/anaconda_lib/parso/pgen2/generator.py', '_make_dfas', 'nfa_set') []
('/anaconda_lib/parso/pgen2/generator.py', '_make_dfas', 'nonterminal_or_string') []
('/anaconda_lib/parso/pgen2/generator.py', '_make_dfas', 'nested_state') [DFAState]
('/anaconda_lib/parso/pgen2/generator.py', '_make_dfas', '_make_dfas_ret') [list]
('/anaconda_lib/parso/pgen2/generator.py', '_simplify_dfas', 'dfas') [list]
('/anaconda_lib/parso/pgen2/generator.py', '_simplify_dfas', 'changes') [bool]
('/anaconda_lib/parso/pgen2/generator.py', '_simplify_dfas', 'i') []
('/anaconda_lib/parso/pgen2/generator.py', '_simplify_dfas', 'state_i') []
('/anaconda_lib/parso/pgen2/generator.py', '_simplify_dfas', 'j') []
('/anaconda_lib/parso/pgen2/generator.py', '_simplify_dfas', 'state_j') [DFAState]
('/anaconda_lib/parso/pgen2/generator.py', '_simplify_dfas', 'state') [DFAState]
('/anaconda_lib/parso/pgen2/generator.py', '_make_transition', 'token_namespace') []
('/anaconda_lib/parso/pgen2/generator.py', '_make_transition', 'reserved_syntax_strings') [dict]
('/anaconda_lib/parso/pgen2/generator.py', '_make_transition', 'label') []
('/anaconda_lib/parso/pgen2/generator.py', '_make_transition', '_make_transition_ret') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/parso/pgen2/generator.py', '_make_transition', 'value') []
('/anaconda_lib/parso/pgen2/generator.py', '_make_transition', 'r') [ReservedString]
('/anaconda_lib/parso/pgen2/generator.py', '__init__', 'dfa_pushes') [list]
('/anaconda_lib/parso/pgen2/generator.py', '__init__', 'self') [ReservedString]
('/anaconda_lib/parso/pgen2/generator.py', '__init__', 'next_dfa') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_tree_traversal', 'nonterminal_to_dfas') [dict]
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_tree_traversal', 'first_plans') [dict]
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_tree_traversal', 'nonterminals') [list]
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_tree_traversal', 'nonterminal') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_tree_traversal', 'dfas') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_tree_traversal', 'dfa_state') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_tree_traversal', 'transitions') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_tree_traversal', 'next_dfa') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_tree_traversal', 'transition') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_tree_traversal', 'pushes') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_tree_traversal', 'prev_plan') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_tree_traversal', 'choices') []
('/anaconda_lib/parso/pgen2/generator.py', '__init__', 'start_nonterminal') [None]
('/anaconda_lib/parso/pgen2/generator.py', '__init__', 'rule_to_dfas') [dict]
('/anaconda_lib/parso/pgen2/generator.py', '__init__', 'reserved_syntax_strings') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', '__init__', 'stream') [<_io.TextIOWrapper name='Grammar.txt' mode='r' encoding='UTF-8'>,,, None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', '__init__', 'self') [DFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', '__init__', 'filename') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', '__init__', 'close_stream') [<built-in method close of _io.TextIOWrapper object at 0x10a8d79f0>,,, <built-in method close of _io.TextIOWrapper object at 0x115cff850>,,, None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_grammar', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_grammar', 'c') [PgenGrammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_grammar', 'names') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_grammar', 'name') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_grammar', 'i') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_grammar', 'dfa') [None,,, TokenInfo(type=0 (ENDMARKER), string='', start=(1, 0), end=(1, 0), line=''),,, dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_grammar', 'states') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_grammar', 'state') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_grammar', 'arcs') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_grammar', 'label') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_grammar', 'next') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_grammar', 'make_grammar_ret') [PgenGrammar]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', '__init__', 'self') [DFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', '__init__', 'bnf_text') [str]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_grammar', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_grammar', 'c') [Grammar]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_grammar', 'names') [list]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_grammar', 'name') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_grammar', 'i') [int]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_grammar', 'dfa') [None,,, dict]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_grammar', 'states') [list]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_grammar', 'state') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_grammar', 'arcs') [list]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_grammar', 'label') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_grammar', 'next') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_grammar', 'make_grammar_ret') [Grammar]
('/anaconda_lib/parso/grammar.py', '_get_token_namespace', 'self') [Grammar]
('/anaconda_lib/parso/grammar.py', '_get_token_namespace', 'ns') [None]
('/anaconda_lib/parso/grammar.py', '_get_token_namespace', '_get_token_namespace_ret') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', '__init__', 'logger') [<RootLogger root (DEBUG)>,,, None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', '__init__', 'convert') [None,,, meta_func]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', '__init__', 'self') [Driver]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', '__init__', 'grammar') [Grammar,,, PgenGrammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'tokenize_wrapper', 'input') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'tokenize_wrapper', 'skip') [set]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'tokenize_wrapper', 'tokens') [<generator object _tokenize at 0x10ba9ed50>,,, <generator object _tokenize at 0x116ec2d50>]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'tokenize_wrapper', 'quintuple') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'tokenize_wrapper', 'type') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'tokenize_wrapper', 'value') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'tokenize_wrapper', 'start') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'tokenize_wrapper', 'end') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'tokenize_wrapper', 'line_text') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 'debug') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 'self') [Driver]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 'tokens') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 'p') [Parser]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 'lineno') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 'column') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 'type') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 'value') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 'start') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 'end') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 'line_text') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 'prefix') [None,,, int,,, str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 'quintuple') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 's_lineno') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 's_column') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/driver.py', 'parse_tokens', 'parse_tokens_ret') [Leaf,,, Node,,, None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'self') [PatternCompiler]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'node') [Leaf,,, Node,,, None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'ch') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'alts') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'compile_node_ret') [LeafPattern,,, NegatedPattern,,, NodePattern,,, WildcardPattern]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'a') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'p') [NegatedPattern,,, WildcardPattern]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'units') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'pattern') [LeafPattern,,, NegatedPattern,,, NodePattern,,, WildcardPattern]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'name') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'nodes') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'repeat') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'children') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'child') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'min') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_node', 'max') [int]
('/anaconda_lib/parso/python/tokenize.py', '_get_token_collection', 'version_info') []
('/anaconda_lib/parso/python/tokenize.py', '_get_token_collection', '_get_token_collection_ret') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/parso/python/tokenize.py', '_get_token_collection', 'result') []
('/anaconda_lib/parso/python/tokenize.py', '_find_fstring_string', 'endpats') [int]
('/anaconda_lib/parso/python/tokenize.py', '_find_fstring_string', 'fstring_stack') [list]
('/anaconda_lib/parso/python/tokenize.py', '_find_fstring_string', 'line') [str]
('/anaconda_lib/parso/python/tokenize.py', '_find_fstring_string', 'lnum') [int]
('/anaconda_lib/parso/python/tokenize.py', '_find_fstring_string', 'pos') [int]
('/anaconda_lib/parso/python/tokenize.py', '_find_fstring_string', 'tos') [list]
('/anaconda_lib/parso/python/tokenize.py', '_find_fstring_string', 'allow_multiline') []
('/anaconda_lib/parso/python/tokenize.py', '_find_fstring_string', 'regex') [re.compile('[^{}]+', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE)]
('/anaconda_lib/parso/python/tokenize.py', '_find_fstring_string', 'match') [None]
('/anaconda_lib/parso/python/tokenize.py', '_find_fstring_string', '_find_fstring_string_ret') [tuple]
('/anaconda_lib/parso/python/tokenize.py', '_find_fstring_string', 'string') [str]
('/anaconda_lib/parso/python/tokenize.py', '_find_fstring_string', 'fstring_stack_node') [list]
('/anaconda_lib/parso/python/tokenize.py', '_find_fstring_string', 'end_match') []
('/anaconda_lib/parso/python/tokenize.py', '_find_fstring_string', 'new_pos') [int]
('/anaconda_lib/parso/python/tokenize.py', '_close_fstring_if_necessary', 'fstring_stack') [list]
('/anaconda_lib/parso/python/tokenize.py', '_close_fstring_if_necessary', 'string') []
('/anaconda_lib/parso/python/tokenize.py', '_close_fstring_if_necessary', 'line_nr') [int]
('/anaconda_lib/parso/python/tokenize.py', '_close_fstring_if_necessary', 'column') [int]
('/anaconda_lib/parso/python/tokenize.py', '_close_fstring_if_necessary', 'additional_prefix') [str]
('/anaconda_lib/parso/python/tokenize.py', '_close_fstring_if_necessary', 'fstring_stack_index') [int]
('/anaconda_lib/parso/python/tokenize.py', '_close_fstring_if_necessary', 'node') [list]
('/anaconda_lib/parso/python/tokenize.py', '_close_fstring_if_necessary', 'lstripped_string') []
('/anaconda_lib/parso/python/tokenize.py', '_close_fstring_if_necessary', 'len_lstrip') [int]
('/anaconda_lib/parso/python/tokenize.py', '_close_fstring_if_necessary', 'token') [PythonToken]
('/anaconda_lib/parso/python/tokenize.py', '_close_fstring_if_necessary', '_close_fstring_if_necessary_ret') [tuple]
('/anaconda_lib/parso/python/tokenize.py', 'dedent_if_necessary', 'start') []
('/anaconda_lib/parso/python/tokenize.py', 'is_identifier', 's') [str]
('/anaconda_lib/parso/python/tokenize.py', 'is_identifier', 'is_identifier_ret') [bool]
('/anaconda_lib/parso/python/tokenize.py', '_split_illegal_unicode_name', 'token') [str]
('/anaconda_lib/parso/python/tokenize.py', '_split_illegal_unicode_name', 'start_pos') [tuple]
('/anaconda_lib/parso/python/tokenize.py', '_split_illegal_unicode_name', 'prefix') [str]
('/anaconda_lib/parso/python/tokenize.py', '_split_illegal_unicode_name', 'create_token') [meta_func]
('/anaconda_lib/parso/python/tokenize.py', '_split_illegal_unicode_name', 'found') [str]
('/anaconda_lib/parso/python/tokenize.py', '_split_illegal_unicode_name', 'is_illegal') [bool]
('/anaconda_lib/parso/python/tokenize.py', '_split_illegal_unicode_name', 'pos') [tuple]
('/anaconda_lib/parso/python/tokenize.py', '_split_illegal_unicode_name', 'i') [int]
('/anaconda_lib/parso/python/tokenize.py', '_split_illegal_unicode_name', 'char') [str]
('/anaconda_lib/parso/python/tokenize.py', '_split_illegal_unicode_name', 'new_found') [str]
('/anaconda_lib/parso/python/tokenize.py', '__init__', 'self') [FStringNode]
('/anaconda_lib/parso/python/tokenize.py', '__init__', 'quote') []
('/anaconda_lib/parso/pgen2/generator.py', 'addclosure', 'nfa_state') []
('/anaconda_lib/parso/pgen2/generator.py', 'addclosure', 'base_nfa_set') [set]
('/anaconda_lib/parso/pgen2/generator.py', 'addclosure', 'nfa_arc') []
('/anaconda_lib/parso/pgen2/generator.py', '__init__', 'from_rule') []
('/anaconda_lib/parso/pgen2/generator.py', '__init__', 'nfa_set') [set]
('/anaconda_lib/parso/pgen2/generator.py', '__init__', 'final') []
('/anaconda_lib/parso/pgen2/generator.py', 'add_arc', 'self') [DFAState]
('/anaconda_lib/parso/pgen2/generator.py', 'add_arc', 'next_') [DFAState]
('/anaconda_lib/parso/pgen2/generator.py', 'add_arc', 'label') []
('/anaconda_lib/parso/pgen2/generator.py', '__init__', 'value') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_first_plans', 'nonterminal_to_dfas') [dict]
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_first_plans', 'first_plans') [dict]
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_first_plans', 'nonterminal') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_first_plans', 'dfas') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_first_plans', 'new_first_plans') [dict]
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_first_plans', 'state') [DFAState,,, int,,, list]
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_first_plans', 'transition') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_first_plans', 'next_') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_first_plans', 'nonterminal2') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_first_plans', 'first_plans2') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_first_plans', 't') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_first_plans', 'pushes') []
('/anaconda_lib/parso/pgen2/generator.py', '_calculate_first_plans', '_calculate_first_plans_ret') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'gettoken', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'gettoken', 'tup') [TokenInfo(type=0 (ENDMARKER), string='', start=(1, 0), end=(1, 0), line='')]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse', 'dfas') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse', 'startsymbol') [None,,, TokenInfo(type=0 (ENDMARKER), string='', start=(1, 0), end=(1, 0), line='')]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse', 'name') [None,,, TokenInfo(type=0 (ENDMARKER), string='', start=(1, 0), end=(1, 0), line='')]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse', 'a') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse', 'z') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse', 'dfa') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse', 'oldlen') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse', 'newlen') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse', 'parse_ret') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'addfirstsets', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'addfirstsets', 'names') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'addfirstsets', 'name') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_label', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_label', 'c') [PgenGrammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_label', 'label') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_label', 'ilabel') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_label', 'make_label_ret') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_label', 'itoken') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_label', 'value') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_first', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_first', 'c') [PgenGrammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_first', 'name') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_first', 'rawfirst') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_first', 'first') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_first', 'label') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_first', 'ilabel') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_first', 'make_first_ret') [dict]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'gettoken', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'gettoken', 'tup') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'gettoken', 'prefix') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse', 'dfas') [dict]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse', 'startsymbol') [None]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse', 'name') [None]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse', 'a') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse', 'z') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse', 'dfa') [list]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse', 'parse_ret') [tuple]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'addfirstsets', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'addfirstsets', 'names') [list]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'addfirstsets', 'name') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_label', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_label', 'c') [Grammar]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_label', 'label') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_label', 'ilabel') [int]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_label', 'make_label_ret') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_label', 'itoken') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_label', 'value') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_first', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_first', 'c') [Grammar]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_first', 'name') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_first', 'rawfirst') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_first', 'first') [dict]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_first', 'label') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_first', 'ilabel') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_first', 'make_first_ret') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', '__init__', 'convert') [None,,, meta_func]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', '__init__', 'self') [ParseError]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', '__init__', 'grammar') [Grammar,,, PgenGrammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'setup', 'start') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'setup', 'self') [Parser]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'setup', 'newnode') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'setup', 'stackentry') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'self') [Parser]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'type') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'value') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'context') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'ilabel') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'dfa') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'state') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'node') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'states') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'first') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'arcs') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'i') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'newstate') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 't') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'v') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'addtoken_ret') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'itsdfa') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'itsstates') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'addtoken', 'itsfirst') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'name') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'max') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'min') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'content') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'alt') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'optimize', 'self') [LeafPattern,,, NegatedPattern,,, NodePattern]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'optimize', 'subpattern') [LeafPattern,,, NegatedPattern,,, NodePattern,,, None,,, WildcardPattern]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', 'optimize', 'optimize_ret') [LeafPattern,,, NegatedPattern,,, NodePattern]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_basic', 'repeat') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_basic', 'self') [PatternCompiler]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_basic', 'nodes') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_basic', 'node') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_basic', 'value') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_basic', 'compile_basic_ret') [LeafPattern,,, NodePattern,,, WildcardPattern]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_basic', 'type') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_basic', 'content') [None,,, list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'compile_basic', 'subpattern') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'get_int', 'self') [PatternCompiler]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'get_int', 'node') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'get_int', 'get_int_ret') []
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'version_info') []
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Whitespace') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'whitespace') []
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Comment') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Name') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Hexnumber') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Binnumber') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Octnumber') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Decnumber') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Intnumber') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Exponent') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Pointfloat') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Expfloat') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Floatnumber') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Imagnumber') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Number') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'possible_prefixes') [set]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'StringPrefix') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'StringPrefixWithF') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'fstring_prefixes') [set]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'FStringStart') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Single') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Double') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Single3') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Double3') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Triple') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Operator') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Bracket') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'special_args') [list]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Special') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'Funny') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'ContStr') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'pseudo_extra_pool') [list]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'all_quotes') [tuple]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'PseudoExtras') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'PseudoToken') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'endpats') [dict]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', '_prefix') []
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'single_quoted') [set]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'triple_quoted') [set]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'fstring_pattern_map') [dict]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 't') []
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'quote') [str]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'ALWAYS_BREAK_TOKENS') [tuple]
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', 'pseudo_token_compiled') []
('/anaconda_lib/parso/python/tokenize.py', '_create_token_collection', '_create_token_collection_ret') []
('/anaconda_lib/parso/python/tokenize.py', 'create_token', 'create_token_ret') [PythonToken]
('/anaconda_lib/parso/pgen2/generator.py', 'unifystate', 'self') [DFAState]
('/anaconda_lib/parso/pgen2/generator.py', 'unifystate', 'old') [DFAState]
('/anaconda_lib/parso/pgen2/generator.py', 'unifystate', 'new') []
('/anaconda_lib/parso/pgen2/generator.py', 'unifystate', 'label') []
('/anaconda_lib/parso/pgen2/generator.py', 'unifystate', 'next_') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'expect', 'value') [None,,, TokenInfo(type=0 (ENDMARKER), string='', start=(1, 0), end=(1, 0), line='')]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'expect', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'expect', 'type') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'expect', 'expect_ret') [None,,, TokenInfo(type=0 (ENDMARKER), string='', start=(1, 0), end=(1, 0), line='')]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_rhs', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_rhs', 'a') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_rhs', 'z') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_rhs', 'parse_rhs_ret') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_rhs', 'aa') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_rhs', 'zz') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_dfa', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_dfa', 'start') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_dfa', 'finish') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_dfa', 'closure') [meta_func]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_dfa', 'addclosure') [meta_func]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_dfa', 'states') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_dfa', 'state') [DFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_dfa', 'arcs') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_dfa', 'nfastate') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_dfa', 'label') [DFAState,,, int,,, list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_dfa', 'next') [dict,,, int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_dfa', 'nfaset') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_dfa', 'st') [DFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'make_dfa', 'make_dfa_ret') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'simplify_dfa', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'simplify_dfa', 'dfa') [list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'simplify_dfa', 'changes') [bool]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'simplify_dfa', 'i') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'simplify_dfa', 'state_i') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'simplify_dfa', 'j') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'simplify_dfa', 'state_j') [DFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'simplify_dfa', 'state') [DFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'calcfirst', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'calcfirst', 'name') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'calcfirst', 'dfa') [None,,, TokenInfo(type=0 (ENDMARKER), string='', start=(1, 0), end=(1, 0), line=''),,, dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'calcfirst', 'state') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'calcfirst', 'totalset') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'calcfirst', 'overlapcheck') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'calcfirst', 'label') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'calcfirst', 'next') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'calcfirst', 'fset') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'calcfirst', 'inverse') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'calcfirst', 'itsfirst') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'calcfirst', 'symbol') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'expect', 'value') [None]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'expect', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'expect', 'type') [int]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'expect', 'expect_ret') [None]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_rhs', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_rhs', 'a') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_rhs', 'z') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_rhs', 'parse_rhs_ret') [tuple]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_rhs', 'aa') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_rhs', 'zz') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_dfa', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_dfa', 'start') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_dfa', 'finish') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_dfa', 'closure') [meta_func]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_dfa', 'addclosure') [meta_func]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_dfa', 'states') [list]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_dfa', 'state') [DFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_dfa', 'arcs') [dict]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_dfa', 'nfastate') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_dfa', 'label') [DFAState,,, int,,, list]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_dfa', 'next') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_dfa', 'nfaset') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_dfa', 'st') [DFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'make_dfa', 'make_dfa_ret') [list]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'simplify_dfa', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'simplify_dfa', 'dfa') [list]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'simplify_dfa', 'changes') [bool]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'simplify_dfa', 'i') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'simplify_dfa', 'state_i') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'simplify_dfa', 'j') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'simplify_dfa', 'state_j') [DFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'simplify_dfa', 'state') [DFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'calcfirst', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'calcfirst', 'name') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'calcfirst', 'dfa') [None,,, dict]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'calcfirst', 'state') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'calcfirst', 'totalset') [dict]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'calcfirst', 'overlapcheck') [dict]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'calcfirst', 'label') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'calcfirst', 'next') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'calcfirst', 'fset') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'calcfirst', 'inverse') [dict]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'calcfirst', 'itsfirst') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'calcfirst', 'symbol') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'classify', 'self') [Parser]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'classify', 'type') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'classify', 'value') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'classify', 'context') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'classify', 'ilabel') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'classify', 'classify_ret') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'shift', 'self') [Parser]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'shift', 'type') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'shift', 'value') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'shift', 'newstate') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'shift', 'context') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'shift', 'dfa') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'shift', 'state') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'shift', 'node') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'shift', 'newnode') [Leaf,,, Node,,, tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'pop', 'self') [Parser]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'pop', 'popdfa') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'pop', 'popstate') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'pop', 'popnode') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'pop', 'newnode') [Leaf,,, Node]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'pop', 'dfa') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'pop', 'state') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'pop', 'node') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'push', 'self') [Parser]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'push', 'type') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'push', 'newdfa') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'push', 'newstate') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'push', 'context') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'push', 'dfa') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'push', 'state') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'push', 'node') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', 'push', 'newnode') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'i') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'item') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/literals.py', 'evalString', 's') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/literals.py', 'evalString', 'q') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/literals.py', 'evalString', 'evalString_ret') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', '_type_of_literal', 'value') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', '_type_of_literal', '_type_of_literal_ret') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/parso/python/tokenize.py', 'group', 'kwargs') [dict]
('/anaconda_lib/parso/python/tokenize.py', 'group', 'choices') [str]
('/anaconda_lib/parso/python/tokenize.py', 'group', 'capture') []
('/anaconda_lib/parso/python/tokenize.py', 'group', 'start') [str]
('/anaconda_lib/parso/python/tokenize.py', 'group', 'group_ret') [str]
('/anaconda_lib/parso/python/tokenize.py', 'maybe', 'choices') [str]
('/anaconda_lib/parso/python/tokenize.py', 'maybe', 'maybe_ret') [str]
('/anaconda_lib/parso/python/tokenize.py', '_all_string_prefixes', 'only_fstring') [bool]
('/anaconda_lib/parso/python/tokenize.py', '_all_string_prefixes', 'include_fstring') [bool]
('/anaconda_lib/parso/python/tokenize.py', '_all_string_prefixes', 'version_info') []
('/anaconda_lib/parso/python/tokenize.py', '_all_string_prefixes', 'different_case_versions') [meta_func]
('/anaconda_lib/parso/python/tokenize.py', '_all_string_prefixes', 'valid_string_prefixes') [list]
('/anaconda_lib/parso/python/tokenize.py', '_all_string_prefixes', 'result') [set]
('/anaconda_lib/parso/python/tokenize.py', '_all_string_prefixes', 'f') [list]
('/anaconda_lib/parso/python/tokenize.py', '_all_string_prefixes', '_all_string_prefixes_ret') [set]
('/anaconda_lib/parso/python/tokenize.py', '_all_string_prefixes', 'prefix') [str]
('/anaconda_lib/parso/python/tokenize.py', '_all_string_prefixes', 't') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'raise_error', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'raise_error', 'msg') [int,,, str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'raise_error', 'args') [int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_alt', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_alt', 'a') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_alt', 'b') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_alt', 'c') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_alt', 'd') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_alt', 'parse_alt_ret') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'addarc', 'label') [DFAState,,, int,,, list]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'addarc', 'self') [DFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'addarc', 'next') [DFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'closure', 'state') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'closure', 'base') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'closure', 'closure_ret') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', '__init__', 'nfaset') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', '__init__', 'final') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'addclosure', 'state') [dict,,, int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'addclosure', 'base') [dict]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'addclosure', 'label') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'addclosure', 'next') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'raise_error', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'raise_error', 'msg') [int,,, str]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'raise_error', 'args') [int]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'raise_error', 'line') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_alt', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_alt', 'a') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_alt', 'b') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_alt', 'c') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_alt', 'd') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_alt', 'parse_alt_ret') [tuple]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'addarc', 'label') [DFAState,,, int,,, list]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'addarc', 'self') [DFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'addarc', 'next') [DFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'closure', 'state') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'closure', 'base') [dict]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'closure', 'closure_ret') [dict]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', '__init__', 'nfaset') [dict]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', '__init__', 'final') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'addclosure', 'state') [DFAPlan,,, DFAState,,, MovedAttribute,,, MovedModule,,, None,,, ReservedString,,, dict,,, int,,, list,,, meta_func,,, re.compile('(msg)(msg)', re.IGNORECASE|re.MULTILINE),,, re.compile('msg', re.IGNORECASE|re.MULTILINE),,, str,,, tuple]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'addclosure', 'base') [dict]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'addclosure', 'label') [DFAState,,, int,,, list]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'addclosure', 'next') [dict,,, int]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', '__init__', 'msg') [str]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', '__init__', 'type') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', '__init__', 'value') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/parse.py', '__init__', 'context') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'pattern_convert', 'grammar') [Grammar,,, PgenGrammar]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'pattern_convert', 'raw_node_info') [Leaf,,, Node,,, tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'pattern_convert', 'type') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'pattern_convert', 'value') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'pattern_convert', 'context') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'pattern_convert', 'children') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/patcomp.py', 'pattern_convert', 'pattern_convert_ret') [Leaf,,, Node]
('/anaconda_lib/parso/python/tokenize.py', 'different_case_versions', 'prefix') [str]
('/anaconda_lib/parso/python/tokenize.py', 'different_case_versions', 'c') []
('/anaconda_lib/parso/python/tokenize.py', 'different_case_versions', 's') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_item', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_item', 'a') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_item', 'z') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_item', 'parse_item_ret') [tuple]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_item', 'value') [TokenInfo(type=0 (ENDMARKER), string='', start=(1, 0), end=(1, 0), line='')]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'unifystate', 'self') [DFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'unifystate', 'old') [DFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'unifystate', 'new') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'unifystate', 'label') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'unifystate', 'next') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_item', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_item', 'a') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_item', 'z') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_item', 'parse_item_ret') [tuple]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_item', 'value') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'unifystate', 'self') [DFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'unifystate', 'old') [DFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'unifystate', 'new') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'unifystate', 'label') []
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'unifystate', 'next') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'children') [None]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pytree.py', '__init__', 'ch') []
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_atom', 'self') [ParserGenerator]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_atom', 'a') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_atom', 'z') [NFAState]
('/anaconda_lib/autopep/autopep8_lib/lib2to3/pgen2/pgen.py', 'parse_atom', 'parse_atom_ret') [tuple]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_atom', 'self') [ParserGenerator]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_atom', 'a') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_atom', 'z') [NFAState]
('/anaconda_lib/jedi/parser/pgen2/pgen.py', 'parse_atom', 'parse_atom_ret') [tuple]