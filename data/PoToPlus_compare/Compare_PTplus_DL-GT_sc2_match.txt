0: ('/generate_id_constants_from_stableid.py', 'module_initializer', 'HEADER') 0 (Match)
  PT: ['str']
  DL: ['str']
1: ('/generate_id_constants_from_stableid.py', 'module_initializer', 'HOME_DIR') 0 (Match)
  PT: ['str']
  DL: ['str']
2: ('/generate_id_constants_from_stableid.py', 'module_initializer', 'DATA_JSON') 0 (Match)
  PT: ['dict']
  DL: ['dict']
3: ('/generate_id_constants_from_stableid.py', 'module_initializer', 'ENUM_TRANSLATE') 0 (Match)
  PT: ['dict']
  DL: ['dict']
4: ('/generate_id_constants_from_stableid.py', 'module_initializer', 'FILE_TRANSLATE') 0 (Match)
  PT: ['dict']
  DL: ['dict']
5: ('/generate_id_constants.py', 'module_initializer', 'HEADER') 0 (Match)
  PT: ['str']
  DL: ['str']
6: ('/generate_id_constants.py', 'module_initializer', 'PREFIXES') 0 (Match)
  PT: ['list']
  DL: ['list']
7: ('/examples/__init__.py', 'module_initializer', '__all__') 0 (Match)
  PT: ['list']
  DL: ['list']
8: ('/examples/terran/__init__.py', 'module_initializer', '__all__') 0 (Match)
  PT: ['list']
  DL: ['list']
9: ('/examples/zerg/__init__.py', 'module_initializer', '__all__') 0 (Match)
  PT: ['list']
  DL: ['list']
10: ('/examples/protoss/__init__.py', 'module_initializer', '__all__') 0 (Match)
  PT: ['list']
  DL: ['list']
11: ('/sc2/game_state.py', 'Common_class_initializer', 'ATTRIBUTES') 0 (Match)
  PT: ['list']
  DL: ['list']
12: ('/sc2/paths.py', 'module_initializer', 'BASEDIR') 0 (Match)
  PT: ['dict']
  DL: ['dict']
13: ('/sc2/paths.py', 'module_initializer', 'USERPATH') 0 (Match)
  PT: ['dict']
  DL: ['dict']
14: ('/sc2/paths.py', 'module_initializer', 'BINPATH') 0 (Match)
  PT: ['dict']
  DL: ['dict']
15: ('/sc2/paths.py', 'module_initializer', 'CWD') 0 (Match)
  PT: ['dict']
  DL: ['dict']
16: ('/sc2/__init__.py', 'module_initializer', '__all__') 0 (Match)
  PT: ['list']
  DL: ['list']
17: ('/sc2/game_data.py', 'module_initializer', 'FREE_MORPH_ABILITY_CATEGORIES') 0 (Match)
  PT: ['list']
  DL: ['list']
18: ('/sc2/data.py', 'module_initializer', 'race_worker') 0 (Match)
  PT: ['dict', 'Dict[Race, UnitTypeId]']
  DL: ['dict']
19: ('/sc2/data.py', 'module_initializer', 'race_townhalls') 0 (Match)
  PT: ['dict', 'Dict[Race, Set[UnitTypeId]]']
  DL: ['dict']
20: ('/sc2/data.py', 'module_initializer', 'warpgate_abilities') 0 (Match)
  PT: ['dict', 'Dict[AbilityId, AbilityId]']
  DL: ['dict']
21: ('/sc2/data.py', 'module_initializer', 'race_gas') 0 (Match)
  PT: ['dict', 'Dict[Race, UnitTypeId]']
  DL: ['dict']
22: ('/sc2/ids/__init__.py', 'module_initializer', '__all__') 0 (Match)
  PT: ['list']
  DL: ['list']
23: ('/sc2/helpers/__init__.py', 'module_initializer', '__all__') 0 (Match)
  PT: ['list']
  DL: ['list']
24: ('/sc2/maps.py', 'get', 'maps') 0 (Match)
  PT: ['list']
  DL: ['list']
25: ('/sc2/main.py', 'run_game', 'players') 0 (Match)
  PT: ['list']
  DL: ['list']
26: ('/sc2/main.py', 'run_game', 'host_only_args') 0 (Match)
  PT: ['list']
  DL: ['list']
27: ('/sc2/main.py', 'run_game', 'join_kwargs') 0 (Match)
  PT: ['dict']
  DL: ['dict']
28: ('/sc2/main.py', 'run_game', 'portconfig') 0 (Match)
  PT: ['Portconfig']
  DL: ['portconfig.Portconfig']
29: ('/sc2/bot_ai.py', 'can_afford', 'check_supply_cost') 0 (Match)
  PT: ['bool']
  DL: ['bool']
30: ('/sc2/bot_ai.py', 'can_afford', 'enough_supply') 0 (Match)
  PT: ['bool']
  DL: ['bool']
31: ('/sc2/bot_ai.py', 'already_pending', 'all_units') 0 (Match)
  PT: ['bool']
  DL: ['bool']
32: ('/sc2/position.py', 'towards', 'limit') 0 (Match)
  PT: ['bool']
  DL: ['bool']
33: ('/sc2/sc2process.py', '__init__', 'render') 0 (Match)
  PT: ['bool']
  DL: ['bool']
34: ('/sc2/sc2process.py', '__init__', 'fullscreen') 0 (Match)
  PT: ['bool']
  DL: ['bool']
35: ('/sc2/sc2process.py', '__init__', 'host') 0 (Match)
  PT: ['str']
  DL: ['str']
36: ('/sc2/bot_ai.py', '__init__', 'can_afford_minerals') 0 (Match)
  PT: ['bool']
  DL: ['bool']
37: ('/sc2/bot_ai.py', '__init__', 'can_afford_vespene') 0 (Match)
  PT: ['bool']
  DL: ['bool']
38: ('/sc2/bot_ai.py', '__init__', 'have_enough_supply') 0 (Match)
  PT: ['bool']
  DL: ['bool']
39: ('/sc2/bot_ai.py', 'select_build_worker', 'force') 0 (Match)
  PT: ['bool']
  DL: ['bool']
40: ('/sc2/renderer.py', '__init__', 'client') 0 (Match)
  PT: ['Client']
  DL: ['Client']
41: ('/sc2/main.py', '__init__', 'size') 0 (Match)
  PT: ['int']
  DL: ['int']
42: ('/sc2/bot_ai.py', '_prepare_start', 'client') 0 (Match)
  PT: ['Client']
  DL: ['Client']
43: ('/sc2/bot_ai.py', '_prepare_start', 'game_info') 0 (Match)
  PT: ['GameInfo']
  DL: ['GameInfo']
44: ('/sc2/bot_ai.py', '_prepare_start', 'game_data') 0 (Match)
  PT: ['GameData']
  DL: ['game_data.GameData']
45: ('/sc2/game_state.py', '__init__', 'game_data') 0 (Match)
  PT: ['GameData']
  DL: ['game_data.GameData']
46: ('/sc2/bot_ai.py', '_prepare_step', 'state') 0 (Match)
  PT: ['GameState']
  DL: ['game_state.GameState']
47: ('/sc2/main.py', 'push', 'value') 0 (Match)
  PT: ['float']
  DL: ['float']
48: ('/sc2/game_data.py', '__init__', 'ids') 0 (Match)
  PT: ['set']
  DL: ['set']
49: ('/sc2/units.py', '__init__', 'units') 0 (Match)
  PT: ['list']
  DL: ['list']
50: ('/sc2/units.py', '__init__', 'game_data') 0 (Match)
  PT: ['GameData']
  DL: ['game_data.GameData']
51: ('/sc2/game_data.py', '__init__', 'game_data') 0 (Match)
  PT: ['GameData']
  DL: ['GameData']
52: ('/sc2/units.py', 'filter', 'pred') 0 (Match)
  PT: ['<function <lambda> at 0x11824dc60>', '<function <lambda> at 0x11824dea0>', '<function <lambda> at 0x11824df30>', '<function <lambda> at 0x11824dfc0>', '<function <lambda> at 0x11824e4d0>', '<function <lambda> at 0x11824e560>', '<function <lambda> at 0x11824e830>', '<function <lambda> at 0x11824e950>', '<function <lambda> at 0x11824eb90>', '<function <lambda> at 0x11824eef0>', '<function <lambda> at 0x11824ef80>', '<function <lambda> at 0x11824f010>', '<function <lambda> at 0x11824f0a0>', '<function <lambda> at 0x11824f130>', '<function <lambda> at 0x11824f250>', '<function <lambda> at 0x11824f2e0>', '<function <lambda> at 0x11824f400>', '<function <lambda> at 0x11824f5b0>', '<function <lambda> at 0x11824f640>', '<function <lambda> at 0x11824f6d0>', '<function <lambda> at 0x11824f760>', '<function <lambda> at 0x11824f910>', '<function <lambda> at 0x11824fd00>', '<function <lambda> at 0x11824fd90>', '<function <lambda> at 0x11827fe20>', 'callable']
  DL: ['callable']
53: ('/sc2/game_info.py', '_find_ramps', 'rampDict') 0 (Match)
  PT: ['dict']
  DL: ['dict']
54: ('/sc2/game_info.py', '_find_ramps', 'rampGroups') 0 (Match)
  PT: ['list']
  DL: ['list']
55: ('/sc2/game_info.py', '_find_groups', 'max_distance_between_points') 0 (Match)
  PT: ['int']
  DL: ['int']
56: ('/sc2/game_info.py', '_find_groups', 'minimum_points_per_group') 0 (Match)
  PT: ['int']
  DL: ['int']
57: ('/sc2/game_info.py', '_find_groups', 'currentColor') 0 (Match)
  PT: ['int']
  DL: ['int']
58: ('/generate_id_constants.py', 'clike_enum_parse', 'enums') 0 (Match)
  PT: ['dict']
  DL: ['dict']
59: ('/generate_id_constants.py', 'generate_python_code', 'enums') 0 (Match)
  PT: ['dict']
  DL: ['dict']
60: ('/generate_id_constants.py', 'generate_python_code', 'sc2dir') 1 (Manual match)
  PT: ['sc2']
  DL: ['pathlib.Path']
61: ('/generate_id_constants.py', 'generate_python_code', 'code') 0 (Match)
  PT: ['list']
  DL: ['list']
62: ('/sc2/game_info.py', 'height_at', 'p') 0 (Match)
  PT: ['Point2']
  DL: ['position.Point2']
63: ('/sc2/game_info.py', 'top_center', 'pos') 0 (Match)
  PT: ['Point2']
  DL: ['position.Point2']
64: ('/sc2/game_info.py', 'bottom_center', 'pos') 0 (Match)
  PT: ['Point2']
  DL: ['position.Point2']
65: ('/sc2/client.py', 'debug_text_simple', 'text') 0 (Match)
  PT: ['str']
  DL: ['str']
66: ('/sc2/client.py', 'debug_text_screen', 'size') 0 (Match)
  PT: ['int']
  DL: ['int']
67: ('/sc2/client.py', 'debug_text_screen', 'text') 0 (Match)
  PT: ['str']
  DL: ['str']
68: ('/sc2/client.py', 'debug_text_2d', 'size') 0 (Match)
  PT: ['int']
  DL: ['int']
69: ('/sc2/client.py', 'debug_text_2d', 'text') 0 (Match)
  PT: ['str']
  DL: ['str']
70: ('/sc2/client.py', 'debug_text_world', 'size') 0 (Match)
  PT: ['int']
  DL: ['int']
71: ('/sc2/client.py', 'debug_text_world', 'text') 0 (Match)
  PT: ['str']
  DL: ['str']
72: ('/sc2/client.py', 'debug_text_3d', 'size') 0 (Match)
  PT: ['int']
  DL: ['int']
73: ('/sc2/client.py', 'debug_text_3d', 'text') 0 (Match)
  PT: ['str']
  DL: ['str']
74: ('/sc2/client.py', 'to_debug_message', 'size') 0 (Match)
  PT: ['int']
  DL: ['int']
75: ('/sc2/client.py', 'to_debug_message', 'text') 0 (Match)
  PT: ['str']
  DL: ['str']
76: ('/sc2/position.py', 'circle_intersection', 'offsetToCenter') 0 (Match)
  PT: ['Point2']
  DL: ['sc2.position.Point2']
77: ('/sc2/position.py', 'circle_intersection', 'offsetToCenterStretched') 0 (Match)
  PT: ['Point2']
  DL: ['sc2.position.Point2']
78: ('/sc2/position.py', 'circle_intersection', 'vectorRotated1') 0 (Match)
  PT: ['Point2']
  DL: ['sc2.position.Point2']
79: ('/sc2/position.py', 'circle_intersection', 'vectorRotated2') 0 (Match)
  PT: ['Point2']
  DL: ['sc2.position.Point2']
80: ('/sc2/units.py', 'take', 'require_all') 0 (Match)
  PT: ['bool']
  DL: ['bool']
81: ('/sc2/units.py', 'take', 'n') 0 (Match)
  PT: ['int']
  DL: ['int']
82: ('/sc2/units.py', 'random_or', 'other') 0 (Match)
  PT: ['any']
  DL: ['any']
83: ('/sc2/units.py', 'in_attack_range_of', 'unit') 0 (Match)
  PT: ['Unit']
  DL: ['unit.Unit']
84: ('/sc2/units.py', 'sorted', 'reverse') 0 (Match)
  PT: ['bool']
  DL: ['bool']
85: ('/sc2/units.py', 'sorted', 'keyfn') 0 (Match)
  PT: ['<function <lambda> at 0x11824f520>', 'callable']
  DL: ['callable']
86: ('/sc2/units.py', 'sorted_by_distance_to', 'reverse') 0 (Match)
  PT: ['bool']
  DL: ['bool']
87: ('/sc2/units.py', 'same_tech', 'tech_alias_types') 0 (Match)
  PT: ['set']
  DL: ['set']
88: ('/sc2/units.py', 'same_unit', 'unit_alias_types') 0 (Match)
  PT: ['set']
  DL: ['set']
89: ('/sc2/units.py', 'center', 'pos') 0 (Match)
  PT: ['Point2']
  DL: ['position.Point2']
90: ('/sc2/pixel_map.py', 'flood_fill', 'start_point') 0 (Match)
  PT: ['Point2']
  DL: ['position.Point2']
91: ('/sc2/pixel_map.py', 'save_image', 'data') 0 (Match)
  PT: ['list']
  DL: ['list']
92: ('/sc2/game_data.py', 'tech_alias', 'return_list') 0 (Match)
  PT: ['list']
  DL: ['list']
93: ('/sc2/bot_ai.py', 'expansion_locations', 'resource_groups') 0 (Match)
  PT: ['list']
  DL: ['list']
94: ('/sc2/bot_ai.py', 'expansion_locations', 'offsets') 0 (Match)
  PT: ['list']
  DL: ['list']
95: ('/sc2/bot_ai.py', 'expansion_locations', 'centers') 0 (Match)
  PT: ['dict']
  DL: ['dict']
96: ('/sc2/bot_ai.py', 'owned_expansions', 'owned') 0 (Match)
  PT: ['dict']
  DL: ['dict']
97: ('/generate_id_constants_from_stableid.py', 'parse_data', 'abilities') 0 (Match)
  PT: ['dict']
  DL: ['dict']
98: ('/generate_id_constants_from_stableid.py', 'parse_data', 'enums') 0 (Match)
  PT: ['dict']
  DL: ['dict']
99: ('/generate_id_constants_from_stableid.py', 'parse_simple', 'units') 0 (Match)
  PT: ['dict']
  DL: ['dict']
100: ('/generate_id_constants_from_stableid.py', 'parse_simple', 'tmp') 0 (Match)
  PT: ['str']
  DL: ['str']
101: ('/generate_id_constants_from_stableid.py', 'generate_python_code', 'code') 0 (Match)
  PT: ['list']
  DL: ['list']
102: ('/examples/host_external_norestart.py', 'main', 'player_config') 0 (Match)
  PT: ['list']
  DL: ['list']
103: ('/examples/arcade_bot.py', 'position_around_unit', 'distance') 0 (Match)
  PT: ['int']
  DL: ['int']
104: ('/examples/arcade_bot.py', 'position_around_unit', 'step_size') 0 (Match)
  PT: ['int']
  DL: ['int']
105: ('/examples/arcade_bot.py', 'position_around_unit', 'exclude_out_of_bounds') 0 (Match)
  PT: ['bool']
  DL: ['bool']
106: ('/examples/fastreload.py', 'main', 'player_config') 0 (Match)
  PT: ['list']
  DL: ['list']
107: ('/examples/run_external.py', 'main', 'player_config') 0 (Match)
  PT: ['list']
  DL: ['list']
108: ('/sc2/sc2process.py', '_launch', 'args') 0 (Match)
  PT: ['list']
  DL: ['list']
109: ('/sc2/bot_ai.py', 'on_end', 'game_result') 0 (Match)
  PT: ['Result']
  DL: ['data.Result']
